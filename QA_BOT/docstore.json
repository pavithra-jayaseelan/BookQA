{"docstore/data": {"fa6e7e0b-b354-4700-a36a-12e82722c889": {"__data__": {"id_": "fa6e7e0b-b354-4700-a36a-12e82722c889", "embedding": null, "metadata": {"page_label": "1", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e49f9c0-95ac-4d76-b819-6736f27a9536", "node_type": "4", "metadata": {"page_label": "1", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "8bad9e52f35e16e543e66d544d1f9086f8f12b1ede397e172ddd2dcd18eaf370", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "959d2849-7d04-44cc-95a1-6b0edc646919", "node_type": "1", "metadata": {}, "hash": "91c2954a73f34b6d88ce655c7f0ca98f1dab7ad81181fd879d7313f805a5c5d5", "class_name": "RelatedNodeInfo"}}, "text": "Introduction to Mobile Computi ng \n \nThe rapidly expanding  technology o f cellular communication , wireless LANs, and \nsatellite services w ill make infor mation accessible anywhere and at any t ime. Regardless  of \nsize, most  mo bile computers w ill be equipped  with  a wirele ss connection to the fixed part of the   \nnetwork,   and ,   p erhaps,   to   oth er   mo bile   computers.   Th e   resu lting   comp uting \nenvironment,  wh ich  is  o ften  ref erred  to  as  mobile or nomadic  comput ing,  no  longer \nrequires  users  to  main tain  a  fixed  an d  un iversally  kn own  p osition  in  the  network  and \ne\nnables almo st un restricted mobility. Mobility an d portabil ity w ill create an entire new  class of \napplications and, possibly , n ew massive markets combining personal computing and con sumer \nelectronic s. \n Mobi le Computing is an umbrella term us ed to de scribe tech nologies that enable peo ple \nto access netw ork services anyplace, a nyt ime, and anywhe re. \n A commun ication  device c an exhibit any one of the follo wing characteristics: \n1. F i x e d  and w ired: This  configu ration descri bes the typ ical desktop computer in an  office. \nNeither weigh t nor power consumption of the devices allo w for mobile usage. Th e \ndevices use fixed  network s for performan ce reasons. \n2. M o b i l e  and w ired: Many of today\u2019s laptops fall into th is category; users carry the laptop \nfrom one hotel to the n ext ,  reconnec ting to  the compan y \u2019s  network via the telephone \nnetwork an d a modem. \n3. F i x e d  and w ireless : Th is mod e is used for installing  network s, e.g., in historical \nbuilding s to avoid damage by installing wires, or at t rade sho ws to ensure fast network \nsetup. \n4. M o b i l e  and w ireless : This is the mo st interesting  case.  No cable restricts the u ser, who \ncan roam between  different wirele ss network s. Most t echnologie s discussed in th is book \ndeal with  this typ e of device an d the network s supp orting them. To day\u2019s m ost success ful \nexamp le for this category is GSM with  more than 800 million users. \n \nAPPLICAT IONS OF MOBILE COMPUTING  \nIn many f ields of work, th e ability to keep on the mo ve is vital in order to utilise \ntime efficiently. Th e importance of Mob ile Compute rs has been highlighted in many fi elds of \nwhich a few are descri bed below: \n1. Vehicles: Musi c,  news,  road  co nditions,  we ather  rep orts,  an d  other  broadcas t \ni\nnformation  are  received  via  digital  aud io  bro adcasting  (DAB )  with 1.5  Mb it/s.  \nFor personal comm unicatio n, a universal mobile t elecommunicat ions syst em (UMTS) \nphone migh t be availab le offering voice an d dat a connectivity with  384 kbit/s. The \ncurrent position  of the c ar is d etermined  via the global positioning syst em (GPS). Cars \ndriving in the same area bu ild a lo cal ad-hoc network for the  fast exchange of  \ninformation  in emerg ency situation s or to  help  each o the r k eep a safe distance. In  case \nof an accide nt, not on ly will the  airbag  be triggered,  but the police an d ambulance \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "959d2849-7d04-44cc-95a1-6b0edc646919": {"__data__": {"id_": "959d2849-7d04-44cc-95a1-6b0edc646919", "embedding": null, "metadata": {"page_label": "2", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a838943-8428-41d7-8835-a3bd62e15936", "node_type": "4", "metadata": {"page_label": "2", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "4a5dfd99bbcad92378cd5fa4d180f5eaa9fc0714d88e5cb75c67be5c7c962236", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa6e7e0b-b354-4700-a36a-12e82722c889", "node_type": "1", "metadata": {"page_label": "1", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "8bad9e52f35e16e543e66d544d1f9086f8f12b1ede397e172ddd2dcd18eaf370", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a013823f-f1e8-4cdb-b50f-2677363344ae", "node_type": "1", "metadata": {}, "hash": "da69034d4c147a03b870be3dcb7c1f0c95c2731f28509dbfef0000555c4f0d0c", "class_name": "RelatedNodeInfo"}}, "text": "service w ill be inf ormed  via  an  em ergency  call  to  a  service provider.  Buses, truck s,  \nand trains  are already t ransmitting maintenan ce  and logist ic information  to their h ome \nbase, which h elps to improve organ ization (f leet man agement),  and saves ti me and \nmoney. \n2. Emergencies : An ambulance with  a high-quality wirele ss connection to a hospital c an \ncarry v ital inform ation about injured person s to th e hospital from th e scene of th e \naccident. All the necessa ry step s for this particular type of accident can be pr epared and \nspecialist s can be consu lted for an  early d iagnosis. Wireless  network s are the on ly mean s \nof co mmu nication  in th e case of n atural d isasters such  as hurrican es or e arthquakes. In \nthe worst  cases, only decent ralized , wirele ss ad-hoc networks survive. \n3. Business : Man agers c an use mobile computers say, c ritical presentat ions to  major \ncustomer s. They can access the latest market share informat ion .  At a small recess, they \nc\nan   revise   th e   presentation   to   tak e   ad vantage   of   th is   in formatio n.   They   ca n \nc\nommun icate with  the o ffi ce ab out possible n ew offers an d call meetings for dis c ussing \nresponds to the new proposals. Th erefore,  mobile compu ters c an leverage competitive \na\ndvantages.  A  travelling  salesman  to day  need s  instant  access  t o  the   compan y \u2019s \ndatabase: to  ensure that fil es on his or h er lap top reflect the cu rrent situation, to enable \nthe  compan y  to  k eep  track  of  all  activities  o f  their  travelling  employees,  to  keep \ndatabases co nsistent  etc. With wirele ss access, the lap top can be turned into a tru e \nmobile office, but efficient an d powerful syn chronization mechanisms are needed  to \nensure data consistenc y. \n4. Credit  Ca rd  Ver ification:  At  Point  of  Sale  (POS)  t erm in als  in  shops  an d \nSupermarkets, wh en custo mers u se credit cards for transactions, the intercommun ication \nrequired between  the bank central comp uter and th e POS t erminal, in order to  effect \nverification of the card u sage, c an take place quickly and secu rely over cellular channels \nusing a mobile computer unit.  This can spee d up the tran saction pro cess and  relieve \ncongestion at the POS t erm in als. \n5. Replacement of Wir ed Networks:  wirele ss networks can also b e used to rep lace wired \nnetwork s, e.g., remote sensors, for tradeshow s, or in historic bu ildings. Due to economic \nr\neason s, it is often impossible to  wire remo te sensors for we ather forec asts, ear thquake \ndetection, or to provide environment al informat ion.  Wireless co nnections,  e.g., via \nsatellite, can  help in this situation. Other exampl es for wireless n etwork s are compu ters, \nsensors, or information dis plays in historical buil dings, where excess cabli ng may \ndestroy valuab le walls or floors. \n6. Infotainment :   wireless   network s   can   p rovide   u p-to-date   in formation   at   an y \nappro priate locatio n. The travel gu ide might tell you some thi ng ab out the hist ory of a \nbuilding (knowing via GPS, co ntact to a local base stat ion , or t riangulation whe re you \nare) downloading information abo ut a con cert in the building at the same evening via a \nlocal wirele ss network. Another  growing field of wirele ss  network a pplications lies in \nentertain ment  and games to enable, e.g., ad-hoc gaming network s as soon as p eople \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a013823f-f1e8-4cdb-b50f-2677363344ae": {"__data__": {"id_": "a013823f-f1e8-4cdb-b50f-2677363344ae", "embedding": null, "metadata": {"page_label": "3", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74d7863d-235f-450c-ad38-7d890a775ff6", "node_type": "4", "metadata": {"page_label": "3", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "92e133cfdc495313f38f2103bf5d8eab96ea3033b1989f298725c6a1aa7f3f37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "959d2849-7d04-44cc-95a1-6b0edc646919", "node_type": "1", "metadata": {"page_label": "2", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "4a5dfd99bbcad92378cd5fa4d180f5eaa9fc0714d88e5cb75c67be5c7c962236", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2140d8fb-3d04-4914-a911-38553d7ebdf5", "node_type": "1", "metadata": {}, "hash": "76d7b64ea607754076d9d5845a0559b830487c5e1872d4b2cc3685f63153e3f8", "class_name": "RelatedNodeInfo"}}, "text": "meet to play together. \n \nLimitat ion s of Mobile Co mputing \n \nResource co nstraints: Battery \nInterf erenc e:  Rad io transmission cann ot be protected against interference usi ng shiel ding an d \nresult in higher loss rat es for trans mitted data or h igher bit error rates resp ectively \nBandwidth: Although they are co ntinuously increa sing, tran smission rat es are still very low \nfor wireless devices comp are d to desktop systems. Researchers loo k  for more  efficien t \ncommun ication p rotocols with low overh ead. \nDynamic changes in communication environment:  variation s in signal power within  a region , \nthus link delays an d connection losses \nN\network Issues:  discovery of the connection-s ervice to d estination an d connection stabil ity \nInteroperability issues: the varying protocol standar ds \nSecu rity constraints:  Not on ly can portab le devices be sto len more easily, but the rad io \ninterface is also p rone to the dangers of eavesd ropping. Wir eless access mu st always includ e \nencryption , auth enticatio n, and other security mech anisms that  mu st be efficien t and  simple to \nuse. \n \nA SIMPLIFIED REFERENCE MOD EL \nThe figure shows the protocol stack implement ed in th e syst em according to the \nreference mod el. End-systems , such as the PDA an d comp uter in the example, ne ed a full \nprotocol st ack comp rising the ap plication  layer,  transport layer, netwo rk layer, d ata link layer, \na\nnd physic al layer. A pplicat ions on  the end-systems commu nicate with  each o ther using the \nlower layer services. Intermediate systems, such as the in terwork ing u nit, do not necessarily \nneed all of th e layers. \n \n \nA Sim plified Refer ence Model  \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2140d8fb-3d04-4914-a911-38553d7ebdf5": {"__data__": {"id_": "2140d8fb-3d04-4914-a911-38553d7ebdf5", "embedding": null, "metadata": {"page_label": "4", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0790773d-bd6f-464c-9cd6-2aab40add7f1", "node_type": "4", "metadata": {"page_label": "4", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "142a61025357fd46030637c5edf12b273c6f8efe66d1559d4c1d06b3a6b519b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a013823f-f1e8-4cdb-b50f-2677363344ae", "node_type": "1", "metadata": {"page_label": "3", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "92e133cfdc495313f38f2103bf5d8eab96ea3033b1989f298725c6a1aa7f3f37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22701fa7-850d-4700-b84e-6ddd82dd71b2", "node_type": "1", "metadata": {}, "hash": "f5dfddd2a3d06f3035a9c1c9b6de7cbd125a805aed64775f6b3494e1f4a089d4", "class_name": "RelatedNodeInfo"}}, "text": "a) Physica l layer : This is the low est layer in a communication system and  is responsible \nfor the conv ersion  of a stream of bits into sign als that can be transmitted  on the sender \nside.\n The p hysical layer of the receiver then transforms the signals back in to a bit stream.  \nFor wireless communication, the p hysical layer is responsible for frequency selection, \ng\neneration  of the carrier frequ ency, signal de tection (altho ugh heavy interference may \ndisturb  the signal), modulation of d ata onto a carrier frequen cy and  (depending on the \ntra\nnsmission scheme) encryption. \nb) Data link layer : The main tasks of this layer include accessing the medi um, multiplexing \nof dif ferent d ata str eams, correction of transmi ssion erro rs, and  synchronization (i.e ., \ndetection of a d ata frame). Altogether,  the d ata link  layer is responsible for a reliable \npoint- to-point conn ection between two devi ces or a point- to-multipoint connection \nbetween one send er and severa l r eceiver s. \nc) Netwo rk  layer : This third layer is responsible for routing packe ts thr ou gh a n etwork \nor establishing  a  connection  b etween  two  entit ies  over  many  othe r  intermediate  \nsystems. Important functions a re addre ssing, routing, device location,  and handover \nbetween different network s. \nd) Transpor t  layer : This layer is used  in the reference model to establish an end -to-\nend conn ection \ne) Application layer : Finally, the app lications (complemented  by add itional layers th at \ncan sup port ap plication s) are situated on top of all t ransmission  oriented layers. \nF\nunctions are service location, su pport f or multimedia  ap plication s, adaptiv e app licatio ns \nthat can handle the large variation s in tran smission characteristic s, and wireless access \nto the world-wid e web using a portable device. \n \nMedia Access Control (MAC ) \nThe Media Access Control (MAC ) data communication protocol sub-layer, also known \nas the Medium Access Control, is a sublayer of the Data Link Layer specified in the seven-layer \nOSI model (layer 2). The hardware that implements the MAC is referred to as a Medium Access \nController . The MAC sub-layer acts as an interface between the Logical Link Control (LLC) \nsublayer and the network's physical layer. The MAC layer emulates a full-duplex logical \ncommunication channel in a multi-point network. This channel may provide unicast, multicast or \nbroadcast communication service. \n \n \nLLC and MAC sublayers \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22701fa7-850d-4700-b84e-6ddd82dd71b2": {"__data__": {"id_": "22701fa7-850d-4700-b84e-6ddd82dd71b2", "embedding": null, "metadata": {"page_label": "5", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63fa64a4-bf03-4844-afe7-002aeae3a6ce", "node_type": "4", "metadata": {"page_label": "5", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "28d3944c3f3d328c16bfb35b9e467f5b93af610f2357acd7595b2d733f96f875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2140d8fb-3d04-4914-a911-38553d7ebdf5", "node_type": "1", "metadata": {"page_label": "4", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "142a61025357fd46030637c5edf12b273c6f8efe66d1559d4c1d06b3a6b519b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e92555e8-9b3d-4de1-8d38-6d2fb9b76e94", "node_type": "1", "metadata": {}, "hash": "4f79ce94d021869abe0fcd1b17f93bd13ed6064c789699cd148079ab572bacc4", "class_name": "RelatedNodeInfo"}}, "text": "Motivation for a specialized MAC  \nOne of the most commonly used MAC schemes for wired networks is carrier sense multiple \naccess with collision detection (CSMA/CD). In this scheme, a sender senses the medium (a wire \nor coaxial cable) to see if it is free. If the medium is busy, the sender waits until it is free. If the \nmedium is free, the sender starts transmitting data and continues to listen into the medium. If the \nsender detects a collision while sending, it stops at once and sends a jamming signal. But this \nscheme doest work well with wireless networks. The problems are:  \na) Signal strength decreases proportional to the square of the distance  \nb) The sender would apply CS and CD, but the collisions happen at the receiver  \nc) It might be a case that a sender cannot \u201chear\u201d the collision, i.e., CD do es not work  \nd) Furthermore, CS might not work, if for e.g., a terminal is \u201chidden\u201d  \n \nHidden and Exposed Terminals  \nConsider the scenario with three mobile phones as shown below. The transmission range \nof A reaches B, but not C (the detection range does not reach C either). The transmission range of \nC reaches B, but not A. Finally, the transmission range of B reaches A and C, i.e., A cannot detect \nC and vice versa.  \n \nHidden terminals  \na) A sends to B, C cannot hear A  \nb) C wants to send to B, C senses a \u201cfree\u201d medium (CS fails) and starts transmitting  \nc) Collision at B occurs, A cannot detect this collision (CD fails) and continues with its \ntransmission to B  \nd) A is \u201chidden\u201d from C and vice versa  \n \nExposed terminals  \na) B sends to A, C wants to send to another terminal (not A or B) outside the range  \nb) C senses the carrier and detects that the carrier is busy.  \nc) C postpones its transmission until it detects the medium as being idle again  but A is outside \nradio range of C, waiting is not necessary  \nd) C is \u201cexposed\u201d to B  \n \nHidden terminals cause collisions, where as Exposed terminals causes unnecessary delay.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 2, "end_char_idx": 2011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e92555e8-9b3d-4de1-8d38-6d2fb9b76e94": {"__data__": {"id_": "e92555e8-9b3d-4de1-8d38-6d2fb9b76e94", "embedding": null, "metadata": {"page_label": "6", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3e55281c-63ea-41f7-a3f5-7f7233b9b988", "node_type": "4", "metadata": {"page_label": "6", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "78c1a255ad93deb04714559483a3872740b493ac60e3f850dfc30976dd3063ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22701fa7-850d-4700-b84e-6ddd82dd71b2", "node_type": "1", "metadata": {"page_label": "5", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "00ae3becf3532e8fe588206e4756292eaba4459a9b35d2e93e492ad287eafaf2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e1612c8-a85b-4f77-9d6a-24328aa3e33a", "node_type": "1", "metadata": {}, "hash": "1d4ced29c93d3179d82ae36000b97fe7a0e442414ad8096b54470df125ffd82e", "class_name": "RelatedNodeInfo"}}, "text": "Near and far terminals  \nConsider the situation shown below. A and B are both sending with the same transmission power.  \na) Signal strength decreases proportional to the square of the distance  \nb) So, B\u2019s signal drowns out A\u2019s signal making C unable to receive A\u2019s transmission  \nc) If C is an arbiter for sending rights, B drown out A\u2019s signal on the physical layer making \nC unable to hear out A.  \n \n The near/far effect is a severe problem of wireless networks using CDM. All signals \nshould arrive at the receiver with more or less the same strength for which Precise power control \nis to be implemented.  \n \nSDMA  \nSpace Division Multiple Access (SDMA) is used for allocating a separated space to users \nin wireless networks. A typical application involves assigning an optimal base station to a mobile \nphone user. The mobile phone may receive several base stations with different quality. A MAC \nalgorithm could now decide which base station is best, taking into account which frequencies \n(FDM), time slots (TDM) or code (CDM) are still available. The basis for the SDMA algorithm is \nformed by cells and sectorized antennas which constitute the infrastructure implementing space \ndivision multiplexing (SDM). SDM has the unique advantage of not requiring any multiplexing \nequipment. It is usually combined with other multiplexing techniques to better utilize the \nindividual physical channels.  \n \nFDMA  \nFrequency division multiplexing (FDM) describes schemes to subdivide the frequency \ndimension into several non-overlapping frequency bands.  \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1593, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e1612c8-a85b-4f77-9d6a-24328aa3e33a": {"__data__": {"id_": "0e1612c8-a85b-4f77-9d6a-24328aa3e33a", "embedding": null, "metadata": {"page_label": "7", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9502e622-ee02-4141-87b4-965247a57c4f", "node_type": "4", "metadata": {"page_label": "7", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "1ccee2d67d862ac487cabf17e566fe33ed1d5e6f01ff072cab82c75b4c907ac6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e92555e8-9b3d-4de1-8d38-6d2fb9b76e94", "node_type": "1", "metadata": {"page_label": "6", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "78c1a255ad93deb04714559483a3872740b493ac60e3f850dfc30976dd3063ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ea597ed-341a-4884-9966-5929bff91893", "node_type": "1", "metadata": {}, "hash": "40bd9d4cd6231021cfc77b3aff9a791f0050e357c021505025a8c1c7c54e35ef", "class_name": "RelatedNodeInfo"}}, "text": "Frequency Division Multiple Access is a method employed to permit several users to \ntransmit simultaneously on one satellite transponder by assigning a specific frequency within the \nchannel to each user. Each conversation gets its own, unique, radio channel. The channels are \nrelatively narrow, usually 30 KHz or less and are defined as either transmit or receive channels. A \nfull duplex conversation requires a transmit & receive channel pair. FDM is often used for \nsimultaneous access to the medium by base station and mobile station in cellular networks \nestablishing a duplex channel. A scheme called frequency division duplexing (FDD) in which \nthe two directions, mobile station to base station and vice versa are now separated using different \nfrequencies.  \n \nFDM for multiple access and duplex  \n \nThe two frequencies are also known as uplink , i.e., from mobile station to base station or \nfrom ground control to satellite, and as downlink , i.e., from base station to mobile station or from \nsatellite to ground control. The basic frequency allocation scheme for GSM is fixed and regulated \nby national authorities. All uplinks use the band between 890.2 and 915 MHz, all downlinks use \n935.2 to 960 MHz. According to FDMA, the base station, shown on the right side, allocates a \ncertain frequency for up- and downlink to establish a duplex channel with a mobile phone. Up- \nand downlink have a fixed relation. If the uplink frequency is fu = 890 MHz + n\u00b70.2 MHz, the \ndownlink frequency is fd = fu + 45 MHz, i.e ., fd = 935 MHz + n\u00b70.2 MHz for a certain channel \nn. The base station selects the channel. Each channel (uplink and downlink) has a bandwidth of \n200 kHz.  \nThis scheme also has disadvantages. While radio stations broadcast 24 hours a day, mobile \ncommunication typically takes place for only a few minutes at a time. Assigning a separate \nfrequency for each possible communication scenario would be a tremendous waste of (scarce) \nfrequency resources. Additionally, the fixed assignment of a frequency to a sender makes the \nscheme very inflexible and limits the number of senders.  \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2149, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ea597ed-341a-4884-9966-5929bff91893": {"__data__": {"id_": "3ea597ed-341a-4884-9966-5929bff91893", "embedding": null, "metadata": {"page_label": "8", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb9aff04-304f-4140-8f46-6e9b29d2bfc0", "node_type": "4", "metadata": {"page_label": "8", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "f5e313331e3ecaded1b74efd467ebcec25c66b30eb5b2a5e170e9d69012f0545", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e1612c8-a85b-4f77-9d6a-24328aa3e33a", "node_type": "1", "metadata": {"page_label": "7", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "1ccee2d67d862ac487cabf17e566fe33ed1d5e6f01ff072cab82c75b4c907ac6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "812a6846-8147-4c8d-84c8-c77f51709f66", "node_type": "1", "metadata": {}, "hash": "5f5b9de92ccb8c0884fe97b0adc66090400cd628e58027ae3cfa3eb61fea3ed0", "class_name": "RelatedNodeInfo"}}, "text": "TDMA  \nA more flexible multiplexing scheme for typical mobile communications is time division \nmultiplexing (TDM). Compared to FDMA, time division multiple access (TDMA) offers a much \nmore flexible scheme, which comprises all technologies that allocate certain time slots for \ncommunication. Now synchronization between sender and receiver has to be achieved in the time \ndomain. Again this can be done by using a fixed pattern similar to FDMA techniques, i.e., \nallocating a certain time slot for a channel, or by using a dynamic allocation scheme.  \n \n \nListening to different frequencies at the same time is quite difficult, but listening to many \nchannels separated in time at the same frequency is simple. Fixed schemes do not need \nidentification, but are not as flexible considering varying bandwidth requirements.  \n \nFixed TDM  \nThe simplest algorithm for using TDM is allocating time slots for channels in a fixed \npattern. This results in a fixed bandwidth and is the typical solution for wireless phone systems. \nMAC is quite simple, as the only crucial factor is accessing the reserved time slot at the right \nmoment. If this synchronization is assured, each mobile station knows its turn and no interference \nwill happen. The fixed pattern can be assigned by the base station, where competition between \ndifferent mobile stations that want to access the medium is solved.  \n \n \nThe\n above figure shows how these fixed TDM patterns are used to implement multiple \naccess and a duplex channel between a base station and mobile station. Assigning different slots \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "812a6846-8147-4c8d-84c8-c77f51709f66": {"__data__": {"id_": "812a6846-8147-4c8d-84c8-c77f51709f66", "embedding": null, "metadata": {"page_label": "9", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "217c53d7-bca6-4d79-a419-2f9300a85d81", "node_type": "4", "metadata": {"page_label": "9", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "8a01a3f1c3803fa9f34a51eaf7e0d1aa253cce29dcf3a493a9f051d1d3fedb36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ea597ed-341a-4884-9966-5929bff91893", "node_type": "1", "metadata": {"page_label": "8", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "f5e313331e3ecaded1b74efd467ebcec25c66b30eb5b2a5e170e9d69012f0545", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33cb6383-1700-421c-800e-deb5b81826b6", "node_type": "1", "metadata": {}, "hash": "3b96edec93a2c7507304d9877b2d6aeccebd9f4736ae934963de101578f4b8d0", "class_name": "RelatedNodeInfo"}}, "text": "for uplink and downlink using the same frequency is called time division duplex (TDD). As \nshown in the figure, the base station uses one out of 12 slots for the downlink, whereas the mobile \nstation uses one out of 12 different slots for the uplink. Uplink and downlink are separated in time. \nUp to 12 different mobile stations can use the same frequency without interference using this \nscheme. Each connection is allotted its own up- and downlink pair. This general scheme still \nwastes a lot of bandwidth. It is too static, too inflexible for data communication. In this case, \nconnectionless, demand-oriented TDMA schemes can be used. \n \nClassical Aloha  \nIn this scheme, TDM is applied without controlling medium access. Here each station can \naccess the medium at any time as shown below:  \n \n \nThis is a random access scheme, without a central arbiter controlling access and without \ncoordination among the stations. If two or more stations access the medium at the same time, a \ncollision occurs and the transmitted data is destroyed. Resolving this problem is left to higher \nlayers (e.g., retransmission of data). The simple Aloha works fine for a light load and does not \nrequire any complicated access mechanisms.  \n \nSlotted Aloha  \nThe first refinement of the classical Aloha scheme is provided by the introduction of time \nslots ( slotted Aloha ). In this case, all senders have to be synchronized , transmission can only start \nat the beginning of a time slot as shown below.  \n \nThe introduction of slots raises the throughput from 18 per cent to 36 per cent, i.e., slotting \ndoubles the throughput. Both basic Aloha principles occur in many systems that implement \ndistributed access to a medium. Aloha systems work perfectly well under a light load, but they \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1812, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33cb6383-1700-421c-800e-deb5b81826b6": {"__data__": {"id_": "33cb6383-1700-421c-800e-deb5b81826b6", "embedding": null, "metadata": {"page_label": "10", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd0918a7-7631-46d5-baeb-1f7a2ebd1f4d", "node_type": "4", "metadata": {"page_label": "10", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "9f639d0ac345956ee201d6ff7384fbcd40e4e2f5f52b85b63323406d20e4c148", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "812a6846-8147-4c8d-84c8-c77f51709f66", "node_type": "1", "metadata": {"page_label": "9", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "8a01a3f1c3803fa9f34a51eaf7e0d1aa253cce29dcf3a493a9f051d1d3fedb36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "146afe32-5e85-4889-9088-176ea751dfc9", "node_type": "1", "metadata": {}, "hash": "a89f88aed7dc6ef4c78e1814dc6d87bc768e70ab803b1cb2efcc13ebe035d038", "class_name": "RelatedNodeInfo"}}, "text": "cannot give any hard transmission guarantees, such as maximum delay before accessing the \nmedium or minimum throughput.  \n \nCarrier sense multiple access  \nOne improvement to the basic Aloha is sensing the carrier before accessing the medium. \nSensing the carrier and accessing the medium only if the carrier is idle decreases the probability \nof a collision. But, as already mentioned in the introduction, hidden terminals cannot be detected, \nso, if a hidden terminal transmits at the same time as another sender, a collision might occur at the \nreceiver. This basic scheme is still used in most wireless LANs. The different versions of CSMA \nare:  \na) 1-persistent CSMA : Stations sense the channel and listens if its busy and transmit \nimmediately, when the channel becomes idle. It\u2019s called 1 -persistent CSMA because the \nhost transmits with a probability of 1 whenever it finds the channel idle.  \nb) non-persistent CSMA : stations sense the carrier and start sending immediately if the \nmedium is idle. If the medium is busy, the station pauses a random amount of time before \nsensing the medium again and repeating this pattern.  \nc) p-persistent CSMA : systems nodes also sense the medium, but only transmit with a \nprobability of p, with the station deferring to the next slot with the probability 1-p, i.e., \naccess is slotted in addition  \nCSMA with collision avoidance ( CSMA/CA ) is one of the access schemes used in wireless \nLANs following the standard IEEE 802.11. Here sensing the carrier is combined with a back-off \nscheme in case of a busy medium to achieve some fairness among competing stations.  \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "146afe32-5e85-4889-9088-176ea751dfc9": {"__data__": {"id_": "146afe32-5e85-4889-9088-176ea751dfc9", "embedding": null, "metadata": {"page_label": "11", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69cb6558-16d1-4967-8dbb-bdc60e880d62", "node_type": "4", "metadata": {"page_label": "11", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3d50c2c09440d5fa30f87c650021bb2310494905b9548585263fe715e72e55e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33cb6383-1700-421c-800e-deb5b81826b6", "node_type": "1", "metadata": {"page_label": "10", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "9f639d0ac345956ee201d6ff7384fbcd40e4e2f5f52b85b63323406d20e4c148", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ea35cdb-1ece-4888-bf1e-0832330df35d", "node_type": "1", "metadata": {}, "hash": "024ca3b6097e3034f3356b1444f2d513f6233d05e6600633bba28ed4eefa732a", "class_name": "RelatedNodeInfo"}}, "text": "Demand assigned multiple access  \nChannel efficiency for Aloha is 18% and for slotted Aloha is 36%. It can be increased to \n80% by implementing reservation mechanisms and combinations with some (fixed) TDM patterns. \nThese schemes typically have a reservation period followed by a transmission period. During the \nreservation period, stations can reserve future slots in the transmission period. While, depending \non the scheme, collisions may occur during the reservation period, the transmission period can \nthen be accessed without collision.  \nOne basic scheme is demand assigned multiple access (DAMA) also called reservation \nAloha , a scheme typical for satellite systems. It increases the amount of users in a pool of satellite \nchannels that are available for use by any station in a network. It is assumed that not all users will \nneed simultaneous access to the same communication channels. So that a call can be established, \nDAMA assigns a pair of available channels based on requests issued from a user. Once the call is \ncompleted, the channels are returned to the pool for an assignment to another call. Since the \nresources of the satellite are being used only in proportion to the occupied channels for the time in \nwhich they are being held, it is a perfect environment for voice traffic and data traffic in batch \nmode.  \nIt has two modes as shown below.  \n \n \nDuring a contention phase following the slotted Aloha scheme; all stations can try to \nreserve future slots. Collisions during the reservation phase do not destroy data transmission, but \nonly the short requests for data transmission. If successful, a time slot in the future is reserved, and \nno other station is allowed to transmit during this slot. Therefore, the satellite collects all successful \nrequests (the others are destroyed) and sends back a reservation list indicating access rights for \nfuture slots. All ground stations have to obey this list. To maintain the fixed TDM pattern of \nreservation and transmission, the stations have to be synchronized from time to time. DAMA is an \nexplicit reservation scheme. Each transmission slot has to be reserved explicitly.  \n \nPRMA packet reservation multiple access  \nIt is a kind of implicit reservation scheme where, slots can be reserved implicitly. A certain \nnumber of slots form a frame. The frame is repeated in time i.e., a fixed TDM pattern is applied. \nA base station, which could be a satellite, now broadcasts the status of each slot to all mobile \nstations. All stations receiving this vector will then know which slot is occupied and which slot is \ncurrently free.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2650, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ea35cdb-1ece-4888-bf1e-0832330df35d": {"__data__": {"id_": "1ea35cdb-1ece-4888-bf1e-0832330df35d", "embedding": null, "metadata": {"page_label": "12", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c68b96f-baa9-41e5-9dd7-63cb3914dee6", "node_type": "4", "metadata": {"page_label": "12", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d35f088be448b44efccd3a480ae99730daec390055b1dc028a7cc9781a5e4c73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "146afe32-5e85-4889-9088-176ea751dfc9", "node_type": "1", "metadata": {"page_label": "11", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3d50c2c09440d5fa30f87c650021bb2310494905b9548585263fe715e72e55e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f77b719-d0d8-436d-90f0-82abda3c8e94", "node_type": "1", "metadata": {}, "hash": "5863d82fabea0701e5cc64483a1083692d2afb462fba91c728d5f19f067c58d3", "class_name": "RelatedNodeInfo"}}, "text": "The base station broadcasts the reservation status \u2018ACDABA -F\u2019 to all stations, here A to \nF. This means that slots one to six and eight are occupied, but slot seven is free in the following \ntransmission. All stations wishing to transmit can now compete for this free slot in Aloha fashion. \nThe already occupied slots are not touched. In the example shown, more than one station wants to \naccess this slot, so a collision occurs. The base station returns the reservation status \u2018ACDABA -\nF\u2019, indicating that the reser vation of slot seven failed (still indicated as free) and that nothing has \nchanged for the other slots. Again, stations can compete for this slot. Additionally, station D has \nstopped sending in slot three and station F in slot eight. This is noticed by the base station after the \nsecond frame. Before the third frame starts, the base station indicates that slots three and eight are \nnow idle. Station F has succeeded in reserving slot seven as also indicated by the base station.  \nAs soon as a station has succeeded with a reservation, all future slots are implicitly reserved \nfor this station. This ensures transmission with a guaranteed data rate. The slotted aloha scheme is \nused for idle slots only; data transmission is not destroyed by collision.  \n \nReservation TDMA  \nIn a fixed TDM scheme N mini-slots followed by N\u00b7k data-slots form a frame that is \nrepeated. Each station is allotted its own mini-slot and can use it to reserve up to k data-slots.  \n \nThis guarantees each station a certain bandwidth and a fixed delay. Other stations can now \nsend data in unused data-slots as shown. Using these free slots can be based on a simple round-\nrobin scheme or can be uncoordinated using an Aloha scheme. This scheme allows for the \ncombination of, e.g., isochronous traffic with fixed bitrates and best-effort traffic without any \nguarantees.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 2, "end_char_idx": 1912, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f77b719-d0d8-436d-90f0-82abda3c8e94": {"__data__": {"id_": "9f77b719-d0d8-436d-90f0-82abda3c8e94", "embedding": null, "metadata": {"page_label": "13", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ca512a55-78b1-4f5b-b5c6-223f1e4439bd", "node_type": "4", "metadata": {"page_label": "13", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "5e5efe2badb3b07b174f787ce692349af03d4c47c722258aa9d8c446e3f0d3bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ea35cdb-1ece-4888-bf1e-0832330df35d", "node_type": "1", "metadata": {"page_label": "12", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "899f54ad03d7ab03e11bccd0c677f63dff440f954999075038060ba537c16f2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0505a8af-12b0-41b9-9ed4-f95810aaa515", "node_type": "1", "metadata": {}, "hash": "9ca0ed50297ee21724c660e085e0615bc5a7d960546c15f0c3b57f42a5225be6", "class_name": "RelatedNodeInfo"}}, "text": "Multiple access with collision avoidance  \nMultiple access with collision avoidance (MACA) presents a simple scheme that solves \nthe hidden terminal problem, does not need a base station, and is still a random access Aloha \nscheme \u2013 but with dynamic reservation. Consider the hidden terminal problem scenario.  \nA starts sending to B, C does not receive this transmission. C also wants to send something \nto B and senses the medium. The medium appears to be free, the carrier sense fails. C also starts \nsending causing a collision at B. But A cannot detect this collision at B and continues with its \ntransmission. A is hidden for C and vice versa.  \nWith MACA, A does not start its transmission at once, but sends a request to send (RTS) \nfirst. B receives the RTS that contains the name of sender and receiver, as well as the length of the \nfuture transmission. This RTS is not heard by C, but triggers an acknowledgement from B, called \nclear to send (CTS) . The CTS again contains the names of sender (A) and receiver (B) of the user \ndata, and the length of the future transmission.  \n \nThis CTS is now heard by C and the medium for future use by A is now reserved for the \nduration of the transmission. After receiving a CTS, C is not allowed to send anything for the \nduration indicated in the CTS toward B. A collision cannot occur at B during data transmission, \nand the hidden terminal problem is solved. Still collisions might occur when A and C transmits a \nRTS at the same time. B resolves this contention and acknowledges only one station in the CTS. \nNo transmission is allowed without an appropriate CTS.  \nNow MACA tries to avoid the exposed terminals in the following way:  \n \n \nWith MACA, B has to transmit an RTS first containing the name of the receiver (A) and \nthe sender (B). C does not react to this message as it is not the receiver, but A acknowledges using \na CTS which identifies B as the sender and A as the receiver of the following data transmission. C \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2018, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0505a8af-12b0-41b9-9ed4-f95810aaa515": {"__data__": {"id_": "0505a8af-12b0-41b9-9ed4-f95810aaa515", "embedding": null, "metadata": {"page_label": "14", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6044bff5-fd78-43fa-b43f-05d4f2d9879c", "node_type": "4", "metadata": {"page_label": "14", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "58bb15ba2a877009ef9ae7a3691def7d25f111a674b67314a0e6dabb720a09b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f77b719-d0d8-436d-90f0-82abda3c8e94", "node_type": "1", "metadata": {"page_label": "13", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "5e5efe2badb3b07b174f787ce692349af03d4c47c722258aa9d8c446e3f0d3bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c05b5880-2fb0-4c4a-9262-0da730f6ff69", "node_type": "1", "metadata": {}, "hash": "e57086bb9a5a2c97c17a6e09cbcb874e8dc7f1e5081145b03fd359229ed46bb8", "class_name": "RelatedNodeInfo"}}, "text": "does not receive this CTS and concludes that A is outside the detection range. C can start its \ntransmission assuming it will not cause a collision at A. The problem with exposed terminals is \nsolved without fixed access patterns or a base station.  \n \nPolling  \nPolling schemes are used when one station wants to be heard by others. Polling is a strictly \ncentralized scheme with one master station and several slave stations. The master can poll the \nslaves according to many schemes: round robin (only efficient if traffic patterns are similar over \nall stations), randomly, according to reservations (the classroom example with polite students) etc. \nThe master could also establish a list of stations wishing to transmit during a contention phase. \nAfter this phase, the station polls each station on the list.  \nEx\nample: Randomly Addressed Polling  \n\uf0b7 base station signals readiness to all mobile terminals  \n\uf0b7 terminals ready to send transmit random number without collision using CDMA or FDMA  \n\uf0b7 the base station chooses one address for polling from list of all random numbers (collision \nif two terminals choose the same address)  \n\uf0b7 the base station acknowledges correct packets and continues polling the next terminal  \n\uf0b7 this cycle starts again after polling all terminals of the list  \n \nInhibit sense multiple access  \nThis scheme, which is used for the packet data transmission service Cellular Digital Packet \nData (CDPD) in the AMPS mobile phone system, is also known as digital sense multiple access \n(DSMA) . Here, the base station only signals a busy medium via a busy tone (called BUSY/IDLE \nindicator) on the downlink.  \n \nAfter the busy tone stops, accessing the uplink is not coordinated any further. The base \nstation acknowledges successful transmissions; a mobile station detects a collision only via the \nmissing positive acknowledgement. In case of collisions, additional back-off and retransmission \nmechanisms are implemented.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c05b5880-2fb0-4c4a-9262-0da730f6ff69": {"__data__": {"id_": "c05b5880-2fb0-4c4a-9262-0da730f6ff69", "embedding": null, "metadata": {"page_label": "15", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294a4ab4-8490-461f-b50a-1827b71edb3c", "node_type": "4", "metadata": {"page_label": "15", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bf6e4824418d530e5f873bd665862460bad9b180d24c621408e297c1efff34f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0505a8af-12b0-41b9-9ed4-f95810aaa515", "node_type": "1", "metadata": {"page_label": "14", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "58bb15ba2a877009ef9ae7a3691def7d25f111a674b67314a0e6dabb720a09b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08a13c0f-e6f9-48c5-97f0-cf5bb95d52ba", "node_type": "1", "metadata": {}, "hash": "3d7941e2183e882952733afbab0361dfa75cd68df9c08309045e19860076c5b9", "class_name": "RelatedNodeInfo"}}, "text": "CDMA  \nCode division multiple access systems apply codes with certain characteristics to the \ntransmission to separate different users in code space and to enable access to a shared medium \nwithout interference.  \nAll terminals send on the same frequency probably at the same time and can use the whole \nbandwidth of the transmission channel. Each sender has a unique random number, the sender \nXORs the signal with this random number. The receiver can \u201ctune\u201d into this signal if it knows the \npseudo random number, tuning is done via a correlation function  \nDisadvantages:  \n1. higher complexity of a receiver (receiver cannot just listen into the medium and start \nreceiving if there is a signal)  \n2. all signals should have the same strength at a receiver  \nAdvantages:  \n1. all terminals can use the same frequency, no planning needed  \n2. huge code space (e.g. 232) compared to frequency space  \n3. interferences (e.g. white noise) is not coded  \n4. forward error correction and encryption can be easily integrated  \n \nThe following figure shows a sender A that wants to transmit the bits 101. The key of A is \nshown as signal and binary sequence Ak. The binary \u201c0\u201d is assigned a positive signal value, the \nbinar\ny \u201c1\u201d a negative signa l value. After spreading, i.e., XORing Ad and Ak, the resulting signal \nis A\ns.  \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08a13c0f-e6f9-48c5-97f0-cf5bb95d52ba": {"__data__": {"id_": "08a13c0f-e6f9-48c5-97f0-cf5bb95d52ba", "embedding": null, "metadata": {"page_label": "16", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "472250ef-e4a4-4861-bfac-e0764853233b", "node_type": "4", "metadata": {"page_label": "16", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "0260170d98573896b5a7bdc0266238f6666df448f307e761b22454009705e402", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c05b5880-2fb0-4c4a-9262-0da730f6ff69", "node_type": "1", "metadata": {"page_label": "15", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bf6e4824418d530e5f873bd665862460bad9b180d24c621408e297c1efff34f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be58fe51-4dde-45d9-a3ee-bdd3a2858b2d", "node_type": "1", "metadata": {}, "hash": "41f8fe2d56b36cae69053b923deefcb2f2fcdbd7f791cf28ff95425b46ce10be", "class_name": "RelatedNodeInfo"}}, "text": "Coding and spreading of data from sender A and sender B  \n \nThe same happens with data from sender B with bits 100. The result is Bs. As and Bs now \nsuperimpose during transmission. The resulting signal is simply the sum As + Bs as shown above. \nA now tries to reconstruct the original data from Ad. The receiv er applies A\u2019s key, Ak, to the \nreceived signal and feeds the result into an integrator. The integrator adds the products, a \ncomparator then has to decide if the result is a 0 or a 1 as shown below. As clearly seen, although \nthe original signal form is dist orted by B\u2019s signal, the result is quite clear. The same happens if a \nreceiver wants to receive B\u2019s data.  \n \n \n \n \n \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 2, "end_char_idx": 727, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be58fe51-4dde-45d9-a3ee-bdd3a2858b2d": {"__data__": {"id_": "be58fe51-4dde-45d9-a3ee-bdd3a2858b2d", "embedding": null, "metadata": {"page_label": "17", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16cd8a57-24fc-4b83-80f7-1d7b3fe193a2", "node_type": "4", "metadata": {"page_label": "17", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "fb0c28c4ad05d748807db64e5f3ba29f2917581a8d062595a20293ffb7b81d6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08a13c0f-e6f9-48c5-97f0-cf5bb95d52ba", "node_type": "1", "metadata": {"page_label": "16", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3c0ddadad9d332ef876e8576ac37fcbc8bb44587d1f62de464644385b890e32e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da81a418-c0c0-47c5-997a-fac5505ac35e", "node_type": "1", "metadata": {}, "hash": "5127534797c578f0db8ea1f699417e3c54f87bd7904c589164ff826e6d05ed7e", "class_name": "RelatedNodeInfo"}}, "text": "Reconstruction of A\u2019s data  \nSoft handover or soft handoff refers to a feature used by the CDMA and WCDMA \nstandards, where a cell phone is simultaneously connected to two or more cells (or cell sectors) \nduring a call. If the sectors are from the same physical cell site (a sectorised site), it is referred to \nas softer handoff . This technique is a form of mobile-assisted handover, for IS-95/CDMA2000 \nCDMA cell phones continuously make power measurements of a list of neighboring cell sites, and \ndetermine whether or not to request or end soft handover with the cell sectors on the list.  \nSoft handoff is different from the traditional hard-handoff process. With hard handoff, a \ndefinite decision is made on whether to hand off or not. The handoff is initiated and executed \nwithout the user attempting to have simultaneous traffic channel communications with the two \nbase stations. With soft handoff, a c onditional decision is made on whether to hand off. Depending \non the changes in pilot signal strength from the two or more base stations involved, a hard decision \nwill eventually be made to communicate with only one. This normally happens after it is evident \nthat the signal from one base station is considerably stronger than those from the others. In the \ninterim period, the user has simultaneous traffic channel communication with all candidate base \nstations. It is desirable to implement soft handoff in power-controlled CDMA systems because \nimplementing hard handoff is potentially difficult in such systems.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da81a418-c0c0-47c5-997a-fac5505ac35e": {"__data__": {"id_": "da81a418-c0c0-47c5-997a-fac5505ac35e", "embedding": null, "metadata": {"page_label": "18", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee890a12-195b-4e37-a0ac-904d69ce305a", "node_type": "4", "metadata": {"page_label": "18", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d5e0956ec7891bdb3691e15f45f51fa974eac8472ea846a34b19709cd5037fd5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be58fe51-4dde-45d9-a3ee-bdd3a2858b2d", "node_type": "1", "metadata": {"page_label": "17", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "fb0c28c4ad05d748807db64e5f3ba29f2917581a8d062595a20293ffb7b81d6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1943d3d5-d9c2-45f2-8aaf-af8c74b7f76f", "node_type": "1", "metadata": {}, "hash": "52286fe1f33d19061fffc37a35d379188e3777378a08384cc368ee8cd0e20d11", "class_name": "RelatedNodeInfo"}}, "text": "Spread Aloha multiple access (SAMA)  \nCDMA senders and receivers are not really simple devices. Communicating with n devices \nrequires programming of the receiver to be able to decode n different codes. Aloha was a very \nsimple scheme, but could only provide a relatively low bandwidth due to collisions. SAMA uses \nspread spectrum with only one single code (chipping sequence) for spreading for all senders \naccessing according to aloha.  \nI\nn SAMA, each sender uses the same spreading code, for ex 110101 as shown below. \nSender A and B access the medium at the same time in their narrowband spectrum, so that the \nthree bits shown causes collisions. The same data could also be sent with higher power for shorter \nperiods as show.  \n \nThe main problem in using this approach is finding good chipping sequences. The \nmaximum throughput is about 18 per cent, which is very similar to Aloha, but the approach benefits \nfrom the advantages of spread spectrum techniques: robustness against narrowband interference \nand simple coexistence with other systems in the same frequency bands.  \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1120, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1943d3d5-d9c2-45f2-8aaf-af8c74b7f76f": {"__data__": {"id_": "1943d3d5-d9c2-45f2-8aaf-af8c74b7f76f", "embedding": null, "metadata": {"page_label": "19", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75d0e8ab-d0c4-4dfa-a84a-49fd63600f51", "node_type": "4", "metadata": {"page_label": "19", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ae0eac89a1d43a0eb0f7cc6b803582476accc8ff9fc00c3360a2cecee9089936", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da81a418-c0c0-47c5-997a-fac5505ac35e", "node_type": "1", "metadata": {"page_label": "18", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d5e0956ec7891bdb3691e15f45f51fa974eac8472ea846a34b19709cd5037fd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "513e7c52-dc36-4b8d-9a03-d32e742ea2d6", "node_type": "1", "metadata": {}, "hash": "f1002117ebe6d0b1dd7fc619af31f980e7bddf8f180b2a82015d93037aba4b86", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 1 Mobile IP  \nThe IP addresses are designed to work with stationary hosts because part of the address \ndefines the network to which the host is attached . A host cannot change its IP address without \nterminating on-going sessions and restarting them after it acquires a new address. Other link \nlayer mobility solutions exist but are not sufficient enough for the global Internet.  \nMobility is the ability of a node to change its point-of-attachment while maintaining all \nexisting communications and using the same IP address.  \nNomadicity allows a node to move but it must terminate all existing communications and \nthen can initiate new connections with a new address.  \nMobile IP is a network layer solution for homogenous and heterogeneous mobility on the \nglobal Internet which is scalable, robust, secure and which allows nodes to maintain all ongoing \ncommunications while moving.  \n \nDesign Goals :  \nMobile IP was developed as a means for transparently dealing with problems of mobile \nusers. Mobile IP was designed to make the size and the frequency of required routing updates as \nsmall as possible. It was designed to make it simple to implement mobile node software. It was \ndesigned to avoid solutions that require mobile nodes to use multiple addresses.  \n \nRequirements :  \nThere are several requirements for Mobile IP to make it as a standard. Some of them are:  \n1. Compatibility : The whole architecture of internet is very huge and a new standard cannot \nintroduce changes to the applications or network protocols already in use. Mobile IP is to be \nintegrated into the existing operating systems. Also, for routers also it may be possible to \nenhance its capabilities to support mobility instead of changing the routers which is highly \nimpossible. Mobile IP must not require special media or MAC/LLC protocols, so it must use the \nsame interfaces and mechanisms to access the lower layers as IP does. Finally, end-systems \nenhanced with a mobile IP implementation should still be able to communicate with fixed \nsystems without mobile IP.  \n2. Transparency : Mobility remains invisible for many higher layer protocols and applications. \nHigher layers continue to work even if the mobile computer has changed its point of attachment \nto the network and even notice a lower bandwidth and some interruption in the service. As many \nof today\u2019s applications have not been designed to use in mobile environments, the effects of \nmobility will be higher delay and lower bandwidth.  \n3. Scalability and efficiency : The efficiency of the network should not be affected even if a new \nmechanism is introduced into the internet. Enhancing IP for mobility must not generate many \nnew messages flooding the whole network. Special care is necessary to be taken considering the \nlower bandwidth of wireless links. Many mobile systems have a wireless link to an attachment \npoint. Therefore, only some additional packets must be necessary between a mobile system and a \nnode in the network. It is indispensable for a mobile IP to be scalable over a large number of \nparticipants in the whole internet, throughout the world.  \n4. Security : Mobility possesses many security problems. A minimum requirement is the \nauthentication of all messages related to the management of mobile IP. It must be sure for the IP \nlayer if it forwards a packet to a mobile host that this host really is the receiver of the packet. The \nIP layer can only guarantee that the IP address of the receiver is correct. There is no way to \nprevent faked IP addresses and other attacks.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3778, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "513e7c52-dc36-4b8d-9a03-d32e742ea2d6": {"__data__": {"id_": "513e7c52-dc36-4b8d-9a03-d32e742ea2d6", "embedding": null, "metadata": {"page_label": "20", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1cc38aa7-4da3-4b3c-a408-45a84d3d2687", "node_type": "4", "metadata": {"page_label": "20", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "38c5970e23939c2b79b49d964d37c043ea824ca68750ff206fbc9a9942f3af0f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1943d3d5-d9c2-45f2-8aaf-af8c74b7f76f", "node_type": "1", "metadata": {"page_label": "19", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ae0eac89a1d43a0eb0f7cc6b803582476accc8ff9fc00c3360a2cecee9089936", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d29a749-b4cb-47a8-86bf-ca849b512905", "node_type": "1", "metadata": {}, "hash": "864aa97e75e680dee20dde7766a7c72ab022459f6197e061d45960b7dd0661e5", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 2  \nThe goal of a mobile IP can be summarized as: \u2018supporting end -system mobility while \nmaintaining scalability, efficiency, and compatibility in all respects with existing applications \nand Internet protocols\u2019.  \n \nEntities and terminology  \nThe following defines several entities and terms needed to understand mobile IP as \ndefined in RFC 3344.  \nMobile Node (MN):  \nA mobile node is an end-system or router that can change its point of attachment to the \ninternet using mobile IP. The MN keeps its IP address and can continuously communicate with \nany other system in the internet as long as link-layer connectivity is given. Examples are laptop, \nmobile phone, router on an aircraft etc.  \nCorrespondent node (CN):  \nAt least one partner is needed for communication. In the following the CN represents this \npartner for the MN. The CN can be a fixed or mobile node.  \nHome network:  \nThe home network is the subnet the MN belongs to with respect to its IP address. No \nmobile IP support is needed within the home network.  \nForeign network:  \nThe foreign network is the current subnet the MN visits and which is not the home \nnetwork. \n  \nForeign agent (FA):  \nThe FA can provide several services to the MN during its visit to the foreign network. \nThe FA can have the COA, acting as tunnel endpoint and forwarding packets to the MN. The FA \ncan be the default router for the MN. FAs can also provide security services because they belong \nto the foreign network as opposed to the MN which is only visiting. FA is implemented on a \nrouter for the subnet the MN attaches to.  \nCare-of address (COA):  \nThe COA defines the current location of the MN from an IP point of view. All IP packets \nsent to the MN are delivered to the COA, not directly to the IP address of the MN. Packet \ndelivery toward the MN is done using a tunnel, i.e., the COA marks the tunnel endpoint, i.e., the \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2095, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d29a749-b4cb-47a8-86bf-ca849b512905": {"__data__": {"id_": "4d29a749-b4cb-47a8-86bf-ca849b512905", "embedding": null, "metadata": {"page_label": "21", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1b6969f-284b-46f7-a911-ecbd1c7137ba", "node_type": "4", "metadata": {"page_label": "21", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3c2fa6bbcfa48773c86f6f5a8acb4684d9aaeb1430c01b6f816c9134c67f054c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "513e7c52-dc36-4b8d-9a03-d32e742ea2d6", "node_type": "1", "metadata": {"page_label": "20", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "38c5970e23939c2b79b49d964d37c043ea824ca68750ff206fbc9a9942f3af0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6db0769a-b663-4f70-8724-e1c6dac9e473", "node_type": "1", "metadata": {}, "hash": "ef8fe83cbb6c533ac80d58535cbec4a22e451e199e80fccf63f293da4f92e65a", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 3 address where packets exit the tunnel. There are two different possibilities for the location of the \nCOA:  \nForeign agent COA:  \nThe COA could be located at the FA, i.e., the COA is an IP address of the FA. The FA is \nthe tunnel end-point and forwards packets to the MN. Many MN using the FA can share this \nCOA as common COA.  \nCo-located COA:  \nThe COA is co-located if the MN temporarily acquired an additional IP address which \nacts as COA. This address is now topologically correct, and the tunnel endpoint is at the MN. \nCo-located addresses can be acquired using services such as DHCP.  \n \nHome agent (HA):  \nThe HA provides several services for the MN and is located in the home network. The \ntunnel for packets toward the MN starts at the HA. The HA maintains a location registry, i.e., it \nis informed of the MN\u2019s location by the current COA. Three alternatives for the implementation \nof an HA exist.  \n1. The HA can be implemented on a router that is responsible for the home network. This is \nobviously the best position, because without optimizations to mobile IP, all packets for the MN \nhave to go through the router anyway.  \n2. If changing the router\u2019s software is not possible, the HA could also be implemented on an \narbitrary node in the subnet. One disadvantage of this solution is the double  \n \ncrossing of the router by the packet if the MN is in a foreign network. A packet for the MN \ncomes in via the router; the HA sends it through the tunnel which again crosses the router. \nFinally, a home network is not necessary at all. The HA could be again on the \u2018router\u2019 but this \ntime only acting as a manager for MNs belonging to a virtual home network. All MNs are always \nin a foreign network with this solution. A CN is connected via a router to the internet, as are the \nhome network and the foreign network. The HA is implemented on the router connecting the \nhome network with the internet, an FA is implemented on the router to the foreign network. The \nMN is currently in the foreign network. The tunnel for packets toward the MN starts at the HA \nand ends at the FA, for the FA has the COA in the above example.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6db0769a-b663-4f70-8724-e1c6dac9e473": {"__data__": {"id_": "6db0769a-b663-4f70-8724-e1c6dac9e473", "embedding": null, "metadata": {"page_label": "22", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29303b87-5b17-4981-bf4b-1df150265b8d", "node_type": "4", "metadata": {"page_label": "22", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "08a6b3c448ed6546e66a67736204f78a7f1f09f75d28d92ede915b4aa96cb0f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d29a749-b4cb-47a8-86bf-ca849b512905", "node_type": "1", "metadata": {"page_label": "21", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3c2fa6bbcfa48773c86f6f5a8acb4684d9aaeb1430c01b6f816c9134c67f054c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "535e9624-ebf4-431a-a747-e1f3dcd0dab1", "node_type": "1", "metadata": {}, "hash": "093d59489e4a0597c7df41de0acb0a088121c881dd89e5dcfcdd4686bea95aeb", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 4 IP packet delivery  \nConsider the above example in which a correspondent node (CN) wants to send an IP \npacket to the MN. One of the requirements of mobile IP was to support hiding the mobility of the \nMN. CN does not need to know anything about the MN\u2019s current location and sends the packet \nas usual to the IP address of MN as shown below.  \nCN sends an IP packet with MN as a destination address and CN as a source address. The \ninternet, not having information on the current location of MN, routes the packet to the router \nresponsible for the home network of MN. This is done using the standard routing mechanisms of \nthe internet. The HA now intercepts the packet, knowing that MN is currently not in its hom e \nnetwork. The packet is not forwarded into the subnet as usual, but encapsulated and tunnelled to \nthe COA. A new header is put in front of the old IP header showing the COA as new destination \nand HA as source of the encapsulated packet (step 2).  \nThe foreign agent now decapsulates the packet, i.e., removes the additional header, and \nforwards the original packet with CN as source and MN as destination to the MN (step 3). Again, \nfor the MN mobility is not visible. It receives the packet with the same sender and receiver \naddress as it would have done in the home network.  \n \n \nSending packets from the mobile node (MN) to the CN is comparatively simple. The MN sends \nthe packet as usual with its own fixed IP address as source and CN\u2019s address as destination (step \n4). The router with the FA acts as default router and forwards the packet in the same way as it \nwould do for any other node in the foreign network. As long as CN is a fixed node the remainder \nis in the fixed internet as usual. If CN were also a mobile node residing in a foreign network, the \nsame mechanisms as described in steps 1 through 3 would apply now in the other direction.  \n \nWorking of Mobile IP:-  \nMobile IP has two addresses for a mobile host: one home address and one care-of \naddress. The home address is permanent; the care-of address changes as the mobile host moves \nfrom one network to another. To make the change of address transparent to the rest of the \nInternet requires a home agent and a foreign agent. The specific function of an agent is \nperformed in the application layer. When the mobile host and the foreign agent are the same, the \ncare-of address is called a co-located care-of address. To communicate with a remote host, a \nmobile host goes through three phases: agent discovery, registration, and data transfer.  \n \n \n \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "535e9624-ebf4-431a-a747-e1f3dcd0dab1": {"__data__": {"id_": "535e9624-ebf4-431a-a747-e1f3dcd0dab1", "embedding": null, "metadata": {"page_label": "23", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9f95273-bbd7-4a36-b7a8-07ea36b4cbda", "node_type": "4", "metadata": {"page_label": "23", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "73d9fe2f43b00e24d67b05e88af50500790726b4ccfbe990aa6322b9a0555faf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6db0769a-b663-4f70-8724-e1c6dac9e473", "node_type": "1", "metadata": {"page_label": "22", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "08a6b3c448ed6546e66a67736204f78a7f1f09f75d28d92ede915b4aa96cb0f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2ab20c1-4764-4e66-8e57-e0a7c21dd8e6", "node_type": "1", "metadata": {}, "hash": "0c661f4392e67dcd69c0fa518e5450ce5a67fd8b44b595d618054ea8c12f9476", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 5 Agent Discovery  \nA mobile node has to find a foreign agent when it moves away from its home network. \nTo solve this problem, mobile IP describes two methods: agent advertisement and agent \nsolicitation.  \n \nAgent advertisement  \nFor this method, foreign agents and home agents advertise their presence periodically \nusing special agent advertisement messages, which are broadcast into the subnet. Mobile IP \ndoes not use a new packet type for agent advertisement; it uses the router advertisement packet \nof ICMP, and appends an agent advertisement message. The agent advertisement packet \naccording to RFC 1256 with the extension for mobility is shown below:  \n \nThe TTL field of the IP packet is set to 1 for all advertisements to avoid forwarding them. \nThe type is set to 9, the code can be 0, if the agent also routes traffic from non-mobile nodes, or \n16, if it does not route anything other than mobile traffic. The number of addresses advertised \nwith this packet is in #addresses while the addresses themselves follow as shown. Lifetime \ndenotes the length of time this advertisement is valid. Preference levels for each address help a \nnode to choose the router that is the most eager one to get a new node.  \nThe extension for mobility has the following fields defined: type is set to 16, length \ndepends on the number of COAs provided with the message and equals 6 + 4*(number of \naddresses). The sequence number shows the total number of advertisements sent since \ninitialization by the agent. By the registration lifetime the agent can specify the maximum \nlifetime in seconds a node can request during registration. The following bits specify the \ncharacteristics of an agent in detail.  \nThe R bit (registration) shows, if a registration with this agent is required even when \nusing a colocated COA at the MN. If the agent is currently too busy to accept new registrations it \ncan set the B bit. The following two bits denote if the agent offers services as a home agent ( H) \nor foreign agent ( F) on the link where the advertisement has been sent. Bits M and G specify the \nmethod of encapsulation used for the tunnel. While IP- in-IP encapsulation is the mandatory \nstandard, M can specify minimal encapsulation and G generic routing encapsulation. In the first \nversion of mobile IP (RFC 2002) th e V bit specified the use of header compression according to \nRFC 1144. Now the field r at the same bit position is set to zero and must be ignored. The new \nfield T indicates that reverse tunneling is supported by the FA. The following fields contain the \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2ab20c1-4764-4e66-8e57-e0a7c21dd8e6": {"__data__": {"id_": "e2ab20c1-4764-4e66-8e57-e0a7c21dd8e6", "embedding": null, "metadata": {"page_label": "24", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27347f3c-d786-44a0-ae08-7598a6389c83", "node_type": "4", "metadata": {"page_label": "24", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ee4355301f494f4f3725a2e5e6ae6699c453720a8e74cd64ec3f342d6a90fe79", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "535e9624-ebf4-431a-a747-e1f3dcd0dab1", "node_type": "1", "metadata": {"page_label": "23", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "73d9fe2f43b00e24d67b05e88af50500790726b4ccfbe990aa6322b9a0555faf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51ffbd6e-dcd3-4a60-95db-d84bfd0d015e", "node_type": "1", "metadata": {}, "hash": "65738bd212a0727e833f2fec9a91da39a1cfcfab2844a22ae841e2f4b66e0efc", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 6 COAs advertised. A foreign agent setting the F bit must advertise at least one COA. A mobile \nnode in a subnet can now receive agent advertisements from either its home agent or a foreign \nagent. This is one way for the MN to discover its location.  \n \nAgent Solicitation  \nIf no agent advertisements are present or the inter-arrival time is too high, and an MN has \nnot received a COA by other means, the mobile node must send agent solicitations . Care must \nbe taken to ensure that these solicitation messages do not flood the network, but basically an MN \ncan search for an FA endlessly sending out solicitation messages. If a node does not receive an \nanswer to its solicitations it must decrease the rate of solicitations exponentially to avoid \nflooding the network until it reaches a maximum interval between solicitations (typically one \nminute). Discovering a new agent can be done anytime, not just if the MN is not connected to \none.  \nAfter these steps of advertisements or solicitations the MN can now receive a COA, either on e \nfor an FA or a co-located COA.  \n \nAgent Registration  \nHaving received a COA, the MN has to register with the HA. The main purpose of the \nregistration is to inform the HA of the current location for correct forwarding of packets.  \n \nRegistration can be done in two different ways depending on the location of the COA.  \nIf the COA is at the FA, the MN sends its registration request containing the COA to the \nFA which forwards the request to the HA. The HA now sets up a mobility binding, containing \nthe mobile no de\u2019s home IP address and the current COA. It also contains the lifetime of the \nregistration which is negotiated during the registration process. Registration expires \nautomatically after the lifetime and is deleted; so, an MN should reregister before expiration. \nThis mechanism is necessary to avoid mobility bindings which are no longer used. After setting \nup the mobility binding, the HA sends a reply message back to the FA which forwards it to the \nMN.  \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51ffbd6e-dcd3-4a60-95db-d84bfd0d015e": {"__data__": {"id_": "51ffbd6e-dcd3-4a60-95db-d84bfd0d015e", "embedding": null, "metadata": {"page_label": "25", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af2219f-927f-45eb-8b7f-2873d09995bc", "node_type": "4", "metadata": {"page_label": "25", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "0b9528420dedcbce49d5bf82545ef000588fbf8d8e9494e6d537e2c017c31a90", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2ab20c1-4764-4e66-8e57-e0a7c21dd8e6", "node_type": "1", "metadata": {"page_label": "24", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ee4355301f494f4f3725a2e5e6ae6699c453720a8e74cd64ec3f342d6a90fe79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9602793-ce26-41c2-9978-790afece3257", "node_type": "1", "metadata": {}, "hash": "bdb7438a4fec9e2977190c664a3fce110600e8031fc01ba10aaf70153cc707d2", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 7  \n \nRegistration of a mobile node via the FA or directly with the HA  \nIf the COA is co-located, registration can be simpler, the MN sends the request directly to \nthe HA and vice versa. This is also the registration procedure for MNs returning to their home \nnetwork to register directly with the HA.  \nUDP packets are used for the registration requests using the port no 434. The IP source \naddress of the packet is set to the interface address of the MN, the IP destination address is that \nof the FA or HA.  \n \nRegistration Request  \nThe first field type is set to 1 for a registration request. With the S bit an MN can specify \nif it wants the HA to retain prior mobility bindings. This allows for simultaneous bindings. \nSetting the B bit generally indicates that an MN also wants to receive the broadcast packets \nwhich have been received by the HA in the home network. If an MN uses a co-located COA, it \nalso takes care of the decapsulation at the tunnel endpoint. The D bit indicates this behavior. As \nalready defined for agent advertisements, the bits M and G denote the use of minimal \nencapsulation or generic routing encapsulation, respectively. T indicates reverse tunneling, r and \nx are set to zero.  \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9602793-ce26-41c2-9978-790afece3257": {"__data__": {"id_": "d9602793-ce26-41c2-9978-790afece3257", "embedding": null, "metadata": {"page_label": "26", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9628045-5fb8-40a0-a904-42e2fe288878", "node_type": "4", "metadata": {"page_label": "26", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d20660f09c65b231b75be7ebccb3a5f9c9403f7fe5d11c9b0291869315be59e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51ffbd6e-dcd3-4a60-95db-d84bfd0d015e", "node_type": "1", "metadata": {"page_label": "25", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "0b9528420dedcbce49d5bf82545ef000588fbf8d8e9494e6d537e2c017c31a90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54b2787f-8545-4792-bd23-8831ddfcaeca", "node_type": "1", "metadata": {}, "hash": "ede30ce2e4bf9805993411e9f813008765f990fb153815442ff80230d9bf1d29", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 8 Lifetime denotes the validity of the registration in seconds. A value of zero indicates \nderegistration; all bits set indicates infinity. The home address is the fixed IP address of the MN, \nhome agent is the IP address of the HA, and COA represents the tunnel endpoint. The 64 bit \nidentification is generated by the MN to identify a request and match it with registration replies. \nThis field is used for protection against replay attacks of registrations. The extensions must at \nleast contain parameters for authentication  \nA registration reply , which is conveyed in a UDP packet, contains a type field set to 3 \nand a code indicating the result of the registration request.  \n \nRegistration Reply  \nThe lifetime field indicates how many seconds the registration is valid if it was \nsuccessful. Home address and home agent are the addresses of the MN and the HA, \nrespectively. The 64-bit identification is used to match registration requests with replies. The \nvalue is based on the identification field from the registration and the authentication method. \nAgain, the extensions must at least contain parameters for authentication.  \n \n \nTunnelling and encapsulation  \nA tunnel establishes a virtual pipe for data packets between a tunnel entry and a tunnel \nendpoint. Packets entering a tunnel are forwarded inside the tunnel and leave the tunnel \nunchanged. Tunneling, i.e., sending a packet through a tunnel is achieved by using \nencapsulation.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1668, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54b2787f-8545-4792-bd23-8831ddfcaeca": {"__data__": {"id_": "54b2787f-8545-4792-bd23-8831ddfcaeca", "embedding": null, "metadata": {"page_label": "27", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37b7d35d-8df8-4477-9014-465c38028df0", "node_type": "4", "metadata": {"page_label": "27", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "1259b796b8d86b34f0db0aace6ec223aa6e9b695ff41ff18361bb28937a81a01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9602793-ce26-41c2-9978-790afece3257", "node_type": "1", "metadata": {"page_label": "26", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d20660f09c65b231b75be7ebccb3a5f9c9403f7fe5d11c9b0291869315be59e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a0f8746-e1e4-4e5c-8a54-c426181080fb", "node_type": "1", "metadata": {}, "hash": "0f9ae1609eb2ce7dc629cbdc863f6a5432f3cd47bbd5e153dac5cdfafeb7dedb", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 9  \nEncapsulation is the mechanism of taking a packet consisting of packet header and data \nand putting it into the data part of a new packet. The reverse operation, taking a packet out of the \ndata part of another packet, is called decapsulation . Encapsulation and decapsulation are the \noperations typically performed when a packet is transferred from a higher protocol layer to a \nlower layer or from a lower to a higher layer respectively.  \nThe HA takes the original packet with the MN as destination, puts it into the data part of \na new packet and sets the new IP header so that the packet is routed to the COA. The new header \nis called outer header.  \n \nMobile IP tunnelling  \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 897, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a0f8746-e1e4-4e5c-8a54-c426181080fb": {"__data__": {"id_": "9a0f8746-e1e4-4e5c-8a54-c426181080fb", "embedding": null, "metadata": {"page_label": "28", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19fa1e25-d0a5-4cdd-99a1-3aeed43d68f4", "node_type": "4", "metadata": {"page_label": "28", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2344cc4127fb806523fc601ed79c5abdbf9333d11b783d1564568f0017663547", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54b2787f-8545-4792-bd23-8831ddfcaeca", "node_type": "1", "metadata": {"page_label": "27", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "1259b796b8d86b34f0db0aace6ec223aa6e9b695ff41ff18361bb28937a81a01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a3fbe37-ba3d-4e63-b9a8-8447b729885e", "node_type": "1", "metadata": {}, "hash": "263d74f61980d525399aa82ac4a63603931815b0ecb0e61acb44afb6427e6b36", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 10 Ip-in-Ip Encapsulation  \nThere are different ways of performing the encapsulation needed for the tunnel between \nHA and COA. Mandatory for mobile IP is IP-in-IP encapsulation as specified in RFC 2003. \nThe following fig shows a packet inside the tunnel.  \n \nThe version field ver is 4 for IP version 4, the internet header length ( IHL) denotes the \nlength of the outer header in 32 bit words. DS(TOS) is just copied from the inner header, the \nlength field covers the complete encapsulated packet. The fields up to TTL have no special \nmeaning for mobile IP and are set according to RFC 791. TTL must be high enough so the \npacket can reach the tunnel endpoint. The next field, here denoted with IP-in-IP, is the type of \nthe protocol used in the IP payload. This field is set to 4, the protocol type for IPv4 because \nagain an IPv4 packet follows after this outer header. IP checksum is calculated as usual. The \nnext fields are the tunnel entry as source address (the IP address of the HA ) and the tunnel exit \npoint as destination address (the COA ).  \nIf no options follow the outer header, the inner header starts with the same fields as \nabove. This header remains almost unchanged during encapsulation, thus showing the original \nsender CN and the receiver MN of the packet. The only change is TTL which is decremented by \n1. This means that the whole tunnel is considered a single hop from the original packet\u2019s point of \nview. This is a very important feature of tunneling as it allows the MN to behave as if it were \nattached to the home network. No matter how many real hops the packet has to take in the \ntunnel, it is just one (logical) hop away for the MN. Finally, the payload follows the two headers.  \n \nMinimal encapsulation  \nMinimal encapsulation (RFC 2004) as shown below is an optional encapsulation method \nfor mobile IP which avoids repetitions of identical fields in IP- in-IP encapsulation. The tunnel \nentry point and endpoint are specified.  \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2186, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a3fbe37-ba3d-4e63-b9a8-8447b729885e": {"__data__": {"id_": "7a3fbe37-ba3d-4e63-b9a8-8447b729885e", "embedding": null, "metadata": {"page_label": "29", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c7690a7-7247-4464-af17-c56d9aba6027", "node_type": "4", "metadata": {"page_label": "29", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "5b39b1c63a84da990eeaef8a7b5f8b2256365819c83f809be3bc26602bcc4cff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a0f8746-e1e4-4e5c-8a54-c426181080fb", "node_type": "1", "metadata": {"page_label": "28", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2344cc4127fb806523fc601ed79c5abdbf9333d11b783d1564568f0017663547", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da76fc9b-47bd-4287-aaa9-42701e9dcb94", "node_type": "1", "metadata": {}, "hash": "b433f957e5f60614ef905c4ed69a9b9036a6c38cee68642b1b6b8cde5ab8a65f", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 11 The field for the type of the following header contains the value 55 for the minimal \nencapsulation protocol. The inner header is different for minimal encapsulation. The type of the \nfollowing protocol and the address of the MN are needed. If the S bit is set, the original sender \naddress of the CN is included as omitting the source is quite often not an option. No field for \nfragmentation offset is left in the inner header and minimal encapsulation does not work with \nalready fragmented packets. \n \nGeneric Routing Encapsulation  \nUnlike IP- in-IP and Minimal encapsulation which work only for IP packets, Generic \nrouting encapsulation (GRE) allows the encapsulation of packets of one protocol suite into the \npayload portion of a packet of another protocol suite as shown below.  \n \nThe packet of one protocol suite with the original packet header and data is taken and a \nnew GRE header is prepended. Together this forms the new data part of the new packet. Finally, \nthe header of the second protocol suite is put in front.The following figure shows the fields of a \npacket inside the tunnel between HA and COA using GRE as an encapsulation scheme according \nto RFC 1701. The outer header is the standard IP header with HA as source address and COA as \ndestination address. The protocol type used in this outer IP header is 47 for GRE.  \n \nThe GRE header starts with several flags indicating if certain fields are present or not. A \nminimal GRE header uses only 4 bytes. The C bit indicates if the checksum field is present and \ncontains valid information. If C is set, the checksum field contains a valid IP checksum of the \nGRE header and the payload. The R bit indicates if the offset and routing fields are present and \ncontain valid information. The offset represents the offset in bytes for the first source routing \nentry. The routing field, if present, has a variable length and contains fields for source routing. \nGRE also offers a key field which may be used for authentication. If this field is present, the K \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2245, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da76fc9b-47bd-4287-aaa9-42701e9dcb94": {"__data__": {"id_": "da76fc9b-47bd-4287-aaa9-42701e9dcb94", "embedding": null, "metadata": {"page_label": "30", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b35f85d4-5f4a-4ce3-b3ea-fe53aee9f0b8", "node_type": "4", "metadata": {"page_label": "30", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "e2a8f855122b193bd0ca050b44c93a59e98ffde14c9b80cd79a7bc9893a132a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a3fbe37-ba3d-4e63-b9a8-8447b729885e", "node_type": "1", "metadata": {"page_label": "29", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "5b39b1c63a84da990eeaef8a7b5f8b2256365819c83f809be3bc26602bcc4cff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5532d70-5b97-450d-88ca-0f215e59efe4", "node_type": "1", "metadata": {}, "hash": "5ad81bc6f06b8894cc32b6beccf4bea4ae819e5e9ee4fd398314356b44bf1963", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 12 bit is set. The sequence number bit S indicates if the sequence number field is present, if the s bit \nis set, strict source routing is used.  \nThe recursion control field (rec.) is an important field that additionally distinguishes \nGRE from IP- in-IP and minimal encapsulation. This field represents a counter that shows the \nnumber of allowed recursive encapsulations. The default value of this field should be 0, thus \nallowing only one level of encapsulation. The following reserved fields must be zero and are \nignored on reception. The version field contains 0 for the GRE version. The following 2 byte \nprotocol field represents the protocol of the packet following the GRE header. The standard \nheader of the original packet follows with the source address of the correspondent node and the \ndestination address of the mobile node.  \nA simplified header of GRE following RFC 2784 is shown below. \n \n \nThe field C indicates again if a checksum is present. The next 5 bits are set to zero, then 7 \nreserved bits follow. The version field contains the value zero. The protocol type, again, defines \nthe protocol of the payload following RFC 3232. If the flag C is set, then checksum field and a \nfield called reserved1 follows. The latter field is constant zero set to zero follow.  \n \nOptimizations  \nIf a scenario occurs, where if the MN is in the same subnetwork as the node to which it is \ncommunicating and HA is on the other side of the world. It is called triangular routing problem \nas it causes unnecessary overheads for the network between CN and the HA.  \nA solution to this problem is to inform the CN of the current location of the MN. The CN \ncan learn the location by caching it in a binding cache, which is a part of the routing table for the \nCN. HA informs the CN of the location. It needs four additional messages:  \nBinding Request : It is sent by the node that wants to know the current location of an MN to the \nHA. HA checks if it is allowed to reveal the location and then sends back a binding update  \nBinding update: It is sent by the HA to the CN revealing the current location of an MN. It \ncontains the fixed IP address of the MN and the COA. This message can request an \nacknowledgement.  \nBinding acknowledgement : If requested, a node returns this acknowledgement after receiving a \nbinding update message  \nBinding warning: A node sends a binding warning if it decapsulates a packet for an MN, but it \nis note the current FA of this MN. It contains MN\u2019s home address and a target nodes address. \nThe recipient can be the HA, so the HA now sends a binding update to the node that obviously \nhas a wrong COA for the MN.  \nThe following figure shows how the four additional messages are used together if an MN \nchanges its FA.  \n \n \n \n \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5532d70-5b97-450d-88ca-0f215e59efe4": {"__data__": {"id_": "c5532d70-5b97-450d-88ca-0f215e59efe4", "embedding": null, "metadata": {"page_label": "31", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2445ddcb-2574-48e4-8f83-493eed3883f8", "node_type": "4", "metadata": {"page_label": "31", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d9e0ab5176443b4b2dff565fe905188d48cafe477c82b83fe5641fc09f0d2291", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da76fc9b-47bd-4287-aaa9-42701e9dcb94", "node_type": "1", "metadata": {"page_label": "30", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "e2a8f855122b193bd0ca050b44c93a59e98ffde14c9b80cd79a7bc9893a132a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25b00ce5-9df0-4a12-a55c-2da1339c28cf", "node_type": "1", "metadata": {}, "hash": "1510513191070cc00597659c58d89c5f99e28241090c8149ee80dbfb7027e860", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 13  \nThe CN can request the current location from the HA. If allowed by the MN, the HA \nreturns the COA of the MN via an update message. The CN acknowledges this update message \nand stores the mobility binding. Now the CN can send its data directly to the current foreign \nagent FAold. FAold forwards the packets to the MN. This scenario shows a COA located at an \nFA. Encapsulation of data for tunneling to the COA is now done by the CN, not the HA.  \nThe MN might now change its location and register with a new foreign agent, FAnew. \nThis registration is also forwarded to the HA to update its location database. Furthermore, \nFAnew informs FAold about the new registration of MN. MN\u2019s registration message contains \nthe address of FAold for this purpose. Passing this information is achieved via an update \nmessage, which is acknowledged by FAold.  \nWithout the information provided by the new FA, the old FA would not get to know \nanything about the new location of MN. In this case, CN does not know anything about the new \nlocation, so it still tunnels its packets for MN to the old FA, FAold. This FA now notices packets \nwith destination MN, but also knows that it is not the current FA of MN. FAold might now \nforward these packets to the new COA of MN which is FAnew in this example. This forwarding \nof packets is another optimization of the basic Mobile IP providing smooth handovers . Without \nthis optimization, all packets in transit would be lost while the MN moves from one FA to \nanother.  \nTo tell CN that it has a stale binding cache, FAold sends, a binding warning message to \nCN. CN then requests a binding update. (The warning could also be directly sent to the HA \ntriggering an update). The HA sends an update to inform the CN about the new location, which \nis acknowledged. Now CN can send its packets directly to FAnew, again avoiding triangular \nrouting. Unfortunately, this optimization of mobile IP to avoid triangular routing causes several \nsecurity problems  \n \nReverse Tunnelling  \nThe reverse path from MS to the CN looks quite simple as the MN can directly send its \npackets to the CN as in any other standard IP situation. The destination address in the packets is \nthat of CN. But it has some problems explained below:-  \nQuite often firewalls are designed to only allow packets with topologically correct addresses to \npass to provide simple protection against misconfigured systems of unknown addresses. \nHowever, MN still sends packets with its fixed IP address as source which is not topologically \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25b00ce5-9df0-4a12-a55c-2da1339c28cf": {"__data__": {"id_": "25b00ce5-9df0-4a12-a55c-2da1339c28cf", "embedding": null, "metadata": {"page_label": "32", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2572a78b-eecd-410b-8d60-4f746834ddea", "node_type": "4", "metadata": {"page_label": "32", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b0591002dbc8d4a5eb814ad038adc10856ad72173cd853f9d63ce4b0c49f40c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5532d70-5b97-450d-88ca-0f215e59efe4", "node_type": "1", "metadata": {"page_label": "31", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d9e0ab5176443b4b2dff565fe905188d48cafe477c82b83fe5641fc09f0d2291", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4689b3b8-8b39-4bb6-841d-c0bdfad057da", "node_type": "1", "metadata": {}, "hash": "285a0e3e0d801cd01b560214ae5b58a41adea048695b721f8281f4c27806fdb4", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 14 correct in a foreign network. Firewalls often filter packets coming from outside containing a \nsource address from computers of the internal network. This also implies that an MN cannot send \na packet to a computer residing in its home network.  \nWhile the nodes in the home network might participate in a multi-cast group, an MN in a foreign \nnetwork cannot transmit multi-cast packets in a way that they emanate from its home network \nwithout a reverse tunnel. The foreign network might not even provide the technical infrastructure \nfor multi-cast communication (multi-cast backbone, Mbone).  \nIf the MN moves to a new foreign network, the older TTL might be too low for the packets to \nreach the same destination nodes as before. Mobile IP is no longer transparent if a user has to \nadjust the TTL while moving. A reverse tunnel is needed that represents only one hop, no matter \nhow many hops are really needed from the foreign to the home network  \n \nBased on the above considerations, reverse tunnelling is defined as an extension to mobile IP \n(per RFC 2344). It was designed backward compatible to mobile IP and defines topologically \ncorrect reverse tunnelling to handle the above stated problems.  \n \nReverse Tunnelling  \nPacket Forwarding Reverse Tunnel  \nReverse tunneling does not solve  problems with firewalls , the reverse tunnel can be \nabused to circumvent security mechanisms (tunnel hijacking) and  optimization of data paths, i.e. \npackets will be forwarded through the tunnel via the HA to a sender (double triangular routing)  \n \nIPv6  \nThe design of Mobile IP support in IPv6 (Mobile IPv6) benefits both from the \nexperiences gained from the development of Mobile IP support in IPv4, and from the \nopportunities provided by IPv6. Mobile IPv6 thus shares many features with Mobile IPv4, but is \nintegrated into IPv6 and offers many other improvements. This section summarizes the major \ndifferences between Mobile IPv4 and Mobile IPv6:  \nThere is no need to deploy special routers as \"foreign agents\", as in Mobile IPv4. Mobile \nIPv6 operates in any location without any special support required from the local router.  \nSupport for route optimization is a fundamental part of the protocol, rather than a \nnonstandard set of extensions.  \nMobile IPv6 route optimization can operate securely even without pre-arranged security \nassociations. It is expected that route optimization can be deployed on a global scale between all \nmobile nodes and correspondent nodes.  \nSupport is also integrated into Mobile IPv6 for allowing route optimization to coexist \nefficiently with routers that perform \"ingress filtering\"  \nThe IPv6 Neighbor Unreachability Detection assures symmetric reachability between the \nmobile node and its default router in the current location.  \nMost packets sent to a mobile node while away from home in Mobile IPv6 are sent using \nan IPv6 routing header rather than IP encapsulation, reducing the amount of resulting overhead \ncompared to Mobile IPv4.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4689b3b8-8b39-4bb6-841d-c0bdfad057da": {"__data__": {"id_": "4689b3b8-8b39-4bb6-841d-c0bdfad057da", "embedding": null, "metadata": {"page_label": "33", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "af0e608b-03c6-45e0-991f-daeda7ce47e3", "node_type": "4", "metadata": {"page_label": "33", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3658c85b68fe1a523688beacec3edb478810eddace733fb51983e217af6076bb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25b00ce5-9df0-4a12-a55c-2da1339c28cf", "node_type": "1", "metadata": {"page_label": "32", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b0591002dbc8d4a5eb814ad038adc10856ad72173cd853f9d63ce4b0c49f40c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4296247-008f-49ca-8d0a-6c550bee8c2b", "node_type": "1", "metadata": {}, "hash": "f1a8372d49e5f6828684f3bdb3431c3b9372cce8029375c620a0eb6787d9809d", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 15 Mobile IPv6 is decoupled from any particular link layer, as it uses IPv6 Neighbor \nDiscovery instead of ARP. This also improves the robustness of the protocol.  \nThe use of IPv6 encapsulation (and the routing header) removes the need in Mobile IPv6 \nto manage \"tunnel soft state\".  \nThe dynamic home agent address discovery mechanism in Mobile IPv6 returns a single \nreply to the mobile node. The directed broadcast approach used in IPv4 returns separate replies \nfrom each home agent.  \n \nDynamic Host Configuration Protocol (DHCP)  \nDHCP i s an automatic configuration protocol used on IP networks. DHCP allows a \ncomputer to join an IP-based network without having a pre-configured IP address. DHCP is a \nprotocol that assigns unique IP addresses to devices, then releases and renews these addresses as \ndevices leave and re-join the network. If a new computer is connected to a network, DHCP can \nprovide it with all the necessary information for full system integration into the network, e.g., \naddresses of a DNS server and the default router, the subnet mask, the domain name, and an IP \naddress. Providing an IP address makes DHCP very attractive for mobile IP as a source of care-\nof-addresses.  \n \nDHCP is based on a client/server model as shown below. DHCP clients send a request to \na server (DHCPDISCOVER in the example) to which the server responds. A client sends \nrequests using MAC broadcasts to reach all devices in the LAN. A DHCP relay might be needed \nto forward requests across inter-working units to a DHCP server.  \nConsider the scenario where there is one client and two servers are present. A typical \ninitialization of a DHCP client is shown below:  \n \nthe client broadcasts a DHCPDISCOVER into the subnet. There might be a relay to \nforward this broadcast. In the case shown, two servers receive this broadcast and determine the \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4296247-008f-49ca-8d0a-6c550bee8c2b": {"__data__": {"id_": "c4296247-008f-49ca-8d0a-6c550bee8c2b", "embedding": null, "metadata": {"page_label": "34", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa0c01ea-6053-437e-b7fe-ae62d61ff1aa", "node_type": "4", "metadata": {"page_label": "34", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "41a9a01bb183bfbabd86046ad1994bf8da70c439ab499922c520b011dca07b79", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4689b3b8-8b39-4bb6-841d-c0bdfad057da", "node_type": "1", "metadata": {"page_label": "33", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3658c85b68fe1a523688beacec3edb478810eddace733fb51983e217af6076bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "205a6b82-638f-4b46-b0aa-aad9c269141f", "node_type": "1", "metadata": {}, "hash": "0bafb586945186e1eed718e8e87a050ea5eb4da817dfbd1fa86b8af52e8854c2", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 16 configuration they can offer to the client. Servers reply to the client\u2019s request with DHCPOFFER \nand offer a list of configuration parameters. The client can now choose one of the configurations \noffered. The client in turn replies to the servers, accepting one of the configurations and rejecting \nthe others using DHCPREQUEST. If a server receives a DHCPREQUEST with a rejection, it \ncan free the reserved configuration for other possible clients. The server with the configuration \naccepted by the client now confirms the configuration with DHCPACK. This completes the \ninitialization phase. If a client leaves a subnet, it should release the configuration received by the \nserver using DHCPRELEASE. Now the server can free the context stored for the client and offer \nthe configuration again. The configuration a client gets from a server is only leased for a certain \namount of time, it has to be reconfirmed from time to time. Otherwise the server will free the \nconfiguration. This timeout of configuration helps in the case of crashed nodes or nodes moved \naway without releasing the context.  \nDHCP is a good candidate for supporting the acquisition of care-of addresses for mobile \nnodes. The same holds for all other parameters needed, such as addresses of the default router, \nDNS servers, the timeserver etc. A DHCP server should be located in the subnet of the access \npoint of the mobile node, or at least a DHCP relay should provide forwarding of the messages. \nRFC 3118 specifies authentication for DHCP messages so as to provide protection from \nmalicious DHCP servers. Without authentication, a DHCP server cannot trust the mobile node \nand vice versa\u2026  \nThe Transmission Control Protocol (TCP ) is one of the core protocols of the Internet \nprotocol suite, often simply referred to as TCP/IP. TCP is reliable, guarantees in-order delivery \nof data and incorporates congestion control and flow control mechanisms.  \nTCP supports many of the Internet's most popular application protocols and resulting \napplications, including the World Wide Web, e-mail, File Transfer Protocol and Secure Shell. In \nthe Internet protocol suite, TCP is the intermediate layer between the Internet layer and \napplication layer.  \nThe major responsibilities of TCP in an active session are to:  \n\u2022 Provide reliable in-order transport of data : to not allow losses of data.  \n\u2022 Control congestions in the networks : to not allow degradation of the network performance,  \n\u2022 Control a packet flow between the transmitter and the receiver : to not exceed the receiver's \ncapacity.  \nTCP uses a number of mechanisms to achieve high performance and avoid 'congestion \ncollapse', where network performance can fall by several orders of magnitude. These \nmechanisms control the rate of data entering the network, keeping the data flow below a rate that \nwould trigger collapse. There are several mechanisms of TCP that influence the efficiency of \nTCP in a mobile environment. Acknowledgments for data sent, or lack of acknowledgments, are \nused by senders to implicitly interpret network conditions between the TCP sender and receiver. \n \nCongestion Control  \nA transport layer protocol such as TCP has been designed for fixed networks with fixed \nend- systems. Congestion may appear from time to time even in carefully designed networks. \nThe packet buffers of a router are filled and the router cannot forward the packets fast enough \nbecause the sum of the input rates of packets destined for one output link is higher than the \ncapacity of the output link. The only thing a router can do in this situation is to drop packets. A \ndropped packet is lost for the transmission, and the receiver notices a gap in the packet stream. \nNow the receiver does not directly tell the sender which packet is missing, but continues to \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 4030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "205a6b82-638f-4b46-b0aa-aad9c269141f": {"__data__": {"id_": "205a6b82-638f-4b46-b0aa-aad9c269141f", "embedding": null, "metadata": {"page_label": "35", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d1dc523-1cc6-4d7c-9a4e-eb58c7d06c37", "node_type": "4", "metadata": {"page_label": "35", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "35838c925c0a15302e473be77d0f785d787f1b27060e6302c6b78d53d36d3681", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4296247-008f-49ca-8d0a-6c550bee8c2b", "node_type": "1", "metadata": {"page_label": "34", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "41a9a01bb183bfbabd86046ad1994bf8da70c439ab499922c520b011dca07b79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10f50603-106c-4b40-875f-82f455775e1a", "node_type": "1", "metadata": {}, "hash": "34045bf70a9871f48146b00aa8ff280aac6736aad10a4c9d03188546e8f29660", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 17 acknowledge all in-sequence packets up to the missing one. The sender notices the missing \nacknowledgement for the lost packet and assumes a packet loss due to congestion. \nRetransmitting the missing packet and continuing at full sending rate would now be unwise, as \nthis might only increase the congestion. To mitigate congestion, TCP slows down the \ntransmission rate dramatically. All other TCP connections experiencing the same congestion do \nexactly the same so the congestion is soon resolved. Sl ow start TCP\u2019s reaction to a missing \nacknowledgement is quite drastic, but it is necessary to get rid of congestion quickly. The \nbehavior TCP shows after the detection of congestion is called slow start. The sender always \ncalculates a congestion window for a receiver. The start size of the congestion window is one \nsegment (TCP packet). The sender sends one packet and waits for acknowledgement. If this \nacknowledgement arrives, the sender increases the congestion window by one, now sending two \npackets (congestion window = 2). This scheme doubles the congestion window every time the \nacknowledgements come back, which takes one round trip time (RTT). This is called the \nexponential growth of the congestion window in the slow start mechanism.  \nBut doubling the congestion window is too dangerous. The exponential growth stops at \nthe congestion threshold . As soon as the congestion window reaches the congestion threshold, \nfurther increase of the transmission rate is only linear by adding 1 to the congestion window each \ntime the acknowledgements come back.  \nLinear increase continues until a time-out at the sender occurs due to a missing \nacknowledgement, or until the sender detects a gap in transmitted data because of continuous \nacknowledgements for the same packet. In either case the sender sets the congestion threshold to \nhalf of the current congestion window. The congestion window itself is set to one segment and \nthe sender starts sending a single segment. The exponential growth starts once more up to the \nnew congestion threshold, then the window grows in linear fashion.  \n \nFast Retransmit/Fast Recovery  \nThe congestion threshold can be reduced because of two reasons. First one is if the sender \nreceives continuous acknowledgements for the same packet. It informs the sender that the \nreceiver has got all the packets upto the acknowledged packet in the sequence and also the \nreceiver is receiving something continuously from the sender. The gap in the packet stream is not \ndue to congestion, but a simple packet loss due to a transmission error. The sender can now \nretransmit the missing packet(s) before the timer expires. This behavior is called fast \nretransmit . It is an early enhancement for preventing slow-start to trigger on losses not caused \nby congestion. The receipt of acknowledgements shows that there is no congestion to justify a \nslow start. The sender can continue with the current congestion window. The sender performs a \nfast recovery from the packet loss. This mechanism can improve the efficiency of TCP \ndramatically. The other reason for activating slow start is a time-out due to a missing \nacknowledgement. TCP using fast retransmit/fast recovery interprets this congestion in the \nnetwork and activates the slow start mechanism.  \nThe advantage of this method is its simplicity. Minor changes in the MH\u2019s software \nresults in performance increase. No changes are required in FA or CH.  \nThe disadvantage of this scheme is insufficient isolation of packet losses. It mainly focuses on \nproblems regarding Handover. Also it effects the efficiency when a CH transmits already \ndelivered packets.  \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3885, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10f50603-106c-4b40-875f-82f455775e1a": {"__data__": {"id_": "10f50603-106c-4b40-875f-82f455775e1a", "embedding": null, "metadata": {"page_label": "36", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "905c67b8-394a-49ee-b8ae-b9d008eab775", "node_type": "4", "metadata": {"page_label": "36", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "52337b3dc9e465c7bc20ac7dd602f94812605722a254083ae94539364fc879f7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "205a6b82-638f-4b46-b0aa-aad9c269141f", "node_type": "1", "metadata": {"page_label": "35", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "35838c925c0a15302e473be77d0f785d787f1b27060e6302c6b78d53d36d3681", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c95a502-d337-44c2-906d-165966ca84a0", "node_type": "1", "metadata": {}, "hash": "a1ce56d0ab0563146c37a49d316c62e59509ef325476357490e237b95d822e2f", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 18 Problems with Traditional TCP in wireless environments  \nSlow Start mechanism in fixed networks decreases the efficiency of TCP if used with \nmobile receivers or senders.  \nError rates on wireless links are orders of magnitude higher compared to fixed fiber or \ncopper links. This makes compensation for packet loss by TCP quite difficult.  \nMobility itself can cause packet loss. There are many situations where a soft handover \nfrom one access point to another is not possible for a mobile end-system.  \nStandard TCP reacts with slow start if acknowledgements are missing, which does not \nhelp in the case of transmission errors over wireless links and which does not really help during \nhandover. This behavior results in a severe performance degradation of an unchanged TCP if \nused together with wireless links or mobile nodes  \n \nClassical TCP Improvements  \nIndirect TCP (I-TCP)  \nIndirect TCP segments a TCP connection into a fixed part and a wireless part. The \nfollowing figure shows an example with a mobile host connected via a wireless link and an \naccess point to the \u2018wired\u2019 internet where the correspondent host resides.  \nStandard TCP is used between the fixed computer and the access point. No computer in the \ninternet recognizes any changes to TCP. Instead of the mobile host, the access point now \nterminates the standard TCP connection, acting as a proxy. This means that the access point is \nnow seen as the mobile host for the fixed host and as the fixed host for the mobile host. Between \nthe access point and the mobile host, a special TCP, adapted to wireless links, is used. However, \nchanging TCP for the wireless link is not a requirement. A suitable place for segmenting the \nconnection is at the foreign agent as it not only controls the mobility of the mobile host anyway \nand can also hand over the connection to the next foreign agent when the mobile host moves on. \n \nThe foreign agent acts as a proxy and relays all data in both directions. If CH \n(correspondent host) sends a packet to the MH, the FA acknowledges it and forwards it to the \nMH. MH acknowledges on successful reception, but this is only used by the FA. If a packet is \nlost on the wireless link, CH doesn\u2019t observe it and FA tries to retransmit it locally to maintain \nreliable data transport. If the MH sends a packet, the FA acknowledges it and forwards it to CH. \nIf the packet is lost on the wireless link, the mobile hosts notice this much faster due to the lower \nround trip time and can directly retransmit the packet. Packet loss in the wired network is now \nhandled by the foreign agent.  \n \n \n \n \n \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c95a502-d337-44c2-906d-165966ca84a0": {"__data__": {"id_": "9c95a502-d337-44c2-906d-165966ca84a0", "embedding": null, "metadata": {"page_label": "37", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64370351-d2a1-4fc4-913e-6e0693213290", "node_type": "4", "metadata": {"page_label": "37", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2240bbbc6ef52c80642131dd930a97e70dcb8d909e98a3c3c2dc3f6ee3cce932", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10f50603-106c-4b40-875f-82f455775e1a", "node_type": "1", "metadata": {"page_label": "36", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "52337b3dc9e465c7bc20ac7dd602f94812605722a254083ae94539364fc879f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "461ac678-d3ac-454f-a627-af07dc6e0184", "node_type": "1", "metadata": {}, "hash": "8201e33bdd0a3a63557795281e0a6167cd163b6b70ba0c61ffb77591fdfcc169", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 19  \n \nSocket and state migration after handover of a mobile host  \nDuring handover, the buffered packets, as well as the system state (packet sequence \nnumber, acknowledgements, ports, etc), must migrate to the new agent. No new connection may \nbe established for the mobile host, and the correspondent host must not see any changes in \nconnection state. Packet delivery in I-TCP is shown below:  \n \n \nAdvantages of I-TCP  \nNo changes in the fixed network necessary, no changes for the hosts (TCP protocol) \nnecessary, all current optimizations to TCP still work  \nSimple to control, mobile TCP is used only for one hop between, e.g., a foreign agent and \nmobile host  \n1. transmission errors on the wireless link do not propagate into the fixed network  \n2. therefore, a very fast retransmission of packets is possible, the short delay on the mobile hop s \nknown  \nIt is always dangerous to introduce new mechanisms in a huge network without knowing \nexactly how they behave.  \nNew optimizations can be tested at the last hop, without jeopardizing the stability of the \nInternet.  \nIt is easy to use different protocols for wired and wireless networks.  \n \nDisadvantages of I-TCP  \nLoss of end- to-end semantics:- an acknowledgement to a sender no longer means that a \nreceiver really has received a packet, foreign agents might crash.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "461ac678-d3ac-454f-a627-af07dc6e0184": {"__data__": {"id_": "461ac678-d3ac-454f-a627-af07dc6e0184", "embedding": null, "metadata": {"page_label": "38", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e8f639c-33e9-4893-8a2d-51be97be0321", "node_type": "4", "metadata": {"page_label": "38", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "15d705a8e97ab25084edcd740089c457ccb586a1003efadb9607155c17498773", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c95a502-d337-44c2-906d-165966ca84a0", "node_type": "1", "metadata": {"page_label": "37", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2240bbbc6ef52c80642131dd930a97e70dcb8d909e98a3c3c2dc3f6ee3cce932", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1f9b243-b7f8-4869-82cb-ea7c510d0496", "node_type": "1", "metadata": {}, "hash": "10ff5a55408592c7b128aff8b6cbcfeb9087c5bb4c57d3649d527f3bcff90cf5", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 20 Higher latency possible:- due to buffering of data within the foreign agent and forwarding \nto a new foreign agent  \nSecurity issue:- The foreign agent must be a trusted entity  \n \nSnooping TCP  \nThe main drawback of I-TCP is the segmentation of the single TCP connection into two \nTCP connections, which loses the original end- to-end TCP semantic. A new enhancement, which \nleaves the TCP connection intact and is completely transparent, is Snooping TCP. The main \nfunction is to buffer data close to the mobile host to perform fast local retransmission in case of \npacket loss.  \n \nSnooping TCP as a transparent TCP extension \n \nHere, the foreign agent buffers all packets with destination mobile host and additionally \n\u2018snoops\u2019 the packet flow in both directions to recognize acknowledgements. The foreign agent \nbuffers every packet until it receives an acknowledgement from the mobile host. If the FA does \nnot receive an acknowledgement from the mobile host within a certain amount of time, either the \npacket or the acknowledgement has been lost. Alternatively, the foreign agent could receive a \nduplicate ACK which also shows the loss of a packet. Now, the FA retransmits the packet \ndirectly from the buffer thus performing a faster retransmission compared to the CH. For \ntransparency, the FA does not acknowledge data to the CH, which would violate end- to-end \nsemantic in case of a FA failure. The foreign agent can filter the duplicate acknowledgements to \navoid unnecessary retransmissions of data from the correspondent host. If the foreign agent now \ncrashes, the time-out of the correspondent host still works and triggers a retransmission. The \nforeign agent may discard duplicates of packets already retransmitted locally and acknowledged \nby the mobile host. This avoids unnecessary traffic on the wireless link.  \nFor data transfer from the mobile host with destination correspondent host , the FA snoops into \nthe packet stream to detect gaps in the sequence numbers of TCP. As soon as the foreign agent \ndetects a missing packet, it returns a negative acknowledgement (NACK) to the mobile host. The \nmobile host can now retransmit the missing packet immediately. Reordering of packets is done \nautomatically at the correspondent host by TCP.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1f9b243-b7f8-4869-82cb-ea7c510d0496": {"__data__": {"id_": "b1f9b243-b7f8-4869-82cb-ea7c510d0496", "embedding": null, "metadata": {"page_label": "39", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "83d6dab2-a3fc-4002-b8bc-e1cb58132a58", "node_type": "4", "metadata": {"page_label": "39", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "39e1ad0bd78a2e55991b1fc698df43987e849ebb0c10043c549647c4f25ecc7a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "461ac678-d3ac-454f-a627-af07dc6e0184", "node_type": "1", "metadata": {"page_label": "38", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "15d705a8e97ab25084edcd740089c457ccb586a1003efadb9607155c17498773", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6553587c-43ac-4e8e-a574-78cdf89064bf", "node_type": "1", "metadata": {}, "hash": "6b2c27336598818c25846a5638dd41a25dbdef41e60f749ec97b2fd6696c360b", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 21  \nSnooping TCP: Packet delivery \n \nAdvantages of snooping TCP:  \nThe end -to-end TCP semantic is preserved.  \nMost of the enhancements are done in the foreign agent itself which keeps correspondent \nhost unchanged.  \nHandover of state is not required as soon as the mobile host moves to another foreign \nagent. Even though packets are present in the buffer, time out at the CH occurs and the packets \nare transmitted to the new COA.  \nNo problem arises if the new foreign agent uses the enhancement or not. If not, the \napproach automatically falls back to the standard solution.  \n \nDisadvantages of snooping TCP  \nSnooping TCP does not isolate the behavior of the wireless link as well as I-TCP. \nTransmission errors may propagate till CH.  \nUsing negative acknowledgements between the foreign agent and the mobile host \nassumes additional mechanisms on the mobile host. This approach is no longer transparent for \narbitrary mobile hosts.  \nSnooping and buffering data may be useless if certain encryption schemes are applied \nend-to-end between the correspondent host and mobile host. If encryption is used above the \ntransport layer, (eg. SSL/TLS), snooping TCP can be used.  \n \nMobile TCP  \nBoth I-TCP and Snooping TCP does not help much, if a mobile host gets disconnected. \nThe M-TCP (mobile TCP) approach has the same goals as I-TCP and snooping TCP: to prevent \nthe sender window from shrinking if bit errors or disconnection but not congestion cause current \nproblems. M-TCP wants to improve overall throughput, to lower the delay, to maintain end- to-\nend semantics of TCP, and to provide a more efficient handover. Additionally, M-TCP is \nespecially adapted to the problems arising from lengthy or frequent disconnections. M-TCP \nsplits the TCP connection into two parts as I-TCP does. An unmodified TCP is used on the \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2043, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6553587c-43ac-4e8e-a574-78cdf89064bf": {"__data__": {"id_": "6553587c-43ac-4e8e-a574-78cdf89064bf", "embedding": null, "metadata": {"page_label": "40", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7efaa37-121c-460c-8ed9-231e9cd52872", "node_type": "4", "metadata": {"page_label": "40", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bc4be83b970217cdd708f4f714ce0b7af7608477cc88fe29c964719c25cc42d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1f9b243-b7f8-4869-82cb-ea7c510d0496", "node_type": "1", "metadata": {"page_label": "39", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "39e1ad0bd78a2e55991b1fc698df43987e849ebb0c10043c549647c4f25ecc7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3b3b908-4889-42c7-b85c-57f65805be45", "node_type": "1", "metadata": {}, "hash": "cca46d934e78e4604c3cec86134b2272cbd0c3d1e94f281201e42966cfd8f3a0", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 22 standard host- supervisory host (SH) connection, while an optimized TCP is used on the SH-MH \nconnection.  \nThe SH monitors all packets sent to the MH and ACKs returned from the MH. If the SH \ndoes not receive an ACK for some time, it assumes that the MH is disconnected. It then chokes \nthe sender by setting the sender\u2019s window size to 0. Setting the window size to 0 forces the \nsender to go into persistent mode , i.e., the state of the sender will not change no matter ho w \nlong the receiver is disconnected. This means that the sender will not try to retransmit data. As \nsoon as the SH (either the old SH or a new SH) detects connectivity again, it reopens the window \nof the sender to the old value. The sender can continue sending at full speed. This mechanism \ndoes not require changes to the sender\u2019s TCP. The wireless side uses an adapted TCP that can \nrecover from packet loss much faster. This modified TCP does not use slow start, thus, M-TCP \nneeds a bandwidth manager to implement fair sharing over the wireless link.  \n \nAdvantages of M-TCP :  \nIt maintains the TCP end- to-end semantics. The SH does not send any ACK itself but \nforwards the ACKs from the MH.  \nIf the MH is disconnected, it avoids useless retransmissions, slow starts or breaking \nconnections by simply shrinking the sender\u2019s window to 0.  \nAs no buffering is done as in I-TCP, there is no need to forward buffers to a new SH. \nLost packets will be automatically retransmitted to the SH.  \n \nDisadvantages of M-TCP:  \nAs the SH does not act as proxy as in I-TCP, packet loss on the wireless link due to bit \nerrors is propagated to the sender. M-TCP assumes low bit error rates, which is not always a \nvalid assumption.  \nA modified TCP on the wireless link not only requires modifications to the MH protocol \nsoftware but also new network elements like the bandwidth manager.  \n \nTransmission/time-out freezing  \nOften, MAC layer notices connection problems even before the connection is actually \ninterrupted from a TCP point of view and also knows the real reason for the interruption. The \nMAC layer can inform the TCP layer of an upcoming loss of connection or that the current \ninterruption is not caused by congestion. TCP can now stop sending and \u2018freezes\u2019 the current \nstate of its congestion window and further timers. If the MAC layer notices the upcoming \ninterruption early enough, both the mobile and correspondent host can be informed. With a fast \ninterruption of the wireless link, additional mechanisms in the access point are needed to inform \nthe correspondent host of the reason for interruption. Otherwise, the correspondent host goes into \nslow start assuming congestion and finally breaks the connection.  \nAs soon as the MAC layer detects connectivity again, it signals TCP that it can resume \noperation at exactly the same point where it had been forced to stop. For TCP time simply does \nnot advance, so no timers expire.  \nAdvantages:  \nIt offers a way to resume TCP connections even after long interruptions of the \nconnection.  \nIt can be used together with encrypted data as it is independent of other TCP mechanisms \nsuch as sequence no or acknowledgements  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3b3b908-4889-42c7-b85c-57f65805be45": {"__data__": {"id_": "c3b3b908-4889-42c7-b85c-57f65805be45", "embedding": null, "metadata": {"page_label": "41", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d578e233-64b0-49a1-a6ff-85c569042d81", "node_type": "4", "metadata": {"page_label": "41", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "9078e9c87055c5732a378419e0dcc6979f493e6993895c2951534c28010f0ae3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6553587c-43ac-4e8e-a574-78cdf89064bf", "node_type": "1", "metadata": {"page_label": "40", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bc4be83b970217cdd708f4f714ce0b7af7608477cc88fe29c964719c25cc42d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd77ed0c-64db-4bd5-b818-55c95f22cb18", "node_type": "1", "metadata": {}, "hash": "d3780aa233f057916091da53aadcc252b9b7ebefcbeca0f21bf819185f9037bf", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit II  Page 23 Disadvantages:  \nLots of changes have to be made in software of MH, CH and FA.  \n \nSelective retransmission  \nA very useful extension of TCP is the use of selective retransmission. TCP \nacknowledgements are cumulative, i.e., they acknowledge in-order receipt of packets up to a \ncertain packet. A single acknowledgement confirms reception of all packets upto a certain \npacket. If a single packet is lost, the sender has to retransmit everything starting from the lost \npacket (go-back-n retransmission). This obviously wastes bandwidth, not just in the case of a \nmobile network, but for any network. Using selective retransmission, TCP can indirectly request \na selective retransmission of packets. The receiver can acknowledge single packets, not only \ntrains of in-sequence packets. The sender can now determine precisely which packet is needed \nand can retransmit it. The advantage of this approach is obvious: a sender retransmits only the \nlost packets. This lowers bandwidth requirements and is extremely helpful in slow wireless links. \nThe disadvantage is that a more complex software on the receiver side is needed. Also more \nbuffer space is needed to resequence data and to wait for gaps to be filled.  \n \nTransaction-oriented TCP  \nAssume an application running on the mobile host that sends a short request to a server \nfrom time to time, which responds with a short message and it requires reliable TCP transport of \nthe packets. For it to use normal TCP, it is inefficient because of the overhead involved. Standard \nTCP is made up of three phases: setup, data transfer and release. First, TCP uses a three-way \nhandshake to establish the connection. At least one additional packet is usually needed for \ntransmission of the request, and requires three more packets to close the connection via a three-\nway handshake. So, for sending one data packet, TCP may need seven packets altogether. This \nkind of overhead is acceptable for long sessions in fixed networks, but is quite inefficient for \nshort messages or sessions in wireless networks. This led to the development of transaction-\noriented TCP (T/TCP).  \nT/TCP can combine packets for connection establishment and connection release with \nuser data packets. This can reduce the number of packets down to two instead of seven. The \nobvious advantage for certain applications is the reduction in the overhead which standard TCP \nhas for connection setup and connection release. Disadvantage is that it requires changes in the \nsoftware in mobile host and all correspondent hosts. This solution does not hide mobility \nanymore. Also, T/TCP exhibits several security problems.  \nSTUDENTSFOCUS.COM\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd77ed0c-64db-4bd5-b818-55c95f22cb18": {"__data__": {"id_": "cd77ed0c-64db-4bd5-b818-55c95f22cb18", "embedding": null, "metadata": {"page_label": "42", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8542d4c3-087f-4cff-a8ef-97bb36b6a73f", "node_type": "4", "metadata": {"page_label": "42", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d47c430b9128ce9a80c7f21ce36a27139dd243e84b70856b745b34f8bd6cdd5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3b3b908-4889-42c7-b85c-57f65805be45", "node_type": "1", "metadata": {"page_label": "41", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "9078e9c87055c5732a378419e0dcc6979f493e6993895c2951534c28010f0ae3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59f67653-3696-418c-8df3-96cc09768e04", "node_type": "1", "metadata": {}, "hash": "95c991ce4cd29e4c8514c97a28c386057d615e8005c15c1db542b166bfcf3068", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 1 GSM  \nGSM is the most successful digital mobile telecommunication system in the world today. \nIt is used by over 800 million people in more than 190 countries. GSM permits the integration of \ndifferent voice and data services and the interworking with existing networks. Services make a \nnetwork interesting for customers. GSM has defined three different categories of services: \nBearer Services, Tele a nd Supplementary Services . \n \nBearer services:   \nGSM specifies different mechanisms for data transmission, the original GSM allowing \nfor data rates of up to 9600 bit/s for non-voice services. Bearer services permit transparent and \nnon-transparent, synchronous or asynchronous data transmission. \nTransparent bearer services only use the functions of the physical layer (layer 1) to transmit \ndata. Data transmission has a constant delay and throughput if no transmission errors occur. \nTransmission quality can be improved with the use of forward error correction (FEC) , which \ncodes redundancy into the data stream and helps to reconstruct the original data in case of \ntransmission errors. Transparent bearer services do not try to recover lost data in case of, for \nexample, shadowing or interruptions due to handover. Non-transparent bearer services use \nprotocols of layers two and three to implement error correction and flow control. These services \nuse the transparent bearer services, adding a radio link protocol (RLP). This protocol comprises \nmec\nhanisms of high-level data link control (HDLC) , and special selective-reject mechanisms \nto trigger retransmission of erroneous data. Using transparent and non-transparent services, GSM \nspecifies several bearer services for interworking with PSTN, ISDN, and packet switched public \ndata networks (PSPDN) like X.25, which is available worldwide. Data transmission can be full-\nduplex, synchronous with data rates of 1.2, 2.4, 4.8, and 9.6 kbit/s or full-duplex, asynchronous \nfrom 300 to 9,600 bit/s. \nTele services:  GSM mainly focuses on voice-oriented tele services. These comprise encrypted \nvoice transmission, message services, and basic data communication with terminals as known \nfrom the PSTN or ISDN (e.g., fax). The primary goal of GSM was the provision of high-quality \ndigital voice transmission. Special codecs (coder/decoder) are used for voice transmission, while \nother codecs are used for the transmission of analog data for communication with traditional \ncomputer modems used in, e.g., fax machines. Another service offered by GSM is the \nemergency number (eg 911, 999). This service is mandatory for all providers and free of \ncharge. This connection also has the highest priority, possibly pre-empting other connections, \nand will automatically be set up with the closest emergency center. A useful service for very \nsimple message transfer is the short message service (SMS) , which offers transmission of \nmessages of up to 160 characters. Sending and receiving of SMS is possible during data or voice \ntransmission. It can be used for \u201cserious\u201d  applications such as displaying road conditions, e-mail \nheaders or stock quotes, but it can also transfer logos, ring tones, horoscopes and love letters. \n \nThe\n successor of SMS, the enhanced message service (EMS) , offers a larger message \nsize, formatted text, and the transmission of animated pictures, small images and ring tones in a \nstandardized way. But with MMS, EMS was hardly used. MMS offers the transmission of larger \npictures (GIF, JPG, WBMP), short video clips etc. and comes with mobile phones that integrate \nsmall cameras. Another non-voice tele service is group 3 fax , which is available worldwide. In \nthis service, fax data is transmitted as digital data over the analog telephone network according to \nthe \nITU-T standards T.4 and T.30 using modems. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 4010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59f67653-3696-418c-8df3-96cc09768e04": {"__data__": {"id_": "59f67653-3696-418c-8df3-96cc09768e04", "embedding": null, "metadata": {"page_label": "43", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6adf53a3-8ea5-4aee-bec9-5dc812a3e1d9", "node_type": "4", "metadata": {"page_label": "43", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "401f1f583693959cfedee614e3ab735840b2b9b1dfe2707815703ed0ba4d025e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd77ed0c-64db-4bd5-b818-55c95f22cb18", "node_type": "1", "metadata": {"page_label": "42", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d47c430b9128ce9a80c7f21ce36a27139dd243e84b70856b745b34f8bd6cdd5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26f896ef-a475-4ca2-90a8-67a71bafbb07", "node_type": "1", "metadata": {}, "hash": "416f76f9ea447809459ce054d818f0979f8c44cb6fa4c38bb38c5cd9087a868d", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 2 Supplementary services:  \nIn addition to tele and bearer services, GSM providers can offer supplementary services . \nthese\n services offer various enhancements for the standard telephony service, and may vary from \nprovider to provider. Typical services are us er identification , call redirection , or forwarding of \nongoing calls, barring of incoming/outgoing calls, Advice of Charge (AoC) etc. Standard ISDN \nfeatures such as closed user groups a nd multiparty communication may be available. \n \nGSM Architecture  \nA GSM system consists of three subsystems, the radio sub system (RSS), the network \nand switching subsystem (NSS), and the operation subsystem (OSS). \n \nFunctional Architecture of a GSM System \n \nNetwork Switching Subsystem : The NSS is responsible for performing call processing and \nsubscriber related functions. The switching system includes the following functional units: \nHome location register (HLR): It is a database used for storage and management of \nsubscriptions. HLR stores permanent data about subscribers, including a subscribers service \nprofile, location information and activity status. When an individual buys a subscription from the \nPCS provider, he or she is registered in the HLR of that operator.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26f896ef-a475-4ca2-90a8-67a71bafbb07": {"__data__": {"id_": "26f896ef-a475-4ca2-90a8-67a71bafbb07", "embedding": null, "metadata": {"page_label": "44", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3e8dc8ea-8e0e-47ad-bf00-1219ed8325e9", "node_type": "4", "metadata": {"page_label": "44", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "9e9753e5e0e02f07c2498b089b493fd474c3860f7aaa3672bda1d46a905ac972", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59f67653-3696-418c-8df3-96cc09768e04", "node_type": "1", "metadata": {"page_label": "43", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "401f1f583693959cfedee614e3ab735840b2b9b1dfe2707815703ed0ba4d025e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a55c601d-3a48-41d1-9c91-f7bbfd993978", "node_type": "1", "metadata": {}, "hash": "25366365dea4db4573269c76e141368d03d74d63e81820c2e9025d7c6348f709", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 3 Visitor location register (VLR): It is a database that contains temporary information about \nsubscr\nibers that is needed by the MSC in order to service visiting subscribers. VLR is always \nintegrated with the MSC. When a MS roams into a new MSC area, the VLR connected to that \nMSC will request data about the mobile station from the HLR. Later if the mobile station needs \nto make a call, VLR will be having all the information needed for call setup. \nAuthe\nntication center (AUC): A unit called the AUC provides authentication and \nencryption parameters that verify the users identity and ensure the confidentiality of each call. \nEquipm\nent identity register (EIR): It is a database that contains information about the \nidentity of mobile equipment that prevents calls from stolen, unauthorized or defective mobile \nstations. \nMobile switching center (MSC): The MSC performs the telephony switching functions of \nthe system. It controls calls to and from other telephone and data systems. \n \nRadio Subsystem (RSS):   \nThe radio subsystem (RSS) comprises all radio specific entities, i.e., the mobile stations \n(MS) and the base station subsystem (BSS) . The figure shows the connection between the RSS \nand the NSS via the A interface (solid lines) and the connection to the OSS via the O interface \n(dashed lines).  \nBase station subsystem (BSS): A GSM network comprises many BSSs, each controlled \nby a base station controller (BSC). The BSS performs all functions necessary to maintain radio \nconnections to an MS, coding/decoding of voice, and rate adaptation to/from the wireless \nnetwork part. Besides a BSC, the BSS contains several BTSs. \nBase station controllers (BSC): The BSC provides all the control functions and physical \nlinks between the MSC and BTS. It is a high capacity switch that provides functions such as \nhandover, cell configuration data, and control of radio frequency (RF) power levels in BTS. A \nnumber of BSC\u2019s are served by and MSC.  \nBase transceiver station (BTS): The BTS handles the radio interface to the mobile station. \nA BTS can form a radio cell or, using sectorized antennas, several and is connected to MS via \nthe Um interface, and to the BSC via the Abis interface . The Um interface contains all the \nmechanisms necessary for wireless transmission (TDMA, FDMA etc.)The BTS is the radio \nequipment (transceivers and antennas) needed to service each cell in the network. A group of \nBTS\u2019s are controlled by an BSC.  \n \nOperation and Support system:   \nThe operations and maintenance center (OMC) is connected to all equipment in the \nswitching system and to the BSC. Implementation of OMC is called operation and support \nsystem (OSS). The OSS is the functional entity from which the network operator monitors and \ncontrols the system. The purpose of OSS is to offer the customer cost-effective support for \ncentralized, regional and local operational and maintenance activities that are required for a GSM \nne\ntwork. OSS provides a network overview and allows engineers to monitor, diagnose and \ntroubleshoot every aspect of the GSM network. \nThe\n mobile station (MS) consists of the mobile equipment (the terminal) and a smart card \ncalled the Subscriber Identity Module (SIM). The SIM provides personal mobility, so that the \nuser can have access to subscribed services irrespective of a specific terminal. By inserting the \nSIM card into another GSM terminal, the user is able to receive calls at that terminal, make calls \nfrom that terminal, and receive other subscribed services. The mobile equipment is uniquely \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a55c601d-3a48-41d1-9c91-f7bbfd993978": {"__data__": {"id_": "a55c601d-3a48-41d1-9c91-f7bbfd993978", "embedding": null, "metadata": {"page_label": "45", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6142f352-8384-40a6-8386-7bee74c0bf79", "node_type": "4", "metadata": {"page_label": "45", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "804b51d3409d6283ebfc19ccc404417fbf626f5cdb646d014a267ad8f14f9b83", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26f896ef-a475-4ca2-90a8-67a71bafbb07", "node_type": "1", "metadata": {"page_label": "44", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "9e9753e5e0e02f07c2498b089b493fd474c3860f7aaa3672bda1d46a905ac972", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "000bed21-98b0-4e2d-bcaf-a4d4374b04db", "node_type": "1", "metadata": {}, "hash": "589e3a2b16aa4df8fc170e6c61883c618e6b7c32cc9d88742e78a62d2f4bc8e6", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 4 identified by the International Mobile Equipment Identity (IMEI). The SIM card contains the \nInternational Mobile Subscriber Identity (IMSI) used to identify the subscriber to the system, a \nsecret key for authentication, and other information. The IMEI and the IMSI are independent, \nthereby allowing personal mobility. The SIM card may be protected against unauthorized use by \na password or personal identity number. \n \nRadi\no Interface \nThe most interesting interface in a GSM system is Um, the radio interface, as it \ncomprises various multiplexing and media access mechanisms. GSM implements SDMA using \ncells with BTS and assigns an MS to a BTS. \n \nG\nSM TDMA Frame, Slots and Bursts \nEach of the 248 channels is additionally separated in time via a GSM TDMA frame , i.e., \neach 200 kHz carrier is subdivided into frames that are repeated continuously. The duration of a \nframe is 4.615 ms. A frame is again subdivided into 8 GSM time slots , where each slot \nrepresents a physical TDM channel and lasts for 577 \u03bcs. Each TDM channel occupies the 200 \nkHz carrier for 577 \u03bcs every 4.615 ms. Data is transmitted in small portions, called bursts . The \nfollowing figure shows a so called normal burst as used for data transmission inside a time slot. \nAs shown, the burst is only 546.5 \u03bcs long and contains 148 bits. The remaining 30.5 \u03bcs are used \nas guard space to avoid overlapping with other bursts due to different path delays and to give \nthe transmitter time to turn on and off. The first and last three bits of a normal burst ( tail) are all \nset to 0 and can be used to enhance the receiver performance. The training sequence in the \nmiddle of a slot is used to adapt the parameters of the receiver to the current path propagation \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "000bed21-98b0-4e2d-bcaf-a4d4374b04db": {"__data__": {"id_": "000bed21-98b0-4e2d-bcaf-a4d4374b04db", "embedding": null, "metadata": {"page_label": "46", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "903743f0-e677-4472-b121-6ddc922aa647", "node_type": "4", "metadata": {"page_label": "46", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3c69fa6bd23c60130087c662a7a61a63c092c66ec743052f67d02f924b5e4225", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a55c601d-3a48-41d1-9c91-f7bbfd993978", "node_type": "1", "metadata": {"page_label": "45", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "804b51d3409d6283ebfc19ccc404417fbf626f5cdb646d014a267ad8f14f9b83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8900f060-4536-4ea1-ac07-b12731a511e8", "node_type": "1", "metadata": {}, "hash": "29528180d17968a594560765afae3a98208d692505330836c6914b6b5d407964", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 5 characteristics and to select the strongest signal in case of multi-path propagation. A flag S \nindicates whether the data fie ld contains user or network control data. \nApart from the normal burst, ETSI (1993a) defines four more bursts for data \ntransmission: a frequency correction burst allows the MS to correct the local oscillator to avoid \ninterference with neighbouring channels, a synchronization burst with an extended training \nsequence synchronizes the MS with the BTS in time, an access burst is used for the initial \nconnection setup between MS and BTS, and finally a dummy burst is used if no data is \navailable for a slot.  \n \nL\nogical channels and frame hierarchy \nTwo \ntypes of channels, namely physical channels and logical channels are present. \nPhysical channel: channel defined by specifying both, a carrier frequency and a TDMA timeslot \nnumber.  \nLogic channel: logical channels are multiplexed into the physical channels. Each logic channel \nperforms a specific task. Consequently the data of a logical channel is transmitted in the \ncorresponding timeslots of the physical channel. During this process, logical channels can \noccupy a part of the physical channel or even the entire channel. \nEach of the frequency carriers is divided into frames of 8 timeslots of approximately 577s \n(15/26 \ns) duration with 156.25 bits per timeslot. The duration of a TDMA frame is 4.615ms \n(577s x 8 = 4.615 ms). The bits per timeslot and frame duration yield a gross bit rate of about \n271kbps per TDMA frame. \n \nTDMA frames are grouped into two types of multiframes: \n26-frame multiframe (4.615ms x 26 = 120 ms) comprising of 26 TDMA frames. This \nmultiframe is used to carry traffic channels and their associated control channels. \n51-frame multiframe (4.615ms x 51 \uf040\uf040235.4 ms) comprising 51 TDMA frames. This  \nmultiframe is exclusively used for control channels. The multiframe structure is further \nmultiplexed into a single superframe of duration of 6.12sec. This means a superframe consists of \n51 mul\ntiframes of 26 frames. \n26 multiframes of 51 frames. \nThe last multiplexing level of the frame hierarchy, consisting of 2048 superframes \n(2715648 TDMA frames), is a hyperframe. This long time period is needed to support the GSM \ndata encryption mechanisms. The frame hierarchy is shown below: \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8900f060-4536-4ea1-ac07-b12731a511e8": {"__data__": {"id_": "8900f060-4536-4ea1-ac07-b12731a511e8", "embedding": null, "metadata": {"page_label": "47", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4bf4bcc8-97b0-41a0-9476-75a1007205a0", "node_type": "4", "metadata": {"page_label": "47", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "f746169ba1fbc6c5c888e1c43050917e329a901ef9a988c735a67a5e7cc74862", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "000bed21-98b0-4e2d-bcaf-a4d4374b04db", "node_type": "1", "metadata": {"page_label": "46", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3c69fa6bd23c60130087c662a7a61a63c092c66ec743052f67d02f924b5e4225", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61b8dac7-361a-414a-9977-cee0fc2c2ca0", "node_type": "1", "metadata": {}, "hash": "e04f185778d3b946b9708b2725328ec7756787da0b03aef503b634a88d1ad922", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 6  \nGSM Frame Hierarchy \n \nThere are two different types of logical channel within the GSM system: Traffic channels \n(TCHs), Control channels (CCHs). \nTraffic Channels:  \nTraffic channels carry user information such as encoded speech or user data. Traffic \nchannels are defined by using a 26-frame multiframe. Two general forms are defined: \ni. F\null rate traffic channels (TCH/F), at a gross bit rate of 22.8 kbps (456bits / 20ms) \nii. Half rate traffic channels (TCH/H), at a gross bit rate of 11.4 kbps. \nUplink and downlink are separated by three slots (bursts) in the 26-multiframe structure. \nThis simplifies the duplexing function in mobile terminals design, as mobiles will not \nneed to transmit and receive at the same time. The 26-frame multiframe structure, shown below \nmultiplexes two types of logical channels, a TCH and a Slow Associated Control Channel \n(SACC\nH). \nHowever, if required, a Fast Associated Control CHannel (FACCH) can steal TCH in \norder to transmit control information at a higher bit rate. This is usually the case during the \nhandover process. In total 24 TCH/F are transmitted and one SACCH. \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1323, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61b8dac7-361a-414a-9977-cee0fc2c2ca0": {"__data__": {"id_": "61b8dac7-361a-414a-9977-cee0fc2c2ca0", "embedding": null, "metadata": {"page_label": "48", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "404c9be4-2f96-49a2-9f1e-3c4034b0b7af", "node_type": "4", "metadata": {"page_label": "48", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b892b290ddd24b2f032824ef97cdee94e4b08a11b468e71b942a478cc8ddf014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8900f060-4536-4ea1-ac07-b12731a511e8", "node_type": "1", "metadata": {"page_label": "47", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "f746169ba1fbc6c5c888e1c43050917e329a901ef9a988c735a67a5e7cc74862", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0dc19d8-e01d-419f-9385-6ccd67f4a6f2", "node_type": "1", "metadata": {}, "hash": "9cef06485c88c7d86574ac9f1de636f47409ba07a80b2174f2116c3c08d51659", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 7 Control Channels:  \nControl channels carry system signalling and synchronisation data for control procedures \nsuch as location registration, mobile station synchronisation, paging, random access etc. between \nbase station and mobile station. Three categories of control channel are defined: Broadcast, \nCommon and Dedicated. Control channels are multiplexed into the 51-frame multiframe. \n \nB\nroadcast control channel (BCCH) :  \nA BTS uses this channel to signal information to all MSs within a cell. Information \ntransmitted in this channel is, e.g., the cell identifier, options available within this cell (frequency \nhopping), and frequencies available inside the cell and in neighboring cells. The BTS sends \ninformation for frequency correction via the frequency correction channel (FCCH) and \ninformation about time synchronization via the synchronization channel (SCH) , where both \nchannels are subchannels of the BCCH. \n \nCommon control channel (CCCH) :  \nAll information regarding connection setup between MS and BS is exchanged via the \nCCCH. For calls toward an MS, the BTS uses the paging channel (PCH) for paging the \nappropriate MS. If an MS wants to set up a call, it uses the random access channel (RACH) to \nsend data to the BTS. The RACH implements multiple access (all MSs within a cell may access \nthis channel) using slotted Aloha. This is where a collision may occur with other MSs in a GSM \ns\nystem. The BTS uses the access grant channel (AGCH) to signal an MS that it can \nuse a TCH or SDCCH for further connection setup. \n \nDedicated control channel (DCCH) :  \nWhile the previous channels have all been unidirectional, the following channels are \nbidirectional. As long as an MS has not established a TCH with the BTS, it uses the stand-alone \ndedicated control channel (SDCCH) with a low data rate (782 bit/s) for signaling. This can \ncomprise authentication, registration or other data needed for setting up a TCH. Each TCH and \nSDCCH has a slow associated dedicated control channel (SACCH) associated with it, which \nis used to exchange system information, such as the channel quality and signal power level. \nFinally, if more signaling information needs to be transmitted and a TCH already exists, GSM \nuses a fast associated dedicated control channel (FACCH) . The FACCH uses the time slots \nwhich are otherwise used by the TCH. This is necessary in the case of handovers where BTS and \nMS have to exchange larger amounts of data in less time. \n \nG\nSM Protocols \nThe signalling protocol in GSM is structured into three general layers depending on the \ninterface, as shown below. Layer 1 is the physical layer that handles all radio -specific functions. \nThis includes the creation of bursts according to the five different formats, multiplexing of \nbursts into a TDMA frame, synchronization with the BTS, detection of idle channels, and \nmeasurement of the channel qualit y on the downlink. The physical layer at Um uses GMSK for \ndigital modulation and performs encryption/decryption of data, i.e., encryption is not \nperformed end- to-end, but only between MS and BSS over the air interface. \n \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3325, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0dc19d8-e01d-419f-9385-6ccd67f4a6f2": {"__data__": {"id_": "c0dc19d8-e01d-419f-9385-6ccd67f4a6f2", "embedding": null, "metadata": {"page_label": "49", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9a49bcd-ff93-491a-9e31-fc4af4104fce", "node_type": "4", "metadata": {"page_label": "49", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2b5aa4fc23fa9c6fe3454636421a2052ecf2b7310908b35829ada8e0a76f5b13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61b8dac7-361a-414a-9977-cee0fc2c2ca0", "node_type": "1", "metadata": {"page_label": "48", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b892b290ddd24b2f032824ef97cdee94e4b08a11b468e71b942a478cc8ddf014", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82309be0-89fd-4e8f-a122-64dd28979a8f", "node_type": "1", "metadata": {}, "hash": "986a852b65237bdb3f91412275656f70258a981610ac76e4e8ad128f36e91948", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 8  \nProtocol Architecture for Signaling \n \nThe main tasks of the physical layer comprise channel coding and error \ndetection/correction , which is directly combined with the coding mechanisms. Channel  coding \nmakes extensive use of different forward error correction (FEC) schemes. \nSignaling between entities in a GSM network requires higher layers. For this purpose, the \nLAPDm protocol has been defined at the Um interface for layer two . LAPDm has been derived \nfrom link access procedure for the D-channel ( LAPD ) in ISDN systems, which is a version of \nHDLC. LAPDm is a lightweight LAPD because it does not need synchronization flags or \nchecksumming for error detection. LAPDm offers reliable data transfer over connections, \nresequencing of data frames, and flow control. \nThe\n network layer in GSM, layer three, comprises several sublayers. The lowest sublayer \nis the radio resource management (RR). Only a part of this layer, RR\u2019, is  implemented in the \nBTS, the remainder is situated in the BSC. The functions of RR\u2019 are  supported by the BSC via \nthe BTS management (BTSM). The main tasks of RR are setup, maintenance, and release of \nradio channels. Mobility management (MM) contains functions for registration, authentication, \nidentification, location updating, and the provision of a temporary mobile subscriber identity \n(TMSI). Finally, the call management (CM) layer contains three entities: call control (CC), short \nmessage service (SMS), and supplementary service (SS). SMS allows for message transfer using \nthe control channels SDCCH and SACCH, while SS offers the services like user identification, \ncall redirection, or forwarding of ongoing calls. CC provides a point- to-point connection between \ntwo terminals and is used by higher layers for call establishment, call clearing and change of call \nparameters. This layer also provides functions to send in-band tones, called dual tone multiple \nfr\nequency (DTMF), over the GSM network. These tones are used, e.g., for the remote control of \nanswering machines or the entry of PINs in electronic banking and are, also used for dialing in \ntraditional analog telephone systems. Additional protocols are used at the Abis and A interfaces. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82309be0-89fd-4e8f-a122-64dd28979a8f": {"__data__": {"id_": "82309be0-89fd-4e8f-a122-64dd28979a8f", "embedding": null, "metadata": {"page_label": "50", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "483ba301-d409-4560-b523-23ba88bcce6a", "node_type": "4", "metadata": {"page_label": "50", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "845362974a612f272f73aad99936bc5cd9e0fbdc477fe455e0a4c8769516c024", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0dc19d8-e01d-419f-9385-6ccd67f4a6f2", "node_type": "1", "metadata": {"page_label": "49", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2b5aa4fc23fa9c6fe3454636421a2052ecf2b7310908b35829ada8e0a76f5b13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cdc3908-31f4-4e6f-8430-685c456d5f0a", "node_type": "1", "metadata": {}, "hash": "5ba752a2440a53ab3415e5e6b4e67793ebedf9b29b68162b242b8fc55bd2245b", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 9 Data transmission at the physical layer typically uses pulse code modulation (PCM) systems. \nLAPD is used for layer two at Abis, BTSM for BTS management. Signaling system No. 7 (SS7) \nis used for signaling between an MSC and a BSC. This protocol also transfers all management \ninformation between MSCs, HLR, VLRs, AuC, EIR, and OMC. An MSC can also control a BSS \nvia a BSS application part (BSSAP) .  \n \nLocalization and Calling \nThe fundamental feature of the GSM system is the automatic, worldwide localization of \nusers for which, the system performs periodic location updates. The HLR always contains \ninformation about the current location and the VLR currently responsible for the MS informs the \nHLR about the location changes. Changing VLRs with uninterrupted availability is called \nroaming. Roaming can take place within a network of one provider, between two providers in a \ncountry and also between different providers in different countries. \nTo locate and address an MS, several numbers are needed: \nMobile station international ISDN number (MSISDN) :- The only important number \nfor a user of GSM is the phone number. This number consists of the country code (CC), the \nnational destination code (NDC) and the subscriber number (SN). \nInternational mobile subscriber identity (IMSI) : GSM uses the IMSI for internal \nunique identification of a subscriber. IMSI consists of a mobile country code (MCC), the mobile \nnetwork code (MNC), and finally the mobile subscriber identification number (MSIN). \n Temporary mobile subscriber identity (TMSI) : To hide the IMSI, which would give \naway the exact identity of the user signalling over the air interface, GSM uses the 4 byte TMSI \nfor local subscriber identification. \nMobile station roaming number (MSRN) : Another temporary address that hides the \nidentity and location of a subscriber is MSRN. The VLR generates this address on request from \nthe MSC, and the address is also stored in the HLR. MSRN contains the current visitor country \ncode (VCC), the visitor national destination code (VNDC), the identification of the current MSC \ntogether with the subscriber number. The MSRN helps the HLR to find a subscriber for an \nincoming call. For a mobile terminated call (MTC), the following figure shows the different \nsteps that take place: \n \nM\nobile Terminated Call (MTC) \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2533, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cdc3908-31f4-4e6f-8430-685c456d5f0a": {"__data__": {"id_": "4cdc3908-31f4-4e6f-8430-685c456d5f0a", "embedding": null, "metadata": {"page_label": "51", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0523389-20f5-445a-8be4-ffdf20b243dc", "node_type": "4", "metadata": {"page_label": "51", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "508feb07f098054c37ac6b6598b60671228f01718e163aea72e60603629712e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82309be0-89fd-4e8f-a122-64dd28979a8f", "node_type": "1", "metadata": {"page_label": "50", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "845362974a612f272f73aad99936bc5cd9e0fbdc477fe455e0a4c8769516c024", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d1fbb41-44b5-45c8-995d-22823d60c0a3", "node_type": "1", "metadata": {}, "hash": "c1bd0e87f1ef5280b212e19c4b1e4ba8e2b51c20198b6d223c5ae3cd61da298d", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 10 step 1: User dials the phone number of a GSM subscriber. \nstep 2: The fixed network (PSTN) identifies the number belongs to a user in GSM network and \nforwards the call setup to the Gateway MSC (GMSC). \nstep 3: The GMSC identifies the HLR for the subscriber and signals the call setup to HLR \nstep 4: The HLR checks for number existence and its subscribed services and requests an MSRN \nfrom the current VLR. \nstep 5: VLR sends the MSRN to HLR \nstep 6: Upon receiving MSRN, the HLR determines the MSC responsible for MS and forwards \nthe information to the GMSC \nstep 7: The GMSC can now forward the call setup request to the MSC indicated \nstep 8: The MSC requests the VLR for the current status of the MS \nstep 9: VLR sends the requested information \nstep 10: If MS is available, the MSC initiates paging in all cells it is responsible for. \nstep 11: The BTSs of all BSSs transmit the paging signal to the MS \nstep 12: Step 13 : If MS answers, VLR performs security checks \nstep 15: Till step 17 : Then the VLR signals to the MSC to setup a connection to the MS. For a \nmobile originated call (MOC), the following steps take place: \n \nstep 1: The MS transmits a request for a new connection \nstep 2: The BSS forwards this request to the MSC \nstep 3: Step 4: The MSC then checks if this user is allowed to set up a call with the requested \nand checks the availability of resources through the GSM network and into the PSTN. If all \nresources are available, the MSC sets up a connection between the MS and the fixed network. In \naddition to the steps mentioned above, other messages are exchanged between an MS and BTS \nduring connection setup (in either direction). \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1862, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d1fbb41-44b5-45c8-995d-22823d60c0a3": {"__data__": {"id_": "7d1fbb41-44b5-45c8-995d-22823d60c0a3", "embedding": null, "metadata": {"page_label": "52", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a689957f-2b45-4270-9315-d44f7e747693", "node_type": "4", "metadata": {"page_label": "52", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "38cd97d240426fe8d8b946729444f21586226625fe589698d3ee9cd84c8763fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cdc3908-31f4-4e6f-8430-685c456d5f0a", "node_type": "1", "metadata": {"page_label": "51", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "508feb07f098054c37ac6b6598b60671228f01718e163aea72e60603629712e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be309a96-cc75-4df3-9b17-371b12fc8611", "node_type": "1", "metadata": {}, "hash": "98e46f350e4912b483a368bf2914f31d0fed4397718455b1ccd33116e93edf03", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 11  \nMessage flow for MTC and MOC \n \nHandover \nCellular systems require handover procedures, as single cells do not cover the whole \nservice area. However, a handover should not cause a cut-off, also called call drop . GSM aims at \nmaximum handover duration of 60 ms. There are two basic reasons for a handover: \n1. The mobile station moves out of the range of a BTS, decreasing the received signal level \nincreasing the error rate thereby diminishing the quality of the radio link. \n2. Handover may be due to load balancing, when an MSC/BSC decides the traffic is too high in \none cell and shifts some MS to other cells with a lower load. \nThe four possible handover scenarios of GSM are shown below: \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be309a96-cc75-4df3-9b17-371b12fc8611": {"__data__": {"id_": "be309a96-cc75-4df3-9b17-371b12fc8611", "embedding": null, "metadata": {"page_label": "53", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "76ca92c4-8a2c-4b8d-a63f-7a473f488343", "node_type": "4", "metadata": {"page_label": "53", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "55fd85d29ad372522abca4b7b8bb287386f5e2f7db926107322820bf721ef947", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d1fbb41-44b5-45c8-995d-22823d60c0a3", "node_type": "1", "metadata": {"page_label": "52", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "38cd97d240426fe8d8b946729444f21586226625fe589698d3ee9cd84c8763fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6224c3ad-9729-4adf-b36d-c1b79a68e546", "node_type": "1", "metadata": {}, "hash": "9fc687fd58bb542f9715d75f8e453b132843c49674d8eb37a01be9a063d55e85", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 12 Intra-cell handover: Within a cell, narrow-band interference could make transmission at \na certain frequency impossible. The BSC could then decide to change the carrier frequency \n(scenario 1). \nInter-cell, intra-BSC handover: This is a typical handover scenario. The mobile station \nmoves from one cell to another, but stays within the control of the same BSC. The BSC then \nperforms a handover, assigns a new radio channel in the new cell and releases the old one \n(scenario 2). \nInter-BSC, intra-MSC handover: As a BSC only controls a limited number of cells; \nGSM also has to perform handovers between cells controlled by different BSCs. This handover \nthen has to be controlled by the MSC (scenario 3). \nInter MSC handover: A handover could be required between two cells belonging to \ndifferent MSCs. Now both MSCs perform the handover together (scenario 4). \nTo provide all the necessary information for a handover due to a weak link, MS and BTS \nboth perform periodic measurements of the downlink and uplink quality respectively. \nMeasurement reports are sent by the MS about every half-second and contain the quality of the \ncurrent link used for transmission as well as the quality of certain channels in neighboring cells \n(the BCCHs). \n \n \n.  \nHandover decision depending on receive level \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6224c3ad-9729-4adf-b36d-c1b79a68e546": {"__data__": {"id_": "6224c3ad-9729-4adf-b36d-c1b79a68e546", "embedding": null, "metadata": {"page_label": "54", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33f11817-0fc2-498f-8923-d3e8643bd5b7", "node_type": "4", "metadata": {"page_label": "54", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "6fdfca135882844b7697556136afa3e9f4cff8c1a9f5aafe1c9a7c2bde6c2cc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be309a96-cc75-4df3-9b17-371b12fc8611", "node_type": "1", "metadata": {"page_label": "53", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "55fd85d29ad372522abca4b7b8bb287386f5e2f7db926107322820bf721ef947", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c00d221-6b11-41f3-9d47-d6bc387e60a3", "node_type": "1", "metadata": {}, "hash": "e3a12ad74e0cb3f62816f101749e2a9b0e72e0400ff46bac401eb1aeb2729bf5", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 13  \nIntra-MSC handover \nMore sophisticated handover mechanisms are needed for seamless handovers between \ndifferent systems. \n \nSecurity \nGSM offers several security services using confidential information stored in the AuC \nand in the individual SIM. The SIM stores personal, secret data and is protected with a PIN \nagainst unauthorized use. Three algorithms have been specified to provide security services in \nGSM. Algorithm A3 is used for authentication , A5 for encryption , and A8 for the generation \nof a cipher key . The various security services offered by GSM are: \n \nAccess control and authentication: The first step includes the authentication of a valid user for \nthe SIM. The user needs a secret PIN to access the SIM. The next step is the subscriber \nauthentication. This step is based on a challenge-response scheme as shown below: \n \n \nS\nubscriber Authentication \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1076, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c00d221-6b11-41f3-9d47-d6bc387e60a3": {"__data__": {"id_": "9c00d221-6b11-41f3-9d47-d6bc387e60a3", "embedding": null, "metadata": {"page_label": "55", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ac99685-1149-4915-8188-e4d4183145b9", "node_type": "4", "metadata": {"page_label": "55", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "31fc68d23a1fd21b21eb7aceaa44d2a71cb2911113f6fb6dd58b82001abfb9df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6224c3ad-9729-4adf-b36d-c1b79a68e546", "node_type": "1", "metadata": {"page_label": "54", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "6fdfca135882844b7697556136afa3e9f4cff8c1a9f5aafe1c9a7c2bde6c2cc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1bd24ee1-603c-4d7e-87f3-f252ee0a3c50", "node_type": "1", "metadata": {}, "hash": "7f14af62b3f94463ead769045b33430f0660ec33dc190fd612ad4ed5b69a436f", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 14 Authentication is based on the SIM, which stores the individual authentication key Ki, \nthe user identification IMSI , and the algorithm used for authentication A3. The AuC performs \nthe basic generation of random values RAND, signed responses SRES, and cipher keys Kc for \neach IMSI, and then forwards this information to the HLR. The current VLR requests the \nappropriate values for RAND, SRES, and Kc from the HLR. For authentication, the VLR sends \nthe random value RAND to the SIM. Both sides, network and subscriber module, perform the \nsame operation with RAND and the key Ki, called A3. The MS sends back the SRES generated \nby the SIM; the VLR can now compare both values. If they are the same, the VLR accepts the \nsubscriber, otherwise the subscriber is rejected.  \n \nConfidentiality:  \nAll user-related data is encrypted. After authentication, BTS and MS apply encryption to \nvoice, data, and signalling as shown below. \n \n \nTo ensure privacy, all messages containing user-related information are encrypted in \nGSM over the air interface. After authentication, MS and BSS can start using encryption by \napplying the cipher key Kc, which is generated using the individual key Ki and a random value \nby applying the algorithm A8. Note that the SIM in the MS and the network both calculate the \nsame Kc based on the random value RAND. The key Kc itself is not transmitted over the air \ninterface. MS and BTS can now encrypt and decrypt data using the algorithm A5 and the cipher \nkey Kc. \n \nAnonymity:  \nTo provide user anonymity, all data is encrypted before transmission, and user identifiers \nare not used over the air. Instead, GSM transmits a temporary identifier (TMSI), which is newly \nassigned by the VLR after each location update. Additionally, the VLR can change the TMSI at \nany time. \n \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bd24ee1-603c-4d7e-87f3-f252ee0a3c50": {"__data__": {"id_": "1bd24ee1-603c-4d7e-87f3-f252ee0a3c50", "embedding": null, "metadata": {"page_label": "56", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7fb1e14-07a9-480f-ad34-f574849ab35c", "node_type": "4", "metadata": {"page_label": "56", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "439b8c653d3a03a5c44f8fc1290eb439d1c01f6d51acac3c3c438c1fe9719c35", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c00d221-6b11-41f3-9d47-d6bc387e60a3", "node_type": "1", "metadata": {"page_label": "55", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "31fc68d23a1fd21b21eb7aceaa44d2a71cb2911113f6fb6dd58b82001abfb9df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb733c47-1299-4745-8c1b-71b0593783c4", "node_type": "1", "metadata": {}, "hash": "61468eec72c2d4c3f67367b162ba56b4c18aa31a9176a6a344318a19f2d84caa", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 15 New Data Services \nTo enhance the data transmission capabilities of GSM, two basic approaches are possible. \nAs the basic GSM is based on connection-oriented traffic channels, e.g., with 9.6 kbit/s each, \nseveral channels could be combined to increase bandwidth. This system is called HSCSD  {high \nspeed circuit switched data}. A more progressive step is the introduction of packet oriented \ntraffic in GSM, i.e., shifting the paradigm from connections/telephone thinking to \npackets/internet thinking. The system is called GPRS {general packet radio service} . \n \nHSCD :  \nA straightforward improvement of GSM\u2019s data transmission capabilities is high  speed \ncircuit switched data (HSCSD) in which higher data rates are achieved by bundling several \nTCHs. An MS requests one or more TCHs from the GSM network, i.e., it allocates several \nTDMA slots within a TDMA frame. This allocation can be asymmetrical, i.e. more slots can be \nallocated on the downlink than on the uplink, which fits the typical user behaviour of \ndownloading more data compared to uploading. A major disadvantage of HSCD is that it still \nuses the connection-oriented mechanisms of GSM, which is not efficient for computer data \ntraffic. \n \nGPRS :  \nThe next step toward more flexible and powerful data transmission avoids the problems \nof HSCSD by being fully packet-oriented. The general packet radio service (GPRS) provides \npacket mode transfer for applications that exhibit traffic patterns such as frequent transmission of \nsmall volumes (e.g., typical web requests) or infrequent transmissions of small or medium \nvolumes (e.g., typical web responses) according to the requirement specification. For the new \nGPRS radio channels, the GSM system can allocate between one and eight time slots within a \nTDMA frame. Time slots are not allocated in a fixed, pre-determined manner but on demand. All \nti\nme slots can be shared by the active users; up- and downlink are allocated separately. \nAllocation of the slots is based on current load and operator preferences. The GPRS concept is \nindependent of channel characteristics and of the type of channel (traditional GSM traffic or \ncontrol channel), and does not limit the maximum data rate (only the GSM transport system \nlimits the rate). All GPRS services can be used in parallel to conventional services. GPRS \nincludes several security services such as authentication, access control, user identity \nconfidentiality, and user information confidentiality. \n \nThe\n GPRS architecture introduces two new network elements, which are called GPRS \nsupport nodes (GSN) and are in fact routers. All GSNs are integrated into the standard GSM \narchitecture, and many new interfaces have been defined. The gateway GPRS support node \n(GGSN) is the interworking unit between the GPRS network and external packet data networks \n(PDN). This node contains routing information for GPRS users, performs address conversion, \nand tunnels data to a user via encapsulation. The GGSN is connected to external networks (e.g., \nIP or X.25) via the Gi interface and transfers packets to the SGSN via an IPbased GPRS \nbackbone network (Gn interface). The other new element is the serving GPRS support node \n(SGSN) which supports the MS via the Gb interface. The SGSN, for example, requests user \naddresses from the GPRS register (GR) , keeps track of the individual MSs\u2019  location, is \nresponsible for collecting billing information (e.g., counting bytes), and performs several \nsecurity functions such as access control. The SGSN is connected to a BSC via frame relay and \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 3772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb733c47-1299-4745-8c1b-71b0593783c4": {"__data__": {"id_": "eb733c47-1299-4745-8c1b-71b0593783c4", "embedding": null, "metadata": {"page_label": "57", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3416f0e1-58f0-4c4f-85fc-01b8981715ff", "node_type": "4", "metadata": {"page_label": "57", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "a0e4dc42d4a5be72b167a73ddbc06ccd706ec5efc4ea0fe34e5e0a753016a047", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bd24ee1-603c-4d7e-87f3-f252ee0a3c50", "node_type": "1", "metadata": {"page_label": "56", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "439b8c653d3a03a5c44f8fc1290eb439d1c01f6d51acac3c3c438c1fe9719c35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3526de2-761f-48e5-96db-865f61dc341c", "node_type": "1", "metadata": {}, "hash": "234da0bef37c299a7b8484f29a8c770f2e39a84ed4f2ed1be578cad3313b8540", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 16 is basically on the same hierarchy level as an MSC. The GR, which is typically a part of the \nHLR, stores all GPRS-relevant data. \n \nGPRS Architecture Reference Model \n \nAs shown above, packet data is transmitted from a PDN, via the GGSN and SGSN \ndirectly to the BSS and finally to the MS. The MSC, which is responsible for data transport in \nthe traditional circuit-switched GSM, is only used for signaling in the GPRS scenario. Before \nsending any data over the GPRS network, an MS must attach to it, following the procedures of \nthe mobility management . The attachment procedure includes assigning a temporal identifier, \ncalled a temporary logical link identity (TLLI) , and a ciphering key sequence number \n(CKSN) for data encryption. For each MS, a GPRS context is set up and stored in the MS and \nin the corresponding SGSN. Besides attaching and detaching, mobility management also \ncomprises functions for authentication, location management, and ciphering. \n \nThe\n following figure shows the protocol architecture of the transmission plane for GPRS. \nAll data within the GPRS backbone, i.e., between the GSNs, is transferred using the GPRS \ntunnelling protocol (GTP) . GTP can use two different transport protocols, either the reliable \nTCP (needed for reliable transfer of X.25 packets) or the non-reliable UDP (used for IP \npackets). The network protocol for the GPRS backbone is IP (using any lower layers). To adapt \nto the different characteristics of the underlying networks, the subnetwork dependent \nconvergence protocol (SNDCP) is used between an SGSN and the MS. On top of SNDCP and \nGTP, user packet data is tunneled from the MS to the GGSN and vice versa. To achieve a high \nreliability of packet transfer between SGSN and MS, a special LLC is used, which comprises \nARQ and FEC mechanisms for PTP (and later PTM) services.  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2043, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3526de2-761f-48e5-96db-865f61dc341c": {"__data__": {"id_": "e3526de2-761f-48e5-96db-865f61dc341c", "embedding": null, "metadata": {"page_label": "58", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "072ed527-4901-4eb0-91df-eb8615d08a1b", "node_type": "4", "metadata": {"page_label": "58", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "38b897445b125ec3e7c1f1019e3566d57a786826757baef795d1bb73b67eb734", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb733c47-1299-4745-8c1b-71b0593783c4", "node_type": "1", "metadata": {"page_label": "57", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "a0e4dc42d4a5be72b167a73ddbc06ccd706ec5efc4ea0fe34e5e0a753016a047", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b83594f2-d064-4676-9c71-3288df8f1caa", "node_type": "1", "metadata": {}, "hash": "38a212d2107dd4cc897bee1d944c0f798aeeb4363c6a36b3d3abe06381bdaa62", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                         Course Material (Lecture Notes) \nIT6601 Mobile Computing     Unit III  Page 17  \nGPRS Transmission Plane Protocol Reference Model \nA \nbase station subsystem GPRS protocol (BSSGP) is used to convey routing and QoS- \nrelated information between the BSS and SGSN. BSSGP does not perform error correction and \nworks on top of a frame relay (FR) network. Finally, radio link dependent protocols are needed \nto transfer data over the Um interface. The radio link protocol (RLC) provides a reliable link, \nwhile the MAC controls access with signalling procedures for the radio channel and the mapping \nof LLC frames onto the GSM physical channels. The radio interface at Um needed for GPRS \ndoes not require fundamental changes compared to standard GSM. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b83594f2-d064-4676-9c71-3288df8f1caa": {"__data__": {"id_": "b83594f2-d064-4676-9c71-3288df8f1caa", "embedding": null, "metadata": {"page_label": "59", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07b4fb86-a5bf-4fc5-b626-9bbc5d3cf6e8", "node_type": "4", "metadata": {"page_label": "59", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "cb7061c74c8910d8e928da9bec9dc9990dc30e5d30e4da01ba5584470d6800c2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3526de2-761f-48e5-96db-865f61dc341c", "node_type": "1", "metadata": {"page_label": "58", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "38b897445b125ec3e7c1f1019e3566d57a786826757baef795d1bb73b67eb734", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db527b50-093d-4be0-b02d-117ada4109fb", "node_type": "1", "metadata": {}, "hash": "7ae4126e70039f01270d445e545e29e8986a1b1259df7f86d563240519b96634", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \n HISTORICAL DEVELOPMENTS OF MANET \n \nIn early 1970s, the Mobile Ad hoc Network (MANET) was called packet radio network, which \nwas sponsored by Defense Advanced Research Projects Agency (DARPA). They had a project \nnamed packet radio having several wireless terminals that could communication with each other \non battlefields. \u201cIt is interesting to note that these early packet radio systems predict the Internet \nand indeed were part of the motivation of the original Internet Protocol suite \u201d . The whole life \ncycle of Ad hoc networks could be categorized into the first, second, and the third generation Ad \nhoc networks systems. Present Ad hoc networks systems are considered the third generation . \nThe first generation goes back to 1972. At the time, they were called PRNET (Packet Radio \nNetworks). In conjunction with ALOHA (Arial Locations of Hazardous Atmospheres) and \nCSMA (Carrier Sense Medium Access), approaches for medium access control and a kind of \ndistance-vector routing PRNET were used on a trial basis to provide different networking \ncapabilities in a combat environment. The second generation of Ad hoc networks emerged in \n1980s, when the Ad hoc network systems were further enhanced and implemented as a part of \nthe SURAN (Survivable Adaptive Radio Networks) program. This provided a packet-switched \nnetwork to the mobile battlefield in an environment without infrastructure. This On-Demand \nRouting In Multi-Hop Wireless Mobile Ad hoc Networks Overview of Mobile Ad hoc Networks \n20 program proved to be beneficial in improving the radios' performance by making them \nsmaller, cheaper, and resilient to electronic attacks. In the 1990s (Third generation), the concept \nof commercial Ad hoc networks arrived with notebook computers and other viable \ncommunication equipments. At the same time, the idea of a collection of mobile nodes was \nproposed at several researchers gatherings. The IEEE 802.11 subcommittee had adopted the term \n\"Ad hoc networks\" and the research community had started to look into the possibility of \ndeploying Ad hoc networks in other areas of application \n \nBASIC CONCEPTS OF MOBILE AD HOC NETWORKS \n \nAn Ad hoc network is a collection of mobile nodes, which forms a temporary network without \nthe aid of centralized administration or standard support devices regularly available as \nconventional networks. These nodes generally have a limited transmission range and, so, each \nnode seeks the assistance of its neighboring nodes in forwarding packets and hence the nodes in \nan Ad hoc network can act as both routers and hosts. Thus a node may forward packets between \nother nodes as well as run user applications. By nature these types of networks are suitable for \nsituations where either no fixed infrastructure exists or deploying network is not possible. Ad \nhoc mobile networks have found many applications in various fields like military, emergency, \nconferencing and sensor networks. Each of these application areas has their specific \nrequirements for routing protocols. Since the network nodes are mobile, an Ad hoc network will \ntypically have a dynamic topology, which will have profound effects on network characteristics. \nNetwork nodes will often be battery powered, which limits the capacity of CPU, memory, and \nbandwidth. This will require network functions that are resource effective. Furthermore, the \nwireless (radio) media will also affect the behavior of the network due to fluctuating link \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db527b50-093d-4be0-b02d-117ada4109fb": {"__data__": {"id_": "db527b50-093d-4be0-b02d-117ada4109fb", "embedding": null, "metadata": {"page_label": "60", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b96a1d9f-778e-4e73-b939-a58cfd5799fe", "node_type": "4", "metadata": {"page_label": "60", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ab6ab6fd881a314e4a02063e567266a7299795fb263c4d66dde5eee3c473e28c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b83594f2-d064-4676-9c71-3288df8f1caa", "node_type": "1", "metadata": {"page_label": "59", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "dca09dcee7e0cfeb32c78559eef4801b040619e648de0e0e68697bd7337a2ba3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e204855-41eb-486d-961b-7e2f0c095d67", "node_type": "1", "metadata": {}, "hash": "ffa8dad6e16b18f1e5ebad9834b0db4e311bcd6e82ddf347ec3c7320c0cc22ea", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 2  \n \nbandwidths resulting from relatively high error rates. These unique desirable features pose \nseveral new challenges in the design of wireless Ad hoc networking protocols.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nNetwork functions such as routing, address allocation, authentication and authorization must be \ndesigned to cope with a dynamic and volatile On-Demand Routing In Multi-Hop Wireless \nMobile Ad hoc Networks Overview of Mobile Ad hoc Networks 21 network topology. In order \nto establish routes between nodes, which are farther than a single hop, specially configured \nrouting protocols are engaged. The unique feature of these protocols is their ability to trace \nroutes in spite of a dynamic topology. In the simplest scenarios, nodes may be able to \ncommunicate directly with each other, for example, when they are within wireless transmission \nrange of each other. However, Ad hoc networks must also support communication between \nnodes that are only indirectly connected by a series of wireless hops through other nodes. For \nexample, to establish communication between nodes A and C the network must enlist the aid of \nnode B to relay packets between them. The circles indicate the nominal range of each node \u2019s \nradio transceiver. Nodes A and C are not in direct transmission range of each other, since A \u2019s \ncircle does not cover C. A Mobil Ad hoc network of three nodes, where nodes A and C must \ndiscover the route through B in order to communicate. In general, an Ad hoc network is a \nnetwork in which every node is potentially a router and every node is potentially mobile. The \npresence of wireless communication and mobility make an Ad hoc network unlike a traditional \nwired network and requires that the routing protocols used in an Ad hoc network be based on \nnew and different principles. Routing protocols for traditional wired networks are designed to \nsupport tremendous numbers of nodes, but they assume that the relative position of the nodes \nwill generally remain unchanged. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2284, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e204855-41eb-486d-961b-7e2f0c095d67": {"__data__": {"id_": "8e204855-41eb-486d-961b-7e2f0c095d67", "embedding": null, "metadata": {"page_label": "61", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23a0842e-dfec-4fc6-9db3-74c20e0ccc23", "node_type": "4", "metadata": {"page_label": "61", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "1819297403c989bac2ba4cee36bcaee5d9d76702f79e0794b124da32e922abe4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db527b50-093d-4be0-b02d-117ada4109fb", "node_type": "1", "metadata": {"page_label": "60", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ba22462399ab1ca87925da25216452a329d99b3b20a0772703de7578da2c9040", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70f988c3-fc79-4486-a022-6ca37b29c91a", "node_type": "1", "metadata": {}, "hash": "36b0dafbf91eb29d546f5ba55d9c080b6f618b6444fd3a96ac80a0d64ad5f198", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 3  \n Characteristics of MANET  \nIn MANET, each node act as both host and router. That is it is autonomous in behavior. \nMulti-hop radio relaying- When a source node and destination node for a message is out of \nthe r\nadio range, the MANETs are capable of multi-hop routing. \nDistributed nature of operation for security, routing and host configuration. A centralized \nfirewall is absent here. \nThe nodes can join or leave the network anytime, making the network topology dynamic in \nnature. \nMobile nodes are characterized with less memory, power and light weight features.  \nThe\n reliability, efficiency, stability and capacity of wireless links are often inferior when \ncompared with wired links. This shows the fluctuating link bandwidth of wireless link s. \nMobile and spontaneous behavior which demands minimum human intervention to configure \nthe network. \nAll nodes have identical features with similar responsibilities and capabilities and hence it \nforms a completely symmetric environment. \nHigh user density and large level of user \nmobility. Nodal connectivity is intermittent. \n \n \nMANETs Applications \n \n1)Military battlefield: Ad-Hoc networking would allow the military to take advantage of  \ncommonplace network technology to maintain an information network between the soldiers, \nvehicles, and military information head quarter. \n \n  Collaborative work: For some business environments, the need for collaborative computing  \nmight be more important outside office environments than inside and where people do need to \nhave outside meetings to cooperate and exchange information on a given project.  \n \n  Local level: Ad-Hoc networks can autonomously link an instant and temporary multimedia  \nnetwork using notebook computers to spread and share information among participants at a e.g. \nconference or classroom. Another appropriate local level application might be in home networks \nwhere devices can communicate directly to exchange information.  \n \n  Personal area network and bluetooth : A personal area network is a short range, localized  \nnetwork where nodes are usually associated with a given person. Short-range MANET such as \nBluetooth can simplify the inter communication between various mobile devices such as a \nlaptop, and a mobile phone.  \n \n  Commercial Sector : Ad hoc can be used in emergency/rescue operations for disaster relief  \nefforts, e.g. in fire, flood, or earthquake. Emergency rescue operations must take place where \nnon-existing or damaged communications infrastructure and rapid deployment of a \ncommunication network is needed.  \n \nTactical Networks  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2858, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70f988c3-fc79-4486-a022-6ca37b29c91a": {"__data__": {"id_": "70f988c3-fc79-4486-a022-6ca37b29c91a", "embedding": null, "metadata": {"page_label": "62", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5928ffe-1e5a-4227-ace5-4b9c91754116", "node_type": "4", "metadata": {"page_label": "62", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bb52a89ab714dfd0e3702a31e9050ddc5f410b2cfca585d96930b2adf16fe67b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e204855-41eb-486d-961b-7e2f0c095d67", "node_type": "1", "metadata": {"page_label": "61", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "d7a647260e3e408b189b60672a5a9c3736cada6d66356bc9a02aec0854c5ac52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2edfdfea-2983-434c-81a0-3d63a865ca17", "node_type": "1", "metadata": {}, "hash": "f308aa509968d9384c55c079f6dce209cefcfc93dc7787e01ba898281f4033ad", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 4  \n \u2022 Military communication and operations  \n\u2022 Automated battlefields \n \nEmergency services  \n\u2022 Search and rescue operations  \n\u2022 Disaster recovery  \n\u2022 Replacement of fixed infrastructure in case of environmental disasters  \n\u2022 Policing and fire fighting  \n\u2022 Supporting doctors and nurses in hospitals \n \nCommercial and civilian  \n\u2022 E-commerce: electronic payments anytime and anywhere environments \n\u2022 Business: dynamic database access, mobile offices  \n\u2022 Vehicular services: road or accident guidance, transmission of road and weather \nconditions, taxi cab network, inter-vehicle networks \n\u2022 Sports stadiums, trade fairs, shopping malls  \n\u2022 Networks of visitors at airports \nHome and enterprise  \n\u2022 Home/office wireless networking networking \n\u2022 Conferences, meeting rooms  \n\u2022 Personal area networks (PAN), Personal networks (PN)  \n\u2022 Networks at construction sites Education  \n\u2022 Universities and campus settings  \n\u2022 Virtual classrooms  \n\u2022 Ad hoc communications during meetings or lectures \n \nEntertainment  \n\u2022 Multi-user games  \n\u2022 Wireless P2P networking  \n\u2022 Outdoor Internet access  \n\u2022 Robotic pets  \n\u2022 Theme parks \n \nSensor networks  \n\u2022 Home applications: smart sensors and actuators embedded in consumer electronics \n\u2022 Body area networks (BAN)  \n\u2022 Data tracking of environmental conditions, animal movements, chemical/biological detection \n \nContext aware services  \n\u2022 Follow-on services: call-forwarding, mobile workspace  \n\u2022 Information services: location specific services, time dependent services  \n\u2022 Infotainment: touristic information \n \nCoverage extension  \n\u2022 Extending cellular network access \n\u2022 Linking up with the Internet, intranets, etc. \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 1911, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2edfdfea-2983-434c-81a0-3d63a865ca17": {"__data__": {"id_": "2edfdfea-2983-434c-81a0-3d63a865ca17", "embedding": null, "metadata": {"page_label": "63", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e0494aa-374d-4f0b-8128-021eb99160fb", "node_type": "4", "metadata": {"page_label": "63", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "89fc8d19c0c91105f61a72a27a1c24f90af229867a33403ad732157acec49f4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70f988c3-fc79-4486-a022-6ca37b29c91a", "node_type": "1", "metadata": {"page_label": "62", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "707a8a830dac74e0ebe3309e4621cc8ddbc4ef4f4522a1bbaea4e3794c133ea2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e17eddfb-7f3e-4b1f-af1a-fa1021db04d3", "node_type": "1", "metadata": {}, "hash": "d0e3f3c7f68ec7455be8a2f3fd7e1abf02f534c5958bc134ec19da72dc4ae6fb", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 5  \n  \n \nDesign Issues in MANET \n \n1) Limited bandwidth : Wireless link continue to have significantly lower capacity than  \ninfrastructure networks. In addition, the realized throughput of wireless communication after \naccounting for the effect of multiple access, fading, noise, and interference conditions, etc., is \noften much less than a radio \u2019s maximum transmission rate.  \n \n2) Dynamic topology : Dynamic topology membership may disturb the trust relationship among  \nnodes. The trust may also be disturbed if some nodes are detected as compromised.  \n \n3) Routing Overhead : In wireless adhoc networks, nodes often change their location within  \nnetwork. So, some stale routes are generated in the routing table which leads to unnecessary \nrouting overhead.  \n4) Hidden terminal problem : The hidden terminal problem refers to the collision of packets at a  \nreceiving node due to the simultaneous transmission of those nodes that are not within the direct \ntransmission range of the sender, but are within the transmission range of the receiver.  \n \n5) Packet losses due to transmission errors : Ad hoc wireless networks experiences a much  \nhigher packet loss due to factors such as increased collisions due to the presence of hidden \nterminals, presence of interference, uni-directional links, frequent path breaks due to mobility of \nnodes.  \n \n6) Mobility-induced route changes : The network topology in an ad hoc wireless network is  \nhighly dynamic due to the movement of nodes; hence an on-going session suffers frequent path \nbreaks. This situation often leads to frequent route changes.  \n \n7) Battery constraints : Devices used in these networks have restrictions on the power source in  \norder to maintain portability, size and weight of the device. 8) Security threats : The wireless \nmobile ad hoc nature of MANETs brings new security challenges to the network design. As the \nwireless medium is vulnerable to eavesdropping and ad hoc network functionality is established \nthrough node cooperation, mobile ad hoc networks are intrinsically exposed to numerous \nsecurity attacks.  \n \nRouting in MANET \n \n \n \nRouting is the process of information exchange from one host to the other host in a network. \u201d[4].  \nRouting is the mechanism of forwarding packet towards its destination using most efficient path.  \nEfficiency of the path is measured in various metrics like, Number of hops, traffic, security, etc.  \nIn Ad-hoc network each host node acts as specialized router itself \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2757, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e17eddfb-7f3e-4b1f-af1a-fa1021db04d3": {"__data__": {"id_": "e17eddfb-7f3e-4b1f-af1a-fa1021db04d3", "embedding": null, "metadata": {"page_label": "64", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f817a39e-d2a8-48a5-99fa-a76404a4bede", "node_type": "4", "metadata": {"page_label": "64", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "62bcb42b2c11adec7c5f216f36e9e717ef28499de8a3b870ca85450361cf007e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2edfdfea-2983-434c-81a0-3d63a865ca17", "node_type": "1", "metadata": {"page_label": "63", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "394de114004497da45edd400847d2eb995951879cbfaf6aba47975d577bb5aed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "497cf475-5ee8-4436-b041-d60ef7d8ae52", "node_type": "1", "metadata": {}, "hash": "e5e336b0811c6c92b4f1051866d00082ec65cf93c87b971c1cea13e41c2bb5b4", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 6  \n Different Strategies \n \nRouting protocol for ad-hoc network can be categorized in three strategies. \n \n  Flat Vs Hierarchical architecture. \n \n  Pro- active Vs Re- active routing protocol. \n \n  Hybrid protocols. \n \n \n \nFlat Vs. Hierarchical architecture \n \nHierarchical network architecture topology consists of multiple layers where top layers are more \nseen as master of their lower layer nodes. There are cluster of nodes and one gateway node \namong all clusters has a duty to communicate with the gateway node in other cluster. In this \nschema there is a clear distribution of task. Burden of storage of network topology is on gateway \nnodes, where communicating different control message is dependent on cluster nodes. \n \nBut this architecture breaks down when there is single node failure (Gateway node). Gateway \nnodes become very critical for successful operation of network. Examples include Zone-based \nHierarchical Link State (ZHLS) routing protocol [6]. Where in flat architecture there is no \nlayering of responsibility. Each and every node does follow the same routing algorithm as any \nother node in the network. \n \nProactive Vs Reactive routing protocol in MANET \n \nProactive routing protocol \n \nIn proactive routing scheme every node continuously maintains complete routing information of \nthe network. This is achieved by flooding network periodically with network status information \nto find out any possible change in network topology. \n \nCurrent routing protocol like Link State Routing (LSR) protocol (open shortest path first) and the \nDistance Vector Routing Protocol (Bellman-Ford algorithm) are not suitable to be used in mobile \nenvironment. \nDestination Sequenced Distance Vector Routing protocol (DSDV) and Wireless routing \nprotocols were proposed to eliminate counting to infinity and looping problems of the distributed \nBellman-Ford Algorithm. \n \nExamples of Proactive Routing Protocols are \n \n\u2022 Global State Routing (GSR). \n \n\u2022 Hierarchical State Routing (HSR). \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2257, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "497cf475-5ee8-4436-b041-d60ef7d8ae52": {"__data__": {"id_": "497cf475-5ee8-4436-b041-d60ef7d8ae52", "embedding": null, "metadata": {"page_label": "65", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7175f4ab-5bd2-49bd-b78c-02a906a4b31b", "node_type": "4", "metadata": {"page_label": "65", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "0d850ea43804f5c576b71c1d922c518fe0d98c6e71ae6b969f238df146687b42", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e17eddfb-7f3e-4b1f-af1a-fa1021db04d3", "node_type": "1", "metadata": {"page_label": "64", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bcd018c4df84f4288e301cee347deac23a7876d627c4f277bfecdb3db233afe4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e208619d-5b31-4c9f-91d5-a8b3a50a7ca1", "node_type": "1", "metadata": {}, "hash": "33af4f236825e16226b1bd61d956ede93f7d0c785d1c2d01c924d97f08f0e749", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 7  \n  \n\u2022 Destination Sequenced Distance Vector Routing (DSDV). \n \nReactive routing protocol \n \nEvery node in this routing protocol maintains information of only active paths to the destination \nnodes. A route search is needed for every new destination therefore the communication overhead \nis reduced at the expense of delay to search the route. Rapidly changing wireless network \ntopology may break active route and cause subsequent route search. \n \nExamples of reactive protocols are: \n \n\u2022 Ad hoc On-demand Distance Vector Routing (AODV). \n \n\u2022 Dynamic Source Routing (DSR). \n \n\u2022 Location Aided Routing (LAR). \n \n\u2022 Temporally Ordered Routing Algorithm (TORA). \n \n \n \nHybrid routing protocols in MANET \n \nThere exist a number of routing protocols of globally reactive and locally proactive states. \nHybrid routing algorithm is ideal for Zone Based Routing Protocol (ZRP) \n \nEssential of Routing Protocols \n \nThe following is a list of quantitative metrics that can be used to assess the performance of any \nrouting protocol. \n \n \n \n  End- to-end data throughput and delay: Statistical measures of data routing performance \n(e.g., means, variances, distributions) are important. These are the measures of a routing \npolicy'seffectiveness --how well it does its job --as measured from the external perspective of \nother policies that make use of routing. \n \n \n \n  Route Acquisition Time: A particular form of *external* end- to-end delay measurement -- \nof particular concern with \"on demand\" routing algorithms --is the time required to establish \nroute(s) when requested. \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 1832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e208619d-5b31-4c9f-91d5-a8b3a50a7ca1": {"__data__": {"id_": "e208619d-5b31-4c9f-91d5-a8b3a50a7ca1", "embedding": null, "metadata": {"page_label": "66", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "df695d3f-0a1b-4551-9acd-bb5da02f8070", "node_type": "4", "metadata": {"page_label": "66", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "f1d34d50409c017a98c5701987b80e00ef2520dc6c614a30ff8329ed34399dc3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "497cf475-5ee8-4436-b041-d60ef7d8ae52", "node_type": "1", "metadata": {"page_label": "65", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "4abb5774fe79fa7351b02c87fdf4dc6a646ecae125360a97c89204773b9a5018", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea4b4808-9b42-4d1f-8253-fc8f030d5340", "node_type": "1", "metadata": {}, "hash": "5a2a33c5fe828d18d4c35a43be78dbc2779b28aaf70de23ce4759922c42f4e67", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 8  \n  \n  Percentage Out-of-Order Delivery: An external measure of connectionless routing \nperformance of particular interest to transport layer protocols such as TCP which prefer in-\norder delivery. \n \n \n \n  Efficiency: If data routing effectiveness is the external measure of a policy's performance, \nefficiency is the *internal* measure of its effectiveness. To achieve a given level of data \nrouting performance, two different policies can expend differing amounts of overhead, \ndepending on their internal efficiency. \n \nProtocol efficiency may or may not directly affect data routing performance. If control and \ndata traffic must share the same channel, and the channel's capacity is limited, then \nexcessivecontrol traffic often impacts data routing performance. \n \nIt is useful to track several ratios that illuminate the *internal* efficiency of a protocol in \ndoing its job (there may be others that the authors have not considered): \n \n\u2022 Average number of data bits transmitted/data bit delivered --this can be thought of as a \nmeasure of the bit efficiency of delivering data within the network. Indirectly, it also give the \naverage hop count taken by data packets. \n\u2022 Average number of control bits transmitted/data bit delivered --this measures the bit \nefficiency of the protocol in expending control overhead to delivery data. Note that this \nshould include not only the bits in the routing control packets, but also the bits in the header \nof the data packets. In other words, anything that is not data is control overhead, and should \nbe counted in the control portion of the algorithm. \n \n \nAn improved mobile routing capability at the IP layer can provide a benefit similar to the \nintention of the original Internet, viz. \"an interoperable internetworking capability over a \nheterogeneous networking infrastructure\". In this case, the infrastructure is wireless, rather \nthan hardwired, consisting of multiple wireless technologies, channel access protocols, etc. \nImproved IP routing and related networking services provide the glue to preserve the integrity of \nthe mobile internetwork segment in this more dynamic environment. \n \nIn other words, a real benefit to using IP-level routing in a MANET is to provide network-level \nconsistency for multihop networks composed of nodes using a *mixture* of physical-layer \nmedia; i.e. a mixture of what are commonly thought of as subnet technologies. A MANET node \nprincipally consists of a router, which may be physically attached to multiple IP hosts (or \nIP-addressable devices), which has  potentially *multiple* wireless interfaces --each interface \nusing a *different* wireless technology. Thus, a MANET node with interfaces using \ntec\nhnologies A and B can communicate with any other MANET node possessing an interface \nwith technology A or B. The multihop  connectivity of technology A forms a physical-layer \nmultihop topology, the multihop connectivity of technology B forms *anothe r* physical-layer \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea4b4808-9b42-4d1f-8253-fc8f030d5340": {"__data__": {"id_": "ea4b4808-9b42-4d1f-8253-fc8f030d5340", "embedding": null, "metadata": {"page_label": "67", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12d1fd01-3f56-4cc5-aac9-f541f7d48507", "node_type": "4", "metadata": {"page_label": "67", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "def1defe79b091079977232256b67c6454e5286c92b0e7872e40462bdaf3af6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e208619d-5b31-4c9f-91d5-a8b3a50a7ca1", "node_type": "1", "metadata": {"page_label": "66", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "fd8c5a94b9a0319e9ee52ebfa22206b5736cf96701375aa8f715ef82b60bdd54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbc38b25-288f-42a9-8dfd-38fda9831886", "node_type": "1", "metadata": {}, "hash": "8140ffad8e4261386278557c15d6b06cf5d95a0139fdfb1d290b27f1ad533e17", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 9  \n topology (which may differ from that of A's topology), and the *union* of these topologies \nfo\nrms another topology (in graph theoretic terms --a multigraph), termed the \"IP routing fabric\", \nof the MANET. MANET nodes making routing decisions using the  IP fabric can \nintercommunicate using either or both physical-layer topologies simultaneously.  As new  \nphysical -layer technologies are developed, new device drivers can be written and another  \nphysical -layer multihop topology can be seamlessly added to the IP fabric. Likewise, older \ntechnologies can easily be dropped. Such is the functionality and architectural flexibility that  \nIP-layer routing can support, which brings with it hardware economies of scale.   \n \n \nDistance Vector Protocols \n \nBy using the distance vector protocols, each router over the internetwork send the neighboring \nrouters, the information about destination that it knows how to reach. Moreover to say the routers \nsends two pieces of information first, the router tells, how far it thinks the destination is and \nsecondly, it tells in what direction (vector) to use to get to the destination. When the router \nreceives the information from the others, it could then develop a table of destination addresses, \ndistances and associated neighboring routers, and from this table then select the shortest route to \nthe destination. Using a distance vector protocol, the router simply forwards the packet to the \nneighboring host (or destination) with the available shortest path in the routing table and \nassumesthat the receiving router will know how to forward the packet beyond that point [9]. The \nbest example for this is the routing information protocol (RIP). \n \nLink-State Protocols \n \nIn link state protocols, a router doesn \u2019t provide the information about the destination instead it \nprovides the information about the topology of the network. This usually consist of the network \nsegments and links that are attached to that particular router along with the state of the link i.e., \nwhether the link is in active state or the inactive state. This information is flooded throughout the \nnetwork and then every router in the network then builds its own picture of the current state of all \nthe links in the network. \n \nDynamic Source Routing \n \nDynamic Source Routing (DSR) is a reactive protocol based on the source route approach [9]. In \nDynamic Source Routing (DSR) , shown in Figure.2, the protocol is based on the link state  \nalgorithm in which source initiates route discovery on demand basis. The sender determines the \nroute from source to destination and it includes the address of intermediate nodes to the route \nrecord in the packet. DSR was designed for multi hop networks for small Diameters. It is a \nbeaconless protocol in which no HELLO messages are exchanged between nodes to notify them \nof their neighbours in the network. \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbc38b25-288f-42a9-8dfd-38fda9831886": {"__data__": {"id_": "bbc38b25-288f-42a9-8dfd-38fda9831886", "embedding": null, "metadata": {"page_label": "68", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2977b52a-948e-4577-95fe-d99dbf606a1c", "node_type": "4", "metadata": {"page_label": "68", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "0a0eaf499dbcda52c61755e76c16b136de00a2a924a281bf466dfa2ba3349dd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea4b4808-9b42-4d1f-8253-fc8f030d5340", "node_type": "1", "metadata": {"page_label": "67", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "0a158b5bc73c4800be1235fca800c13ef9953783295a542ddd8cc390ab9495b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e2ed22d-bda8-4c59-b34a-4fbbe412074b", "node_type": "1", "metadata": {}, "hash": "96bfb4c6681c4a2d643acd2a2c2e1fd89dd78c2c5facecdc623f3f05e211bdcf", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 10  \n  \nIn DSR the route paths are discovered after source sends a packet to a destination node in the ad-\nhoc network. The source node initially does not have a path to the destination when the first \npacket is sent. The DSR has two functions first is route discovery and the second is route \nmaintenance \n \n \n \nDifferent DSR Algorithms \n \n  Route discovery. \n \n  Route maintenance. \n \nAssumptions: \n \n\u2022 X , Y, Z , V and W form ad-hoc network. \n \n\u2022 X is the source node. \n \n\u2022 Z is the destination node. \n \nRoute Discovery is the mechanism by which a node  S wishing to send a packet to a destination  \nnode Dobtains a source route to D. Route Discovery is used only when S attempts to send a \npacket to D and does not already know a route to D. \n \nRoute Maintenance is the mechanism by which node  S is able to detect, while using a source  \nrouteto D, if the network topology has changed such that it can no longer use its route to D \nbecause a link along the route no longer works. When Route Maintenance indicates a source \nroute is broken, S can attempt to use any other route it happens to know to D, or can invoke \nRoute Discovery again to find a new route. Route Maintenance is used only when S is actually \nsending packets to D. \nDestination Sequenced Distance Vector (DSDV) Protocol \n \nThe destination sequenced distance vector routing protocol is a proactive routing protocol which \nis a modification of conventional Bellman-Ford routing algorithm. This protocol adds a new \nattribute, sequence number, to each route table entry at each node. Routing table is maintained at \neach node and with this table, node transmits the packets to other nodes in the network. This \nprotocol was motivated for the use of data exchange along changing and arbitrary paths of \ninterconnection which may not be close to any base station. 6.1 Protocol Overview and activities \nEach node in the network maintains routing table for the transmission of the packets and also for \nthe connectivity to different stations in the network. These stations list for all the available \ndestinations, and the number of hops required to reach each destination in the routing table. \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2419, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e2ed22d-bda8-4c59-b34a-4fbbe412074b": {"__data__": {"id_": "7e2ed22d-bda8-4c59-b34a-4fbbe412074b", "embedding": null, "metadata": {"page_label": "69", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be07c1ee-233a-437d-b3cf-2ca52c5fd3ee", "node_type": "4", "metadata": {"page_label": "69", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "c95c27c3e9148bb8ca36a54ab34d2bcb9afa10f63bc0fa9f4318cb8fffe77da4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbc38b25-288f-42a9-8dfd-38fda9831886", "node_type": "1", "metadata": {"page_label": "68", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "4ae4f2afd25bb5880ae349953a229e5770937dd8411a0e6631fc637f3db8bb06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdd237b0-622d-46b9-97ef-5367b1cf8ce0", "node_type": "1", "metadata": {}, "hash": "2850cb9f9e95ac7acde413f4eaaec6a1ca1f3556249a5248da513dc86f35b517", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 11  \n The routing entry is tagged with a sequence number which is originated by the destination \nstation. In order to maintain the consistency, each station transmits and updates its routing table \nperiodically. The packets being broadcasted between stations indicate which stations are \naccessible and how many hops are required to reach that particular station. The packets may be \ntransmitted containing the layer 2 or layer 3 address. Routing information is advertised by \nbroadcasting or multicasting the packets which are transmitted periodically as when the nodes \nmove within the network. \n \nThe DSDV protocol requires that each mobile station in the network must constantly, advertise \nto each of its neighbors, its own routing table. Since, the entries in the table my change very \nquickly, the advertisement should be made frequently to ensure that every node can locate its \nneighbors in the network. This agreement is placed, to ensure the shortest number of hops for a \nroute to a destination; in this way the node can exchange its data even if there is no direct \ncommunication link. The data broadcast by each node will contain its new sequence number and \nthe following information for each new route: \n \nDestination Sequenced Distance Vector (DSDV) Protocol \u2013 The destination address \u2013 The \nnumber of hops required to reach the destination and \u2013 The new sequence number, originally \nstamped by the destination The transmitted routing tables will also contain the hardware address, \nnetwork address of the mobile host transmitting them. The routing tables will contain the \nsequence number created by the transmitter and hence the most new destination sequence \nnumber is preferred as the basis for making forwarding decisions. \n \nThis new sequence number is also updated to all the hosts in the network which may decide on \nhow to maintain the routing entry for that originating mobile host. After receiving the route \ninformation, receiving node increments the metric and transmits information by broadcasting. \nIncrementing metric is done before transmission because, incoming packet will have to travel \none more hop to reach its destination. Time between broadcasting the routing information \npackets is the other important factor to be considered. When the new information is received by \nthe mobile host it will be retransmitted soon effecting the most rapid possible dissemination \nofrouting information among all the cooperating mobile hosts. The mobile host cause broken \nlinks as they move form place to place within the network. The broken link may be detected by \nthe layer2 protocol, which may be described as infinity. When the route is broken in a network, \nthen immediately that metric is assigned an infinity metric there by determining that there is no \nhop and the sequence number is updated. \n \nSequence numbers originating from the mobile hosts are defined to be even number and the \nsequence numbers generated to indicate infinity metrics are odd numbers. The broadcasting of \nthe information in the DSDV protocol is of two types namely: full dump and incremental dump. \nFull dump broadcasting will carry all the routing information while the incremental dump will \ncarry only information that has changed since last full dump. Irrespective of the two types, \nbroadcasting is done in network protocol data units (NPDU). Full dump requires multiple \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdd237b0-622d-46b9-97ef-5367b1cf8ce0": {"__data__": {"id_": "bdd237b0-622d-46b9-97ef-5367b1cf8ce0", "embedding": null, "metadata": {"page_label": "70", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17ed5e70-8da2-4b37-b9ff-b39c9bfa42a7", "node_type": "4", "metadata": {"page_label": "70", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "60602df9b230f9e0e8921414042284f1b0db97032cb9db6f0294ffb7afbfd639", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e2ed22d-bda8-4c59-b34a-4fbbe412074b", "node_type": "1", "metadata": {"page_label": "69", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "2fb5e311b220c1cef7e8ec29deef92a1111cdde1d0f6d7be5516e820e3de900d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e57bdfa1-c06b-451d-b83f-434bcd4b8daa", "node_type": "1", "metadata": {}, "hash": "1998f7df00c57aa02d3e5e2abd39740729deb891298fd88ff35b2e1e15ec6801", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 12  \n NPDU \u2019s while incremental requires only one NPDU to fit in all the information. Whe n an \ninformation packet is received from another node, it compares the sequence number with the \navailable sequence number for that entry. \n \nIf the sequence number is larger, then it will update the routing information with the new \nsequence number else if the information arrives with the same sequence number it looks for the \nmetric entry and if the number of hops is less than the previous entry the new information is \nupdated (if information is same or metric is more then it will discard the information). While the \nnodes information is being updated the metric is increased by 1 and the sequence number is also \nincreased by 2. Similarly, if a new node enters the network, it will announce itself in the network \nand the nodes in the network update their routing information with a new entry for the new node. \nDuring broadcasting, the mobile hosts will transmit their routing tables periodically but due to \nthe frequent movements by the hosts in the networks, this will lead to continuous burst of new \nroutes transmessions upon every new sequence number from that destination. The solution for \nthis is to delay the advertisement of such routes until it shows up a better metric. \n \nAdvantages of DSDV \n \n\u2013 DSDV protocol guarantees loop free paths \n \n\u2013 Count to infinity problem is reduced in DSDV \n \n\u2013 We can avoid extra traffic with incremental updates instead of full dump updates. \n \n\u2013 Path Selection: DSDV maintains only the best path instead of maintaining multiple paths \nto every destination. With this, the amount of space in routing table is reduced. \n \nLimitations of DSDV \n \n\u2013 Wastage of bandwidth due to unnecessary advertising of routing information even if there is \nno change in the network topology \n\u2013 DSDV doesn \u2019t support Multi path Routing.  \n \n\u2013 It is difficult to determine a time delay for the advertisement of routes \n \n\u2013 It is difficult to maintain the routing table \u2019s advertisement for larger network. Each and \nevery host in the network should maintain a routing table for advertising. But for larger \nnetwork this would lead to overhead, which consumes more bandwidth. \n \n \n \n \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e57bdfa1-c06b-451d-b83f-434bcd4b8daa": {"__data__": {"id_": "e57bdfa1-c06b-451d-b83f-434bcd4b8daa", "embedding": null, "metadata": {"page_label": "71", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "903a00ea-2cc4-4917-aa2d-7937291b0a2d", "node_type": "4", "metadata": {"page_label": "71", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "839c8106096e521677538c65d61e22e3407d85ac5ba3570b803976027d1fbd47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdd237b0-622d-46b9-97ef-5367b1cf8ce0", "node_type": "1", "metadata": {"page_label": "70", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "a8556ecac94d005f6c643076c3e6787c515bb7c2e0444f42699353635c9f0ad3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e6d4621-ff3a-4ddf-91cd-59c7c5855e83", "node_type": "1", "metadata": {}, "hash": "acc910cf5fc2c20d48f9c79f731f494b74b2628d57b0f4aa996cc9f6b118ed56", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 13  \n Ad Hoc On-Demand Distance Vector Routing (AODV) \n \nAODV is basically an improvement of DSDV. But, AODV is a reactive routing protocol instead of \nproactive. Itminimizes the number of broadcasts by creating routes based on demand, which is not the  \ncase for DSDV. When any source node wants to send a packet to a destination, it broadcasts a route \nrequest (RREQ) packet. The neighboring nodes in turn broadcast the packet to their neighbors and the \nprocess continues until the packet reaches the destination. During the process o f forwarding the route  \nrequest, intermediate nodes record the address of the neighbor from which the first copy of the broadcast \npacket is received. This record is stored in their route tables, which helps for establishing a reverse path. \nIf additional copies of the same RREQ are later received, these packets are discarded. The reply is sent \nusing the reverse path. For route maintenance, when a source node moves, it can reinitiate a route \ndiscovery process. If any intermediate node moves within a particular route, the neighbor of the drifted \nnode can detect the link failure and sends a link failure notification to its upstream neighbor. This process \ncontinues until the failure notification reaches the source node. Based on the received information, the \nsource might decide to re-initiate the route discovery phase. \n \nThe concepts of AODV that make it desirable for MANETs with limited bandwidth include the \nfollowing: \u2013 Minimal space complexity: The algorithm makes sure that the nodes that are not in the active \npath do not maintain information about this route. After a node receives the RREQ and sets a reverse path \nin its routing table and propagates the RREQ to its neighbors, if it does not receive any RREP from its \nneighbors for this request, it deletes the routing info that it has recorded. \n \n\u2013 Maximum utilization of the bandwidth: This can be considered the major achievement of the algorithm. \nAs the protocol does not require periodic global advertisements, the demand on the available bandwidth is \nless. And a monotonically increased sequence number counter is maintained by each node in order to \nsupersede any stale cached routes. All the intermediate nodes in an active path updating their routing \ntables also make sure of maximum utilization of the bandwidth. Since, these routing tables will be used \nrepeatedly if that intermediate node receives any RREQ from another source for same destination. Also, \nany RREPs that are received by the nodes are compared with the RREP that was propagated last using the \ndestination sequence numbers and are discarded if they are not better than the already propagated RREPs. \n\u2013 Simple: \n \nIt is simple with each node behaving as a router, maintaining a simple routing table, and the source node \ninitiating path discovery request, making the network self-starting. \n \n\u2013 Most effective routing info: After propagating an RREP, if a node finds receives an RREP with smaller \nhop-count, it updates its routing info with this better path and propagates it. \n \n\u2013 Most current routing info: The route info is obtained on demand. Also, after propagating an RREP, if a \nnode finds receives an RREP with greater destination sequence number, it updates its routing info with \nthis latest path and propagates it. \n \n\u2013 Loop-free routes: The algorithm maintains loop free routes by using the simple logic of nodes \ndiscarding non better packets for same broadcast-id. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e6d4621-ff3a-4ddf-91cd-59c7c5855e83": {"__data__": {"id_": "4e6d4621-ff3a-4ddf-91cd-59c7c5855e83", "embedding": null, "metadata": {"page_label": "72", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f09bf8da-568b-4206-8d49-65332490f743", "node_type": "4", "metadata": {"page_label": "72", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "db043f89e59d8e02721163c97fb6706257fe471887cfc68df9c20e7f776b112e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e57bdfa1-c06b-451d-b83f-434bcd4b8daa", "node_type": "1", "metadata": {"page_label": "71", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "096e0ddf68828316372fb64b99cfa66b0cc4bf704b15edd3d913fda633369c69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7eec4a61-4ee1-4b0d-bae5-d2bb99cc3139", "node_type": "1", "metadata": {}, "hash": "5e976052d397cc9bf71ed3a174e9dcc7701758b156bb72898802cf7796e3b8a3", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 14  \n \u2013 Coping up with dynamic topology and broken links: When the nodes in the network move from their \nplaces and the topology is changed or the links in the active path are broken, the intermediate node that \ndiscovers this link breakage propagates an RERR packet. And the source node re-initializes the path \ndiscovery if it still desires the route. This ensures quick response to broken links. \n \n\u2013 Highly Scalable: The algorithm is highly scalable because of the minimum space complexity and \nbroadcasts avoided when it compared with DSDV. \n \nThe concepts of AODV that make it desirable for MANETs with limited bandwidth include the \nfollowing: \u2013 Minimal space complexity: The algorithm makes sure that the nodes that are not in the active \npath do not maintain information about this route. After a node receives the RREQ and sets a reverse path \nin its routing table and propagates the RREQ to its neighbors, if it does not receive any RREP from its \nneighbors for this request, it deletes the routing info that it has recorded. \n \nAdvanced uses of AODV \n \n\u2013 Because of its reactive nature, AODV can handle highly dynamic behavior of Vehicle Ad-hoc networks  \n\u2013 Used for both unicasts and multicasts using the \u2019J\u2019 (Join multicast group) flag in the packets  \n \nLimitations/Disadvantages of AODV \n \n\u2013 Requirement on broadcast medium: The algorithm expects/requires that the nodes in the broadcast \nmedium can detect each others\u2019 broadcasts.  \n \n\u2013 Because of its reactive nature, AODV can handle highly dynamic behavior of Vehicle Ad-hoc networks  \n\u2013 Used for both unicasts and multicasts using the \u2019J\u2019 (Join multicast group) flag in the packe  \n \nThe algorithm expects/requires that the nodes in the broadcast medium can detect each others \u2019 broadcasts.  \n \n \n \nMulticast Routing Protocol \n \nTREE-BASED MULTICASTING \n \nA tree-based multicast routing protocol establishes and maintains a shared multicast routing tree to \ndeliver data from a source to receivers of a multicast group. A well-known example of treebased \nmulticast routing protocols are the Multicast Ad hoc Ondemand Distance Vector routing protocol \n(MAODV). \n \nMulticast Ad-hoc On-Demand Distance Vector Routing Protocol (MAODV). \n \nMAODV is a multicast extension for AODV protocol. MAODV based on shared trees on-demand to \nconnect multicast group members. MAODV has capability of unicast, broadcast, and multicast. MAODV \nprotocol can be route information obtained when searching for multicast; it can also increase unicast \nrouting knowledge and vice-versa. When a node wishes to join a multicast group or it has data to send to \nthe group but does not has a route to that group, it originates a route request (RREQ) message. Only the \nmembers of the multicast group respond to the join RREQ. If an intermediate node receives a join RREQ \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7eec4a61-4ee1-4b0d-bae5-d2bb99cc3139": {"__data__": {"id_": "7eec4a61-4ee1-4b0d-bae5-d2bb99cc3139", "embedding": null, "metadata": {"page_label": "73", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4593348-961f-4dff-8d9b-9d95a54ad6b0", "node_type": "4", "metadata": {"page_label": "73", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "61d2cadf868847fa648be7c4b41b4aac80948ac739c02ca560cfb4f626b90d05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e6d4621-ff3a-4ddf-91cd-59c7c5855e83", "node_type": "1", "metadata": {"page_label": "72", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "842eef5d8ac6c3d121384fb84e2cc4ea1fe5cf407dd71a3beab9700e45a970b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3061e559-92c9-46c8-9918-4cedbfe9119c", "node_type": "1", "metadata": {}, "hash": "db20253541c73277bd9db1e5dd450a90c250a44f07e114a0d644f73ca3ae961d", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 15  \n for a multicast group of which it is not a member or it receives a route RREQ and it does not have a route \nto that group, it rebroadcast the RREQ to its neighbors. But if the RREQ is not a join request any node of \nthe multicast group may respond. \n \n \n \nMESH-BASED MUTICASTING \n \nA mesh-based multicast routing protocol sustains a mesh consisting of a connected component of \nthe network containing all the receivers of a group. Example of mesh-based multicast routing \napproaches is On-Demand Multicast Routing Protocol (ODMRP). \n \nOn-\nDemand Multicast Routing Protocol (ODMRP) \n \nODMRP is an on-demand mesh based, besides it is a multicast routing protocol, ODMRP \nprotocol can make use of unicast technique to send multicast data packet form the sender nodes \ntoward the receivers in the multicasting group. To carry multicast data via scoped flooding it \nuses forwarding group concept. The source, in ODMRP, establishes and maintains group \nmembership. If source wishes to send packet to a multicast group but has no route to that group, \nit simply broadcasts JOIN_DATA control packet to the entire network. When an intermediate \nnode receives the JOIN_DATA packet it stores source address and sequence number in its cache \nto detect duplicate. It performs necessary routing table updates for reverse path back to the \nsource. \n \nZone Routing Protocol (ZRP) \n \nZRP is suitable for wide variety of MANETs, especially for the networks with large span and \ndiverse mobility patterns. In this protocol, each node proactively maintains routes within a local \nregion, which is termed as routing zone. Route creation is done using a query-reply mechanism. \nFor creating different zones in the network, a node first has to know who its neighbors are. A \nneighbor is defined as a node with whom direct communication can be established, and that is, \nwithin one hop transmission range of a node. Neighbor discovery information is used as a basis \nfor Intra-zone Routing Protocol (IARP), which is described in detail in. Rather than blind \nbroadcasting, ZRP uses a query control mechanism to reduce route query traffic by directing \nquery messages outward from the query source and away from covered routing zones. A covered \nnode is a node which belongs to the routing zone of a node that has received a route query. \nDuring the forwarding of the query packet, a node identifies whether it is coming from its \nneighbor or not. If yes, then it marks all of its known neighboring nodes in its same zone as \ncovered. The query is thus relayed till it reaches the destination. The destination in turn sends \nback a reply message via the reverse path and creates the route. \n \n \n \n  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2936, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3061e559-92c9-46c8-9918-4cedbfe9119c": {"__data__": {"id_": "3061e559-92c9-46c8-9918-4cedbfe9119c", "embedding": null, "metadata": {"page_label": "74", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ad86828-6c41-49f3-aeaf-8aaa580586f4", "node_type": "4", "metadata": {"page_label": "74", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b2f1ae425f3899d67fffc9d6ce20300068d1b1b42da106512a8c9374f7a2527e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7eec4a61-4ee1-4b0d-bae5-d2bb99cc3139", "node_type": "1", "metadata": {"page_label": "73", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "e9216a540423bcba8daaa581f334f1012739bcf0949c4d554598db3f831fd713", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "593581d7-b533-4d53-9967-875e03be80ec", "node_type": "1", "metadata": {}, "hash": "4fa3f2edcddc11209162e74d6a349d37af3c59301d86c04bafa015ed87001d8c", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 16  \n Vehicular Ad Hoc Networks \n \n \n \nVehicular Ad Hoc Networks (VANETs) are created by applying the principles of mobile ad hoc \nnetworks (MANETs) - the spontaneous creation of a wireless network for data exchange - to the \ndomain of vehicles. They are a key component of intelligent transportation systems (ITS).  \nWhile, in the early 2000s, VANETs were seen as a mere one- to-one application of MANET \nprinciples, they have since then developed into a field of research in their own right. By 2015, \nthe term VANET became mostly synonymous with the more generic term inter-vehicle \ncommunication (IVC), although the focus remains on the aspect of spontaneous networking, \nmuch less on the use of infrastructure like Road Side Units (RSUs) or cellular networks. \n \n \nVehicular Ad Hoc Networks (VANETs) have grown out of the need to support the growing \nnumber of wireless products that can now be used in vehicles. These products include remote \nkeyless entry devices, personal digital assistants (PDAs), laptops and mobile telephones. As \nmobile wireless devices and networks become increasingly important, the demand for Vehicle-\nto-Vehicle (V2V) and Vehicle- S. Zeadally et al. to-Roadside (VRC) or Vehicle- to-Infrastructure \n(V2I) Communication will continue to grow. VANETs can be utilized for a broad range of safety \nand non-safety applications, allow for value added services such as vehicle safety, automated toll \npayment, traffic management, enhanced navigation, location-based services such as finding the \nclosest fuel station, restaurant or travel lodge and infotainment applications such as providing \naccess to the Internet. \n \n \nIntelligent transportation systems (ITSs) In intelligent transportation systems, each vehicle  \ntakes on the role of sender, receiver, and router to broadcast information to the vehicular network \nor transportation agency, which then uses the information to ensure safe, free-flow of traffic. For \ncommunication to occur between vehicles and RoadSide Units (RSUs), vehicles must be \nequipped with some sort of radio interface or OnBoard Unit (OBU) that enables short-range \nwireless ad hoc networks to be formed. Vehicles must also be fitted with hardware that permits \ndetailed position information such as Global Positioning System (GPS) or a Differential Global \nPositioning System (DGPS) receiver. Fixed RSUs, which are connected to the backbone \nnetwork, must be in place to facilitate communication. \n \n \nInter-vehicle communication The inter-vehicle communication configuration uses multi-hop \nmul\nticast/broadcast to transmit traffic related information over multiple hops to a group of \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2901, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "593581d7-b533-4d53-9967-875e03be80ec": {"__data__": {"id_": "593581d7-b533-4d53-9967-875e03be80ec", "embedding": null, "metadata": {"page_label": "75", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "568093a7-43f9-4f82-8944-e9ae6bfc452b", "node_type": "4", "metadata": {"page_label": "75", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "44a0d12a2ef00ab014afbf9d1db8409857b63c4a6d966e655606daf09675b394", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3061e559-92c9-46c8-9918-4cedbfe9119c", "node_type": "1", "metadata": {"page_label": "74", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "abe0cd12b0ee280370f69833522fc2bcb970e7bb7dce0f6353a01c499d577349", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11901222-84be-4237-907d-3abbef4b3c5b", "node_type": "1", "metadata": {}, "hash": "5b7e1fb9e83f764d542e4d7038a26374cacb9b779074726136fe7684d9770eba", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 17  \n  \nreceivers. In intelligent transportation systems, vehicles need only be concerned with activity on the \nroad ahead and not behind (an example of this would be for emergency message dissemination about \nan imminent collision or dynamic route scheduling). There are two types of message forwarding in \ninter-vehicle communications: na\u00efve broadcasting and intelligent broadcasting. In na\u00efve \nbroadcasting, vehicles send broadcast messages periodically and at regular intervals. Upon receipt of \nthe message, the vehicle ignores the message if it has come from a vehicle behind it. If the message \ncomes from a vehicle in front, the receiving vehicle sends its own broadcast message to vehicles \nbehind it. \n \n \nVehicle- to-roadside communication The vehicle- to-roadside communication configuration  (Fig. 2) \nrepresents a single hop broadcast where the roadside unit sends a broadcast message to all equipped \nvehicles in the vicinity. Vehicle- to-roadside communication configuration provides a high \nbandwidth link between vehicles and roadside units. The roadside units may be placed every \nkilometer or less, enabling high data rates to be maintained in heavy traf- fic. For instance, when \nbroadcasting dynamic speed limits, the roadside unit will determine the appropriate speed limit \naccording to its internal timetable and traffic conditions. The roadside unit will periodically \nbroadcast a message containing the speed limit and will compare any geographic or directional limits \nwith vehicle data to determine if a speed limit warning applies to any of the vehicles in the vicinity. \n \n \nRouting-based communication The routing-based communication configuration is a multi-hop \nunica\nst where a message is propagated in a multi Routing-based communication hop fashion until \nthe vehicle carrying the desired data is reached. When the query is received by a vehicle owning the \ndesired piece of information, the application at that vehicle immediately sends a unicast message \ncontaining the information to the vehicle it received the request from, which is then charged with the \ntask of forwarding it towards the query source. \n \nMANET vs VANET \n \nMobile Ad Hoc Network and Vehicular AdHoc Networks are emerging area for research and \nevelopment. VANETs are subclass of MANETs. But unlike MANETs it does not have battery \nconstraints and have high mobility. Unicast and Multicast protocols in MANETs and VANETs \nuse broadcasting to provide important control and route establishment. Possible applications of \nVANETs relying on broadcast for sharing safety, weather, and road information among vehicles. \n \n \n \nMobile nodes temporary form a network for information sharing and require no need of routers \nand base stations is called Mobile Ad Hoc Network (MANET). They communicate with each \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3065, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11901222-84be-4237-907d-3abbef4b3c5b": {"__data__": {"id_": "11901222-84be-4237-907d-3abbef4b3c5b", "embedding": null, "metadata": {"page_label": "76", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "093809fc-7073-4ee6-b44e-4466c071226a", "node_type": "4", "metadata": {"page_label": "76", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b3476662cdb4c820af03c26ebc4b704e175bcadb64bca21bcfa87262a5ddfaa8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "593581d7-b533-4d53-9967-875e03be80ec", "node_type": "1", "metadata": {"page_label": "75", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3b262761cb908b6a9b30fc2d1c09e1bebf2bc0fde258724ebf9573ae400943c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4bc69be-f26b-4b83-867d-3cfc7d763ca9", "node_type": "1", "metadata": {}, "hash": "f18ac664fafaab83fd23e5aaf887a48250516d5e2ffcf99a8c49fe009c61c623", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 18  \n other over multihop wireless links. MANETs have different features like dynamic topologies, \nlimited security, bandwidth and energy constrains. \n \nVehicular Ad-Hoc Networks (VANETs) are special case of MANETs. Self Organized and \ndistributed network, where fast moving vehicles have fixed movement along some path. VANETs \nhave salient features (high speed, no battery constraints, limited movement, reliability and security \nproblems) that discriminate it from other adhoc network. In wireless network, broadcasting is \nfrequently used operation as compared to wired network. They are a lot issues and problems in \nwireless adhoc network because of node mobility and scattered resources. VANETs are promising \nnetwork for intelligent systems having short communication range between the vehicles. Mostly \nin Vehicular adhoc network (VANETs), vehicles are interested in the same kind of information \nfor example information about any accident, road block, parking, and fuel station or weather \nsituation of particular route. So the broadcast is frequently used in vehicular adhoc network for \ninformation sharing. \n \n \n \nUses of MANET USES of VANET \n\u2022 For mi litary and rescue use.  Comfort Applications: It improves the traffic  \n\u2022 Information distribution (meetings, seminars  efficiency  and  passenger  comfort.  Traffic \netc.) information system, gas station and weather \n\u2022  Internet  /  intranet  hot  spots  (pu blic information   are   example   of   comfort \ntransportation) application. \n\u2022 Localized advertising and shopping  Safety Applications: Sharing emergency and \n\u2022 New mobile devices are invented constantly  safety data among vehicles improves the safety \nand used various ways. of   passengers.   Safety   application   are \n Emergency warning system, road condition \n and traffic sign violation waning. \n \n \nBROADCAST APPROACHES IN MANETS \n \nDifferent unicast and multicast protocols like Dynamic Source Routing [9], Zone Routing Protocol , \nAd Hoc On Demand Distance Vector , and Location Aided Routing use broadcasting to establish \nand maintain the route in MANETs. Brad Williams in presents the comparative study of broadcast \napproaches in MANETS using NS2 simulator. Impact of simple flooding, probability method, Area \nmethod and Neighbor knowledge method are analyzed with different network parameter like \nincreasing network load, node mobility and traffic rate. \n \n \n \nBROADCAST APPROACHES IN VANETS \n \nIn VANETs, broadcast is a most commonly used technique. Sharing safety, weather, and road \ninformation among vehicles depends on broadcast. Broadcast plays important role in VANETS, as it \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2883, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4bc69be-f26b-4b83-867d-3cfc7d763ca9": {"__data__": {"id_": "f4bc69be-f26b-4b83-867d-3cfc7d763ca9", "embedding": null, "metadata": {"page_label": "77", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5af767e-50de-4153-9a95-652dd66f50f2", "node_type": "4", "metadata": {"page_label": "77", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "562f757f74c24c583aaf11a5ee945f58a9a16110059293cb436eff4fedf56d97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11901222-84be-4237-907d-3abbef4b3c5b", "node_type": "1", "metadata": {"page_label": "76", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "393d417cf03b94f9e2872cc919cd9cd7f57737c27d2497a279541b5c3d2ca19d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e96a1d6-584a-410a-8e72-fbee41f0fbd1", "node_type": "1", "metadata": {}, "hash": "9e09378a22fee4eaae05e230eb9812b7f33508133d991eca9cade3bdd24a04de", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 19  \n is used to establish and maintain the route for unicast and multicast protocols. Different broadcast \nschemes are designed for VANETs scenarios. Urban MultiHop Broadcast is based upon IEEE \n802.11 protocol. It solves the Broadcast storm, Hidden node problem without sharing information \namong the neighbor nodes. Mobility Centric Data Dissemination Algorithm for Vehicular Networks \nis a mobility centric scheme that merge three techniques, Geographical, Opportunistic and Trajectory \nbased forwarding. Multi-Hop Vehicular Broadcast disseminates the information to other vehicles & \nstore it in the local database for safety use. It has two main features. i:e Congestion Detection and \nBackfire algorithm. \n \nSecurity in MANETS \n \nMobile ad hoc networks have far more vulnerabilities than the traditional wired networks, \nsecurity is much more difficult to maintain in the mobile ad hoc network than in the wired \nnetwork. In this section, we discuss the various vulnerabilities that exist in the mobile ad hoc \nnetworks. \n \nLack of Secure Boundaries : \n \nThe meaning of this vulnerability is self-evident: there is not such a clear secure boundary in the \nmobile ad hoc network, which can be compared with the clear line of defense in the traditional wired \nnetwork. This vulnerability originates from the nature of the mobile ad hoc network: freedom to join, \nleave and move inside the network. \n \nLack of Centralized Management Facility \n \nAd hoc networks do not have a centralized piece of management machinery such as a name server, \nwhich lead to some vulnerable problems. Now let us discuss this problem in a more detailed manner. \n \nRestricted Power Supply \n \nAs we all know, due to the mobility of nodes in the ad hoc network, it is common that the 5 nodes in \nthe ad hoc network will reply on battery as their power supply method. While nodes in the wired \nnetwork do not need to consider the power supply problem because they can get electric power \nsupply from the outlets, which generally mean that their power supply should be approximately \ninfinite; the nodes in the mobile ad hoc network need to consider the restricted battery power, which \nwill cause several problems. \n \nScalability \n \nFinally, we need to address the scalability problem when we discuss the vulnerabilities in the mobile \nad hoc network. Unlike the traditional wired network in that its scale is generally predefined when it \nis designed and will not change much during the use, the scale of the ad hoc network keeps changing \nall the time: because of the mobility of the nodes in the mobile ad hoc network, you can hardly \npredict how many nodes there will be in the network in the future. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2940, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e96a1d6-584a-410a-8e72-fbee41f0fbd1": {"__data__": {"id_": "0e96a1d6-584a-410a-8e72-fbee41f0fbd1", "embedding": null, "metadata": {"page_label": "78", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06221063-2142-4fcb-96f0-6f94280aed9b", "node_type": "4", "metadata": {"page_label": "78", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "e0e56be003d9acf9a046d240618153009625579fe0491bb0937f73ca91607b61", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4bc69be-f26b-4b83-867d-3cfc7d763ca9", "node_type": "1", "metadata": {"page_label": "77", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "28822f4d45f90436048d14549a69b7c6e191fed113c8ea711c464d1fbf9e6b42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ed04b11-73e5-44c4-9414-5527e6cd7ce4", "node_type": "1", "metadata": {}, "hash": "84b86b16fddad2b5c85965d8c6c68f0fd3edc24d949f71eede62dead43572b07", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 20  \n  \nSecurity Criteria \n \nAvailability The term Availability means that a node should maintain its ability to provide all  the \ndesigned services regardless of the security state of it. This security criterion is challenged mainly \nduring the denial-of-service attacks, in which all the nodes in the network can be the attack target \nand thus some selfish nodes make some of the network services unavailable, such as the routing \nprotocol or the key management service. \n \nIntegrity : Integrity guarantees the identity of the messages when they are transmitted. Integrity  can \nbe compromised mainly in two ways \n \nMalicious altering \nAccidental altering \n \nA message can be removed, replayed or revised by an adversary with malicious goal, which is \nregarded as malicious altering; on the contrary, if the message is lost or its content is changed due to \nsome benign failures, which may be transmission errors in communication or hardware errors such \nas hard disk failure, then it is categorized as accidental altering. \n \nConfidentiality: Confidentiality means that certain information is only accessible to those who  have \nbeen authorized to access it. In other words, in order to maintain the confidentiality of some \nconfidential information, we need to keep them secret from all entities that do not have the privilege \nto access them. \n \nAuthenticity: Authenticity is essentially assurance that participants in communication are  genuine \nand not impersonators. It is necessary for the communication participants to prove their identities as \nwhat they have claimed using some techniques so as to ensure the authenticity. If there is not such an \nauthentication mechanism, the adversary could impersonate a benign node and thus get access to \nconfidential resources, or even propagate some fake messages to disturb the normal network \noperations. \n \nNonrepudiation : Nonrepudiation ensures that the sender and the receiver of a message cannot  \ndisavow that they have ever sent or received such a message. This is useful especially when we need \nto discriminate if a node with some abnormal behavior is compromised or not: if a node recognizes \nthat the message it has received is erroneous, it can then use the incorrect message as an evidence to \nnotify other nodes that the node sending out the improper message should have been compromised. \n \nAuthorization : Authorization is a process in which an entity is issued a credential, which  specifies \nthe privileges and permissions it has and cannot be falsified, by the certificate authority. \nAuthorization is generally used to assign different access rights to different level of users. For \ninstance, we need to ensure that network management function is only accessible by the network \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ed04b11-73e5-44c4-9414-5527e6cd7ce4": {"__data__": {"id_": "8ed04b11-73e5-44c4-9414-5527e6cd7ce4", "embedding": null, "metadata": {"page_label": "79", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "027ccd47-f71e-4f57-82f5-e500ee8cd3dc", "node_type": "4", "metadata": {"page_label": "79", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b0152d393c7180dc25bbbc54fa316c0553c04c670930cc3847282e45a489401a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e96a1d6-584a-410a-8e72-fbee41f0fbd1", "node_type": "1", "metadata": {"page_label": "78", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "985f6fd049e134e367ae4c5516a14f5f7e2b84f869688e6c864202a29edff531", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c560f025-4430-4766-bdc4-7c08c79005e8", "node_type": "1", "metadata": {}, "hash": "b047026c7c8d4c03fc532083e51f2e8e152eb5236ba7619b73a0e4a6d59b9ff4", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nIT6601 Mobile Computing                                                        Unit IV  Page 21  \n administrator. Therefore there should be an authorization process before the network administrator \naccesses the network management functions. \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c560f025-4430-4766-bdc4-7c08c79005e8": {"__data__": {"id_": "c560f025-4430-4766-bdc4-7c08c79005e8", "embedding": null, "metadata": {"page_label": "80", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8679f7a8-af2a-4b9a-ad64-ed3678d32690", "node_type": "4", "metadata": {"page_label": "80", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "cfdf249337210849358354bb0f4bdd9f8628c0c08f0c99ca4b4fc29643847425", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ed04b11-73e5-44c4-9414-5527e6cd7ce4", "node_type": "1", "metadata": {"page_label": "79", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "de357765ab19a124d52e67d79d4c990167fddebfb430a7aa5df19e61125d60a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18ab5689-ae90-46f3-b1dd-6e9b55fc337c", "node_type": "1", "metadata": {}, "hash": "1ee2803aa571fcf422b98f7ea6cd1ae4ca01d8a02ffafb6206ab1113290c1336", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n  \nMobile OS \n \nA mobile operating system (or mobile OS) is an operating  system for smartphones, tablets, \nPDAs, or other mobile devices. While computers such as the typical laptop are mobile, the \noperating systems usually used on them are not considered mobile ones as they were originally \ndesigned for bigger stationary desktop computers that historically did not have or need specific \n\"mobile\" features. This distinction is getting blurred in some newer operating systems that are \nhybrids made for both uses. \n \nMobile operating systems combine features of a personal computer operating system with other \nfeatures useful for mobile or handheld use; usually including, and most of the following \nconsidered essential in modern mobile systems; a touchscreen, cellular, Bluetooth, Wi-Fi, GPS \nmobile navigation, camera, video camera, speech recognition, voice recorder, music player, near \nfield communication and infrared blaster.  \n \nMobile devices with mobile communications capabilities (e.g. smartphones) contain two mobile \noperating systems \u2013 the main user-facing software platform is supplemented by a second low-\nlevel proprietary real-time operating system which operates the radio and other hardware. \nResearch has shown that these low-level systems may contain a range of security vulnerabilities \npermitting malicious base stations to gain high levels of control over the mobile device. \n \nA mobile OS is a software platform on top of which other programs called application programs, \ncan run on mobile devices such as PDA, cellular phones, smartphone and etc. A Mobile \noperating system is a System Software that is specifically designed to run on handheld devices \nsuch as Mobile Phones, PDA \u2019s. It is a Platform on top of w hich the application programs run on \nmobile devices. Each Operating System follows its own Architecture. Mobile devices evolved \nthe way users across the globe leverage services on the go from voice calls to smart devices \nwhich enables users to access value added services anytime and anywhere. At present, the \nmobile devices are able to provide various services to users but still suffers from issues include \nPerformance, security and Privacy, Reliability and Band width costs. In this paper, we pointed \nout the issues, challenges, Advantages and Disadvantages of various Mobile Operating systems \nin terms of their Architectures. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 2537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18ab5689-ae90-46f3-b1dd-6e9b55fc337c": {"__data__": {"id_": "18ab5689-ae90-46f3-b1dd-6e9b55fc337c", "embedding": null, "metadata": {"page_label": "81", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1990a80b-e97b-438f-ad6f-9557b6237141", "node_type": "4", "metadata": {"page_label": "81", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "093bbc7fc8fad817c94882b744576965de3b2275f7ea9d9a4d573029340db273", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c560f025-4430-4766-bdc4-7c08c79005e8", "node_type": "1", "metadata": {"page_label": "80", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "cfdf249337210849358354bb0f4bdd9f8628c0c08f0c99ca4b4fc29643847425", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49104698-bbf4-4762-94b6-66ca212a65f8", "node_type": "1", "metadata": {}, "hash": "c3b5d9817e1cc5a842db2a18fa3a7edde16018631f4c1b1f839b3df3b44c41ee", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \nIT6601 Mobile Computing                                                        Unit V  Page 2  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nApplications \n \nThe diagram shows four basic apps (App 1, App 2, App 3 and App 4), just to give the idea that \nthere can be multiple apps sitting on top of Android. These apps are like any user interface you \nuse on Android; for example, when you use a music player, the GUI on which there are buttons \nto play, pause, seek, etc is an application. Similarly, is an app for making calls, a camera app, \nand so on. All these apps are not necessarily from Google. Anyone can develop an app and \nmake it available to everyone through Google Play Store. These apps are developed in Java, and \nare installed directly, without the need to integrate with Android OS. \n \nApplication Framework \n \nScratching further below the applications, we reach the application framework, which \napplication developers can leverage in developing Android applications. The framework offers \na huge set of APIs used by developers for various standard purposes, so that they don't have to \ncode every basic task.The framework consists of certain entities; major ones are: \n \n\uf020 Activity Manager \uf020\n \nThis manages the activities that govern the application life cycle and has several states. An \napplication may have multiple activities, which have their own life cycles. However, there is \none main activity that starts when the application is launched. Generally, each activity in an \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1662, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49104698-bbf4-4762-94b6-66ca212a65f8": {"__data__": {"id_": "49104698-bbf4-4762-94b6-66ca212a65f8", "embedding": null, "metadata": {"page_label": "82", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a2b331d-ec43-4bb9-85b2-d376d5fdecb1", "node_type": "4", "metadata": {"page_label": "82", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "6633ade19db2a924076baf8b150d9339b627ece224dcb29dcc516a01834e2534", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18ab5689-ae90-46f3-b1dd-6e9b55fc337c", "node_type": "1", "metadata": {"page_label": "81", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "093bbc7fc8fad817c94882b744576965de3b2275f7ea9d9a4d573029340db273", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "104aece4-db9b-440b-965e-667c195897f7", "node_type": "1", "metadata": {}, "hash": "8e3f91ecdf75a1bf7027b4a7f90ddfc82ba8f9a00770f9ed0285d29ff6bba381", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \napplication is given a window that has its own layout and user interface. An activity is stopped \nwhen another starts, and gets back to the window that initiated it through an activity callback. \n \n\uf095 Notification Manager \uf020\n \nThis manager enables the applications to create customized alerts \n \n\uf095 Views\uf020\n \nViews are used to create layouts, including components such as grids, lists, buttons, etc. \n \n\uf095 Resource Managers \uf020\n \nApplications do require external resources, such as graphics, external strings, etc. All these \nresources are managed by the resource manager, which makes them available in a \nstandardized way. \n \n\uf095 Content Provider \uf020\n \nApplications also share data. From time to time, one application may need some data from another \napplication. For example, an international calling application will need to access the user's address \nbook. This access to another application's data is enabled by the content providers. \n \nLibraries \n \nThis layer holds the Android native libraries. These libraries are written in C/C++ and \noffer capabilities similar to the above layer, while sitting on top of the kernel. A few of the \nmajor native libraries include \n \n\uf095 Surface Manager: Manages the display and compositing window-ing manager. - Media \uf020\uf020\nfra\nmework: Supports various audio and video formats and codecs including \ntheir playback and recording. \uf020\n\uf095 System C Libraries: Standard C library like libc targeted for ARM or embedded devices. \uf020\uf020\n\uf095 OpenGL ES Libraries : These are the graphics libraries for rendering 2D and \n3D graphics. \uf020\uf020\n\uf095 SQLite : A database engine for Android. \uf020\nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1743, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "104aece4-db9b-440b-965e-667c195897f7": {"__data__": {"id_": "104aece4-db9b-440b-965e-667c195897f7", "embedding": null, "metadata": {"page_label": "83", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7e8c925a-5e1b-4d26-8350-a7c7559a1c1b", "node_type": "4", "metadata": {"page_label": "83", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "c86f98d8add67a33ae959fc15b372bbab1b7b9be39c1c38a7d81c66c37e0096b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49104698-bbf4-4762-94b6-66ca212a65f8", "node_type": "1", "metadata": {"page_label": "82", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "6633ade19db2a924076baf8b150d9339b627ece224dcb29dcc516a01834e2534", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "997f1f77-584a-48b6-a6be-7ee85998afcf", "node_type": "1", "metadata": {}, "hash": "b02513563f76cd637ed8ff0f6b7b308ef10706ecff7c139241b3ce56c6da15a0", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                             Course Material (Lecture Notes) \n \nKernel \n \nThe Android OS is derived from Linux Kernel 2.6 and is actually created from Linux source, \ncompiled for mobile devices. The memory management, process management etc. are \nmostly similar. The kernel acts as a Hardware Abstraction Layer between hardware and the \nAndroid software stack. \n \n  Mobile OS Special Constraints: \nSmaller  Stay  focused  on  the  user's  immediate  task.  Display  only  the \nscreen size information that users need at any given moment. For example, a \n  customer relationship management system can provide a massive \n  amount of information, but users only require a small amount of \n  that information at one time. Design the UI so that users can \n  perform tasks easily and access information quickly. \nOne scre\nen Use  a  single  screen  if  possible.  If  your  application  requires \nappears at  a multiple screens to be open at the same time, use a split screen or \ntime  rethink the flow of your application. \nShorter  Try to handle data transmission efficiently.  The  less often the \nbattery life device needs to transmit data, the longer the battery lasts. \nWireless\n Try to simplify how your application creates network connections. \nnet\nwork  Compared with standard LANs, longer latency periods that are \nconnections inherent in some wireless network connections can influence how \n  quickly\n users receive information that is sent over the network. \nSlower  Avoid processor-intensive tasks where possible. Slower processor \nprocessor speeds can affect how users perceive the responsiveness of an \nspeeds  application. \nLess  availab le Free up as  much memory as possible.  For  example,  while an \nmem\nory  application is not being used, try to keep it from using memory. \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 0, "end_char_idx": 1879, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "997f1f77-584a-48b6-a6be-7ee85998afcf": {"__data__": {"id_": "997f1f77-584a-48b6-a6be-7ee85998afcf", "embedding": null, "metadata": {"page_label": "84", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26ceacec-9391-47e1-8904-f2dd00fdf32f", "node_type": "4", "metadata": {"page_label": "84", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "854c47e66d23d9ebee9daef8523b5c8424259b3f33fa842a485ae3b0003b9df7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "104aece4-db9b-440b-965e-667c195897f7", "node_type": "1", "metadata": {"page_label": "83", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "c86f98d8add67a33ae959fc15b372bbab1b7b9be39c1c38a7d81c66c37e0096b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3c23718-49dd-4b4a-bf8f-9a3d31c2d4cb", "node_type": "1", "metadata": {}, "hash": "e03b10e97b7d4e9bba72eb025c3137f8ffcb883068cb636e4fd5c5b5369d1581", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \n \nSpecial Service Requirements \n \n \n \n  Support for specific communication protocol  \n  Support for a variety of input mechanisms  \n  Compliance with open standards  \n  Extensive library support  \n  Support for Integrated Development Environment \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nCommercial Mobile OS \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 501, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3c23718-49dd-4b4a-bf8f-9a3d31c2d4cb": {"__data__": {"id_": "d3c23718-49dd-4b4a-bf8f-9a3d31c2d4cb", "embedding": null, "metadata": {"page_label": "85", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12f88c88-9e93-4014-b2da-ce809b9f9171", "node_type": "4", "metadata": {"page_label": "85", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "835f5d5fa098dcab2ecff3a793d6cb9487b3ad31fb278d323b6fdf17e922dca2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "997f1f77-584a-48b6-a6be-7ee85998afcf", "node_type": "1", "metadata": {"page_label": "84", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "f9ba30939e8a52acd4ce213ca2861515cdc8720484b382511176c61be0e20c50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c57add6f-7995-41ab-9388-12d8924e0eab", "node_type": "1", "metadata": {}, "hash": "131e5803765b722a2f2daed3f3b0717f3898e807cb9ab144bacec0a215a76230", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \n \nSmartphones are now participating nearly in each and every sphere of life like business, education, \nworkplace and healthcare. The Worldwide Mobile Communications Device Open Operating System \nSales (WMCDOOS) provides total market of 104,898 to End Users by OS. There are over 1.3 \nmillion active applications in Google Play App Store. Android is the first open source, Linux-based \nand modern mobile handset platform. Google developed it for handset manufacturers like T-Mobile, \nSprint Nextel, Google, Intel, Samsung, etc.. It offers to consumers a richer, less expensive, better \nmobile experience and various features like 3D, SQLite, Connectivity, WebKit, Dalvik and \nFreeType etc. Since android provides open source operating system; users by Microsoft for \nsmartphones and Pocket PCs.  \nIts origins dated back to Windows CE in 1996, though Windows Mobile itself first appeared in 2000 \nas PocketPC 2000 . It was renamed \"Windows Mobile\" in 2003, at which point it came in several \nversions (similar to the desktop versions of Windows) and was aimed at business and enterprise \nconsumers. By 2007, it was the most popular smartphone software in the U.S., but this popularity \nfaded in the following years. In February 2010, facing competition from rival OSs including iOSand \nAndroid, Microsoft announced Windows Phone to supersede Windows Mobile. As a result, \nWindows Mobile has been deprecated. Windows Phone is incompatible with Windows Mobile \ndevices and software. The last version of Windows Mobile, released after the announcement of \nWindows Phone, was 6.5.5. After this, Microsoft ceased development on Windows Mobile, in order \nto concentrate on Windows Phone. \n \nMost versions of Windows Mobile have a standard set of features, such as multitasking and the \nability to navigate a file system similar to that of Windows 9x andWindows NT, including support \nfor many of the same file types. Similarly to its desktop counterpart, it comes bundled with a set of \napplications that perform basic tasks. Internet Explorer Mobile is the default web browser, and \nWindows Media Player is the default media player used for playing digital media. The mobile \nversion of Microsoft Office, is the default office suite. \n \nInternet Connection Sharing, supported on compatible devices, allows the phone to share its Internet \nconnection with computers via USB and Bluetooth. Windows Mobile supports virtual private \nnetworking over PPTP protocol. Most devices with mobile connectivity also have a Radio Interface \nLayer. The Radio Interface Layer provides the system interface between the Cell Core layer within \nthe Windows Mobile OS and the radio protocol stack used by the wireless modem hardware. This \nallows OEMs to integrate a variety of modems into their equipment. \n \nThe user interface changed dramatically between versions, only retaining similar functionality. The \nToday Screen , later called the Home Screen , shows the current date, owner information, upcoming \nappointments, e-mails, and tasks. The taskbar display the current time as well as the volume level. \nDevices with a cellular radio also show the signal strength on said taskbar. \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3338, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c57add6f-7995-41ab-9388-12d8924e0eab": {"__data__": {"id_": "c57add6f-7995-41ab-9388-12d8924e0eab", "embedding": null, "metadata": {"page_label": "86", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc682d98-57b8-412d-96e3-be2f54e7c538", "node_type": "4", "metadata": {"page_label": "86", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ce4abe8f0030ea15b2af5279e88295a2c81a14b6ef26cc9e43bf73dcd6241846", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3c23718-49dd-4b4a-bf8f-9a3d31c2d4cb", "node_type": "1", "metadata": {"page_label": "85", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "de30c6d6f01c152775ccfe344b6eac96382f22e6fa68c08e785ed81b804103d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0111afdb-673d-4d93-8a93-818fd0694fc7", "node_type": "1", "metadata": {}, "hash": "a9e46c0b46cf00cb9ff8b77eb50333b41254d2632e45d921129a87d6475c00bc", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \nPalm OS (also known as  Garnet OS ) is a mobile operating system initially developed by Palm,  \nInc., for personal digital assistants (PDAs) in 1996. Palm OS was designed for ease of use with a \ntouchscreen- based graphical user interface. It is provided with a suite of basic applications for \npersonal information management. Later versions of the OS have been extended to support \nsmartphones. Several other licensees have manufactured devices powered by Palm OS. \n \nFollowing Palm's purchase of the Palm trademark, the currently licensed version from ACCESS was \nrenamed Garnet OS . In 2007, ACCESS introduced the successor to Garnet OS, called Access Linux \nPlatform and in 2009, the main licensee of Palm OS, Palm, Inc., switched from Palm OS to webOS \nfor their forthcoming devices. \n \nPalm OS was originally developed under the direction of Jeff Hawkins at Palm Computing,  Inc. \nPalm was later acquired by U.S. Robotics Corp., which in turn was later bought by 3Com, which \nmade the Palm subsidiary an independent publicly traded company on March 2, 2000. \n \n \nIn January 2002, Palm set up a wholly owned subsidiary to develop and license Palm OS, which was \nnamed PalmSource. PalmSource was then spun off from Palm as an independent company on \nOctober 28, 2003. Palm (then called palmOne) became a regular licensee of Palm OS, no longer in \ncontrol of the operating system. \n \nIn September 2005, PalmSource announced that it was being acquired by ACCESS.  \n \nIn December 2006, Palm gained perpetual rights to the Palm OS source code from ACCESS.[9] With \nthis Palm can modify the licensed operating system as needed without paying further royalties to \nACCESS. Together with the May 2005 acquisition of full rights to the Palm  brand name, only Palm \ncan publish releases of the operating system under the name 'Palm OS'. \n \n \nAs a consequence, on January 25, 2007, ACCESS announced a name change to their current Palm \nOS operating system, now titled Garnet OS.  \n \nPalm OS is a proprietary mobile operating system. Designed in 1996 for Palm Computing, Inc.'s  \nnew Pilot  PDA,  it   has  been implemented   on   a   wide   array   of   mobile   devices, \nincluding smartphones, wrist  watches,handheld gaming  consoles, barcode  \nreaders and GPS devices.     \nPalm  OS versions earlier  than  5.0  run  on Motorola/Freescale  DragonBall processors.  From  \nversion 5.0 onwards, Palm OS runs on ARM architecture -based processors. \n \nThe key features of the current Palm OS Garnet are: \n \n  Simple, single-tasking environment to allow launching of full screen applications with a \nbasic, common GUI set \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2790, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0111afdb-673d-4d93-8a93-818fd0694fc7": {"__data__": {"id_": "0111afdb-673d-4d93-8a93-818fd0694fc7", "embedding": null, "metadata": {"page_label": "87", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "855d1dc4-4bdf-45b9-a634-7240674a8dd2", "node_type": "4", "metadata": {"page_label": "87", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "481632382d4f8e3bb5ad5e1ff189da882d2fa4ba881188f8407824d1d88508a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c57add6f-7995-41ab-9388-12d8924e0eab", "node_type": "1", "metadata": {"page_label": "86", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ca265a365043692f90577384982f567ae33d3cdbd1d2953802ccfcbae438035c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3747f70b-f026-4062-bf50-d6ff9340220f", "node_type": "1", "metadata": {}, "hash": "216f3ca11bdae72f47c94fa91ccfee95b8c18dafeebd98f214232a29aee9186e", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \n\uf020 Monochrome or color screens with resolutions up to 480x320 pixel \uf020\n\uf020\n  Handwriting recognition input system called Graffiti 2  \n \n  HotSync technology for data synchronization with desktop computers \n \n\uf020 Sound playback and record capabilities \uf020\n\uf020\n\uf020 Simple security model: Device can be locked by password, arbitrary application records can \nbe made private \uf020\n\uf020\n  TCP/IP network access \n \n  Serial port/USB, infrared, Bluetooth and Wi-Fi connections \n \n  Expansion memory card support  \n \n  Defined standard data format for personal information management applications to store \ncalendar, address, task and note entries, accessible by third-party applications. \n\uf020\nIncluded with the OS is also a set of standard applications, with the most relevant ones for the four \nmentioned PIM operations. \n\uf020\nSymbian was a closed-source mobile operating system (OS) and computing platform designed for \nsmartphones.[6] Symbian was originally developed by Symbian Ltd., as a descendant of Psion's \nEPOC and runs exclusively on ARM processors, although an unreleased x86 port existed. \n \n \nSymbian was previously an open-source platform developed by the now defunct Symbian  \nFoundation in 2009, as the successor of the original Symbian OS  before being transitioned to a non-\nopen license in 2011. Symbian was used by many major mobile phone brands, like Samsung, \nMotorola, Sony Ericsson, and above all by Nokia. It was briefly the most popular smartphone OS on \na worldwide average until the end of 2010 \u2013 at a time when smartphones were  \nin limited use, when it was overtaken byAndroid, as Google and its partners achieved wide adoption. \n \nSymbian rose to fame from its use with the S60 platform built by Nokia, first released in 2002 and \npowering most Nokia smartphones. UIQ, another Symbian platform, ran in parallel, but these two \nplatforms were not compatible with each other. Symbian^3 was officially released in Q4 2010 as the \nsuccessor of S60 and UIQ, first used in theNokia N8, to use a single platform for the OS. In May \n2011 an update, Symbian Anna, was officially announced, followed by Nokia Belle (previously \nSymbian Belle) in August 2011. \n \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3747f70b-f026-4062-bf50-d6ff9340220f": {"__data__": {"id_": "3747f70b-f026-4062-bf50-d6ff9340220f", "embedding": null, "metadata": {"page_label": "88", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da8104d6-c5af-451c-9acb-89af70ca5ac9", "node_type": "4", "metadata": {"page_label": "88", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "901f29d6cc92362d69911362e10c7e508066404e17e08d964ee0f851aec756d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0111afdb-673d-4d93-8a93-818fd0694fc7", "node_type": "1", "metadata": {"page_label": "87", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "e9a3b5043b1a53f1cc2ee2b25179d79419b0bfbb21263150dfc9bfc89b404747", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97ea8c46-5282-4bdd-abfb-9dcb3351e26b", "node_type": "1", "metadata": {}, "hash": "9761e42327604b68f343f3234c9a916d5613dbc3d1ed73f949d9746c3f7f649e", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \niOS (originally  iPhone OS ) is a mobile operating system created and developed by Apple  Inc. and \ndistributed exclusively for Apple hardware. It is the operating system that presently powers many of \nthe company's mobile devices, including the iPhone, iPad, and iPod touch. It is the second most \npopular mobile operating system in the world by sales, after Android. iPad tablets are also the \nsecond most popular, by sales, against Android since 2013, when Android tablet sales increased by \n127%.[7] \n \nOriginally unveiled in 2007, for the iPhone, it has been extended to support other Apple devices such \nas the iPod Touch (September 2007), iPad (January 2010), iPad Mini (November 2012) and second-\ngeneration Apple TV onward (September 2010). As of January 2015, Apple's App Store contained \nmore than 1.4 million iOS applications, 725,000 of which are native for iPads.[8] These mobile apps \nhave collectively been downloaded more than 100 billion times.[9] \n \nThe iOS user interface is based on the concept of direct manipulation, using multi- touch gestures. \nInterface control elements consist of sliders, switches, and buttons. Interaction with the OS includes \ngestures such as swipe , tap, pinch , and reverse pinch , all of which have specific definitions within \nthe context of the iOS operating system and its multi-touch interface. Internal accelerometers are \nused by some applications to respond to shaking the device (one common result is the undo \ncommand) or rotating it in three dimensions (one common result is switching from portrait to \nlandscape mode). \n \niOS shares with OS X some frameworks such as Core Foundation and Foundation Kit; however, its \nUI toolkit is Cocoa Touch rather than OS X's Cocoa, so that it provides the UIKit framework rather \nthan the AppKit framework. It is therefore not compatible with OS X for applications. Also while \niOS also shares the Darwinfoundation with OS X, Unix-like shell access is not available for users \nand restricted for apps, making iOS not fully Unix-compatible either. \n \nMajor versions of iOS are released annually. The current release, iOS 9.3, was released on March \n21, 2016. In iOS, there are four abstraction layers: the Core OS layer, the Core   \nServices layer, the Media layer, and the Cocoa Touch layer. The current version of the operating \nsystem (iOS 9), dedicates around 1.3 GB of the device's flash memory for iOS itself.[10] It runs  \non the iPhone 4S and later, iPad 2 and later, iPad Pro, all models of the iPad Mini, and the 5th-\ngeneration iPod Touch and later. \n \nAndroid is a mobile operating system (OS) currently developed by Google, based on the Linux  \nkernel and designed primarily for touchscreen mobile devices such as smartphones and tablets.  \nAndroid's user interface is mainly based on direct manipulation, using touch gestures that loosely \ncorrespond to real-world actions, such as swiping, tapping and pinching, to manipulate on-screen \nobjects, along with a virtual keyboard for text input. In addition to touchscreen devices, Google has \nfurther developed Android TV for televisions, Android Auto for cars, and Android Wear for wrist \nwatches, each with a specialized user interface. Variants of Android are also used on notebooks, \ngame consoles, digital cameras, and other electronics. \n \nAndroid has the largest installed base of all operating systems of any kind. Android has been the best \nselling OS on tablets since 2013, and on smartphones it is dominant by any metric. \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3668, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97ea8c46-5282-4bdd-abfb-9dcb3351e26b": {"__data__": {"id_": "97ea8c46-5282-4bdd-abfb-9dcb3351e26b", "embedding": null, "metadata": {"page_label": "89", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96eea20e-b904-4079-8891-fd96bd94475f", "node_type": "4", "metadata": {"page_label": "89", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "3ed400fb251d38dd2795c80b2c41da5a319a51270efd5c6159f730001efbf033", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3747f70b-f026-4062-bf50-d6ff9340220f", "node_type": "1", "metadata": {"page_label": "88", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "27772845447074e2be6c9ec5a1d5d52258b946ed2cbb9de38bd11ed2ffb88e29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cf1ee9b-da65-4205-851b-9b9202172736", "node_type": "1", "metadata": {}, "hash": "89e6a95df19c81183e79be086d3104a07d3acc6b0d49cd19852d39c224c240e1", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \nInitially developed by Android, Inc., which Google bought in 2005, Android was unveiled in 2007, \nalong with the founding of the Open Handset Alliance \u2013 a consortium of hardware, software, and \ntelecommunication companies devoted to advancing open  standards for mobile devices. As of July \n2013, the Google Play store has had over one million Android applications (\"apps\") published, and \nover 50 billion applications downloaded.[18] An April \u2013May 2013 survey of mobile application \ndevelopers found that 71% of developers create applications for Android,[19] and a 2015 survey \nfound that 40% of full-time professional developers see Android as their priority target platform, \nwhich is comparable to Apple's iOS on 37% with both platforms far above others.[20] At Google I/O \n2014, the company revealed that there were over one billion active monthly Android users, up from \n538 million in June 2013. \n \nAndroid's source code is released by Google under open source licenses, although most Android \ndevices ultimately ship with a combination of open source and proprietary software, including \nproprietary software required for accessing Google services. Android is popular with technology \ncompanies that require a ready-made, low-cost and customizable operating system for high- tech \ndevices. Its open nature has encouraged a large community of developers and enthusiasts to use the \nopen-source code as a foundation for community-driven projects, which add new features for \nadvanced users[23] or bring Android to devices originally shipped with other operating systems. At \nthe same time, as Android has no centralised update system most Android devices fail to receive \nsecurity updates: research in 2015 concluded that almost 90% of Android phones in use had known \nbut unpatched security vulnerabilities due to lack of updates and support. The success of Android \nhas made it a target for patent litigation as part of the so-called \"smartphone  wars\" between \ntechnology companies \n \nSoftware Development Kit \n \nThe iOS SDK (Software Development Kit) (formerly iPhone SDK) is a software development  kit \ndeveloped by Apple Inc. and released in February 2008 to developnative applications for iOS. \n \nOn October 17, 2007, in an open letter posted to Apple's \"Hot News\" weblog, Steve  Jobs announced \nthat a software development kit (SDK) would be made available to third-party developers in \nFebruary 2008.[1] The SDK was released on March 6, 2008, and allows developers to make \napplications for the iPhone and iPod Touch, as well as test them in an \"iPhone simulator\". However, \nloading an application onto the devices is only possible after paying an iOS Developer Program fee, \nwhich is $99.00 USD per year.[2] Since the release of Xcode 3.1, Xcode is the development \nenvironment for the iOS SDK. iPhone applications, like OS Xapplications, are written in Swift and \nObjective- C,[3] with some elements of an application able to be written in C or C++. \n \nDevelopers are able to set any price above a set minimum for their applications to be distributed \nthrough the App Store, of which they will receive a 70% share. Alternately, they may opt to release \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3344, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cf1ee9b-da65-4205-851b-9b9202172736": {"__data__": {"id_": "2cf1ee9b-da65-4205-851b-9b9202172736", "embedding": null, "metadata": {"page_label": "90", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7317eecb-1c81-471a-b6ec-e7cfb82d70e3", "node_type": "4", "metadata": {"page_label": "90", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "01392a0204d22f4b2bbcc6e3b01c2e528280b9dc0ecd0c20406905ea86befaa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97ea8c46-5282-4bdd-abfb-9dcb3351e26b", "node_type": "1", "metadata": {"page_label": "89", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "b60f36f29fdc9ec9e46f9364f931045acfd465a343e3a92ab0acf341f7ee0800", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "116674c0-ba90-4b8e-b47b-df6e9a6871a1", "node_type": "1", "metadata": {}, "hash": "a469968c0565bdc77dcfb4c5a6924c789f8cfa2e82f2c48c11c75c4aec96719a", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \nthe application for free and need not pay any costs to release or distribute the application except for \nthe membership fee.[25] \n \nSince its release, there has been some controversy regarding the refund policy in the fine print of the \nDeveloper Agreement with Apple. According to the agreement that developers must agree to, if \nsomeone purchases an app from the app store, 30% of the price goes to Apple, and 70% to the \ndeveloper. If a refund is granted to the customer (at Apple's discretion), the 30% is returned to the \ncustomer from Apple, and 70% from the developer; however, Apple can then take another 30% of \nthe cost from the developer to make up for Apple's loss \n \n \nAndroid software development is the process by which new applications are created for  the \nAndroid operating system. Applications are usually developed in Javaprogramming language using \nthe Android software development kit (SDK), but other development environments are also \navailable. \n \nThe Android software development kit (SDK) includes a comprehensive set of development tools. \nThese include a debugger, libraries, a handset emulator based onQEMU, documentation, sample \ncode, and tutorials. Currently supported development platforms include computers running Linux \n(any modern desktop Linux distribution),Mac OS X 10.5.8 or later, and Windows  XP or later. As of \nMarch 2015, the SDK is not available on Android itself, but the software development is possible by \nusing specialized Android applications. \n \nUntil around the end of 2014, the officially supported integrated development environment (IDE) \nwas Eclipse using the Android Developmen t Tools (ADT) Plugin, thoughIntelliJ IDEA IDE (all \neditions) fully supports Android development out of the box,[7] and NetBeans IDE also supports \nAndroid development via a plugin. As of 2015,Android Studio, made by Google and powered by \nIntelliJ, is the official IDE; however, developers are free to use others. Additionally, developers may \nuse any text editor to edit Java and XML files, then use command line tools (Java  Development Kit \nand Apache Ant are required) to create, build and debug Android applications as well as control \nattached Android devices (e.g., triggering a reboot, installing software package(s) remotely). \n \nEnhancements to Android's SDK go hand in hand with the overall Android platform development. \nThe SDK also supports older versions of the Android platform in case developers wish to target their \napplications at older devices. Development tools are downloadable components, so after one has \ndownloaded the latest version and platform, older platforms and tools can also be downloaded for \ncompatibility testing.   \nAndroid applications are packaged in .apk format and stored under /data/app folder on the Android \nOS (the folder is accessible only to the root user for security reasons). APK package contains .dex \nfiles (compiled byte code files called Dalvik executables), resource files, etc. \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 3150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "116674c0-ba90-4b8e-b47b-df6e9a6871a1": {"__data__": {"id_": "116674c0-ba90-4b8e-b47b-df6e9a6871a1", "embedding": null, "metadata": {"page_label": "91", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d17338d4-da21-470c-a412-383d469e67ba", "node_type": "4", "metadata": {"page_label": "91", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "cc5a23d6e083c88ac7d305a1480f149ebf567b152ffffa309029bc47e9c106c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cf1ee9b-da65-4205-851b-9b9202172736", "node_type": "1", "metadata": {"page_label": "90", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "325d766419e02a0faae56ecef53d9753c2f23e8f52f9c73a9c60823fd35bd238", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e5468b5-39da-47d2-a3bf-d5aa4bd88ad3", "node_type": "1", "metadata": {}, "hash": "af11d2148e30e016f2e26b38f5546ff670e3fdb129ecbce310ec154350f5cf18", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n  \nBlackBerry OS  \nBlackBerry  OS is  a proprietary mobile  operating  system developed by BlackBerry  Ltd for \nits BlackBerry line of smartphone handheld devices. The oper\nating system \nprovides multitasking and supports  specialized input  devices that have  been adopted  by  \nBlackBerry  Ltd.  for use in  its  handhelds,  particularly  the trackwheel, trackball,  and  most \nrecently, the trackpad and touchscreen.      \n \n \nThe BlackBerry platform is perhaps best known for its native support for corporate email, through \nMIDP 1.0 and, more recently, a subset of MIDP 2.0, which allows complete wireless activation and \nsynchronization with Microsoft Exchange, Lotus Domino, or Novell  GroupWis e email, calendar, \ntasks, notes, and contacts, when used with BlackBerry Enterprise  Server. The operating system also \nsupports WAP 1.2.Updates to the operating system may be automatically available from wireless \ncarriers that support the BlackBerry over the air software loading (OTASL) service. \n \n \nThird -party developers can write software using the available BlackBerry API classes, although \napplications that make use of certain functionality must be digitally signed.Research from June 2011 \nindicated that approximately 45% of mobile developers were using the platform at the time of \npublication. BlackBerry OS was discontinued after the release of BlackBerry 10 but BlackBerry will \ncontinue support for the BlackBerry OS. \n \n \n \nThe Windows Software Development Kit (SDK) for Windows 8 contains headers, libraries, and a \nselection of tools that you can use when you create apps that run on Windows operating systems. \nYou can use the Windows SDK, along with your chosen development environment, to write \nWindows Store apps (only on Windows 8) using web technologies (such as HTML5, CSS3, and \nJavaScript), native (C++), and managed (C#, Visual Basic) code; desktop applications that use the \nnative (Win32/COM) programming model; or desktop applications that use the managed (.NET \nFramework) programming model. \n \nThe Windows SDK also includes the Windows App Certification Kit (ACK) 2.2 to test your app for \nthe Windows 8 Certification Program and the Windows 7 Logo Program. If you also want to test \nyour app on Windows RT, use the Windows App Certification Kit for Windows RT .  \n \nThe W\nindows SDK no longer ships with a complete command-line build environment. You must \ninstall a compiler and build environment separately. If you require a complete development \nenvironment that includes compilers and a build environment, you can download Visual Studio  \nExpress , which includes the appropriate components of the Windows SDK. To download the SDK \nand install it on another computer, click the download link and run the setup. Then in the Specify \nLocation dialog box, click \n \n \n \n \n \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e5468b5-39da-47d2-a3bf-d5aa4bd88ad3": {"__data__": {"id_": "6e5468b5-39da-47d2-a3bf-d5aa4bd88ad3", "embedding": null, "metadata": {"page_label": "92", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d7cb9cbd-3d93-41ea-999a-a4e72fa940e6", "node_type": "4", "metadata": {"page_label": "92", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "bdb13e995c26bf5a62aeb2c3f27daccb154e1ebc0580adca2bfdf3b04dd8353c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "116674c0-ba90-4b8e-b47b-df6e9a6871a1", "node_type": "1", "metadata": {"page_label": "91", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "42a130702ac8f6eefb241468b9f8f4a970d295884163db18beb3798f9d80ce70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99e62204-0718-4abb-bd0d-91dfd19b5d16", "node_type": "1", "metadata": {}, "hash": "b00079c6e283c8b1849c691592060d9c19fdc7b1dcbe419484c1892af3594cf2", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \nMobile commerce \n \nThe phrase mobile commerce was originally coined in 1997 by Kevin Duffey at the launch of the \nGlobal Mobile Commerce Forum, to mean \"the delivery of electronic commerce capabilities directly \ninto the consumer \u2019s hand, anywhere, via wireless technology.\"[1] Many choose to think of Mobile \nCommerce as meaning \"a retail outlet in your customer \u2019s pocket  \n \nThe Global Mobile Commerce Forum, which came to include over 100 organisations, had its fully \nminuted launch in London on 10 November 1997. Kevin Duffey was elected as the Executive \nChairman at the first meeting in November 1997. The meeting was opened by Dr Mike Short, former \nchairman of the GSM Association, with the very first forecasts for mobile commerce from Kevin \nDuffey (Group Telecoms Director ofLogica) and Tom Alexander (later CEO of Virgin Mobile and \nthen of Orange). Over 100 companies joined the Forum within a year, many forming mobile \ncommerce teams of their own, e.g. MasterCard and Motorola. Of these one hundred companies, the \nfirst two were Logica and Cellnet (which later became O2). Member organisations such as Nokia, \nApple, Alcatel, and Vodafone began a series of trials and collaborations. \n \nMobile commerce services were first delivered in 1997, when the first two mobile-phone enabled \nCoca Cola vending machines were installed in the Helsinki area in Finland. The machines accepted \npayment via SMStext messages. This work evolved to several new mobile applications such as the \nfirst mobile phone-based banking service was launched in 1997 by Merita Bank of Finland, also \nusing SMS. Finnair mobile check-in was also a major milestone, first introduced in 2001 \n \n \n \nM-COMMERCE APPLICATIONS The general m-commerce applications are: \n \n \n1. Mobile ticketing  \nTickets can be sent to mobile phones using a variety of technologies. Users are then able to use their \ntickets immediately by presenting their phones at the venue.Tickets can be booked and cancelled on \nthe mobile with the help of simple applicationdownloads or by accessing WAP portals of various \nTravel agents or direct service providers. Mobile ticketing for airports, \n \nballparks, and train stations, for example, will not only streamline unexpected metropolitan traffic \nsurges, but also help users remotely secure parking spots (even while in their vehicles) and greatly \nfacilitate mass surveillance at transport hubs. \n2. Mobile vouchers, coupons and loyalty cards \n \nMobile ticketing technology can also be used for the distribution of vouchers, coupons and loyalty \ncards. The voucher, coupon, or loyalty card is represented by a virtual token that is sent to the \nmobile phone. Presenting a mobile phone with one of these tokens at the point of sale allows the \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 2925, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99e62204-0718-4abb-bd0d-91dfd19b5d16": {"__data__": {"id_": "99e62204-0718-4abb-bd0d-91dfd19b5d16", "embedding": null, "metadata": {"page_label": "93", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2870e0c2-9b42-459e-b7ba-d82fb2a56d68", "node_type": "4", "metadata": {"page_label": "93", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "ebd5028939a230d1bd0057afc6ddbd80bf4feda10c6abef1a380a433bb9b81ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e5468b5-39da-47d2-a3bf-d5aa4bd88ad3", "node_type": "1", "metadata": {"page_label": "92", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}, "hash": "dfad08f606bf171d30eedcab4325dec75a56144129650f60725bd4fb2bc68a10", "class_name": "RelatedNodeInfo"}}, "text": "Sri Vidya College of Engineering & Technology, Virudhunagar                                       Course Material (Lecture Notes) \n \ncustomer to receive the same benefits as another customer who has a loyalty card or other paper \ncoupon/voucher. Mobile delivery enables: \n \n economy of scale \uf020\uf020\n quicker and easier delivery \uf020\uf020\n effective target marketing \uf020\uf020\n privacy-friendly data mining on consumer behaviour \uf020\uf020\n environment-friendly and resources-saving efficacy \uf020\n\uf020\n\uf020\n  Content purchase and delivery \n \nCurrently, mobile content purchase and delivery mainly consists of the sale of ring-tones, \nwallpapers, and games for mobile phones. The convergence of mobile phones, mp3 players and \nvideo players into a single device will result in an increase in the purchase and delivery of full-length \nmusic tracks and video. Download speeds, if increased to 4G levels, will make it possible to buy a \nmovie on a mobile device in a couple of seconds, while on the go. \n \n \n4. Location-based services \n \nUnlike a home PC, the location of the mobile phone user is an important piece of information used \nduring mobile commerce transactions. Knowing the location of the user allows for location based \nservices such as: \n \n\uf095 local maps \uf020\uf020\n\uf095 local offers \uf020\uf020\n\uf095 local weather \uf020\uf020\npeople tracking and monitoring  \nwww.padeepz.net\nwww.padeepz.net", "start_char_idx": 8, "end_char_idx": 1340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"fa6e7e0b-b354-4700-a36a-12e82722c889": {"doc_hash": "8bad9e52f35e16e543e66d544d1f9086f8f12b1ede397e172ddd2dcd18eaf370", "ref_doc_id": "5e49f9c0-95ac-4d76-b819-6736f27a9536"}, "959d2849-7d04-44cc-95a1-6b0edc646919": {"doc_hash": "4a5dfd99bbcad92378cd5fa4d180f5eaa9fc0714d88e5cb75c67be5c7c962236", "ref_doc_id": "5a838943-8428-41d7-8835-a3bd62e15936"}, "a013823f-f1e8-4cdb-b50f-2677363344ae": {"doc_hash": "92e133cfdc495313f38f2103bf5d8eab96ea3033b1989f298725c6a1aa7f3f37", "ref_doc_id": "74d7863d-235f-450c-ad38-7d890a775ff6"}, "2140d8fb-3d04-4914-a911-38553d7ebdf5": {"doc_hash": "142a61025357fd46030637c5edf12b273c6f8efe66d1559d4c1d06b3a6b519b3", "ref_doc_id": "0790773d-bd6f-464c-9cd6-2aab40add7f1"}, "22701fa7-850d-4700-b84e-6ddd82dd71b2": {"doc_hash": "00ae3becf3532e8fe588206e4756292eaba4459a9b35d2e93e492ad287eafaf2", "ref_doc_id": "63fa64a4-bf03-4844-afe7-002aeae3a6ce"}, "e92555e8-9b3d-4de1-8d38-6d2fb9b76e94": {"doc_hash": "78c1a255ad93deb04714559483a3872740b493ac60e3f850dfc30976dd3063ad", "ref_doc_id": "3e55281c-63ea-41f7-a3f5-7f7233b9b988"}, "0e1612c8-a85b-4f77-9d6a-24328aa3e33a": {"doc_hash": "1ccee2d67d862ac487cabf17e566fe33ed1d5e6f01ff072cab82c75b4c907ac6", "ref_doc_id": "9502e622-ee02-4141-87b4-965247a57c4f"}, "3ea597ed-341a-4884-9966-5929bff91893": {"doc_hash": "f5e313331e3ecaded1b74efd467ebcec25c66b30eb5b2a5e170e9d69012f0545", "ref_doc_id": "bb9aff04-304f-4140-8f46-6e9b29d2bfc0"}, "812a6846-8147-4c8d-84c8-c77f51709f66": {"doc_hash": "8a01a3f1c3803fa9f34a51eaf7e0d1aa253cce29dcf3a493a9f051d1d3fedb36", "ref_doc_id": "217c53d7-bca6-4d79-a419-2f9300a85d81"}, "33cb6383-1700-421c-800e-deb5b81826b6": {"doc_hash": "9f639d0ac345956ee201d6ff7384fbcd40e4e2f5f52b85b63323406d20e4c148", "ref_doc_id": "cd0918a7-7631-46d5-baeb-1f7a2ebd1f4d"}, "146afe32-5e85-4889-9088-176ea751dfc9": {"doc_hash": "3d50c2c09440d5fa30f87c650021bb2310494905b9548585263fe715e72e55e8", "ref_doc_id": "69cb6558-16d1-4967-8dbb-bdc60e880d62"}, "1ea35cdb-1ece-4888-bf1e-0832330df35d": {"doc_hash": "899f54ad03d7ab03e11bccd0c677f63dff440f954999075038060ba537c16f2d", "ref_doc_id": "4c68b96f-baa9-41e5-9dd7-63cb3914dee6"}, "9f77b719-d0d8-436d-90f0-82abda3c8e94": {"doc_hash": "5e5efe2badb3b07b174f787ce692349af03d4c47c722258aa9d8c446e3f0d3bc", "ref_doc_id": "ca512a55-78b1-4f5b-b5c6-223f1e4439bd"}, "0505a8af-12b0-41b9-9ed4-f95810aaa515": {"doc_hash": "58bb15ba2a877009ef9ae7a3691def7d25f111a674b67314a0e6dabb720a09b8", "ref_doc_id": "6044bff5-fd78-43fa-b43f-05d4f2d9879c"}, "c05b5880-2fb0-4c4a-9262-0da730f6ff69": {"doc_hash": "bf6e4824418d530e5f873bd665862460bad9b180d24c621408e297c1efff34f5", "ref_doc_id": "294a4ab4-8490-461f-b50a-1827b71edb3c"}, "08a13c0f-e6f9-48c5-97f0-cf5bb95d52ba": {"doc_hash": "3c0ddadad9d332ef876e8576ac37fcbc8bb44587d1f62de464644385b890e32e", "ref_doc_id": "472250ef-e4a4-4861-bfac-e0764853233b"}, "be58fe51-4dde-45d9-a3ee-bdd3a2858b2d": {"doc_hash": "fb0c28c4ad05d748807db64e5f3ba29f2917581a8d062595a20293ffb7b81d6b", "ref_doc_id": "16cd8a57-24fc-4b83-80f7-1d7b3fe193a2"}, "da81a418-c0c0-47c5-997a-fac5505ac35e": {"doc_hash": "d5e0956ec7891bdb3691e15f45f51fa974eac8472ea846a34b19709cd5037fd5", "ref_doc_id": "ee890a12-195b-4e37-a0ac-904d69ce305a"}, "1943d3d5-d9c2-45f2-8aaf-af8c74b7f76f": {"doc_hash": "ae0eac89a1d43a0eb0f7cc6b803582476accc8ff9fc00c3360a2cecee9089936", "ref_doc_id": "75d0e8ab-d0c4-4dfa-a84a-49fd63600f51"}, "513e7c52-dc36-4b8d-9a03-d32e742ea2d6": {"doc_hash": "38c5970e23939c2b79b49d964d37c043ea824ca68750ff206fbc9a9942f3af0f", "ref_doc_id": "1cc38aa7-4da3-4b3c-a408-45a84d3d2687"}, "4d29a749-b4cb-47a8-86bf-ca849b512905": {"doc_hash": "3c2fa6bbcfa48773c86f6f5a8acb4684d9aaeb1430c01b6f816c9134c67f054c", "ref_doc_id": "d1b6969f-284b-46f7-a911-ecbd1c7137ba"}, "6db0769a-b663-4f70-8724-e1c6dac9e473": {"doc_hash": "08a6b3c448ed6546e66a67736204f78a7f1f09f75d28d92ede915b4aa96cb0f5", "ref_doc_id": "29303b87-5b17-4981-bf4b-1df150265b8d"}, "535e9624-ebf4-431a-a747-e1f3dcd0dab1": {"doc_hash": "73d9fe2f43b00e24d67b05e88af50500790726b4ccfbe990aa6322b9a0555faf", "ref_doc_id": "d9f95273-bbd7-4a36-b7a8-07ea36b4cbda"}, "e2ab20c1-4764-4e66-8e57-e0a7c21dd8e6": {"doc_hash": "ee4355301f494f4f3725a2e5e6ae6699c453720a8e74cd64ec3f342d6a90fe79", "ref_doc_id": "27347f3c-d786-44a0-ae08-7598a6389c83"}, "51ffbd6e-dcd3-4a60-95db-d84bfd0d015e": {"doc_hash": "0b9528420dedcbce49d5bf82545ef000588fbf8d8e9494e6d537e2c017c31a90", "ref_doc_id": "2af2219f-927f-45eb-8b7f-2873d09995bc"}, "d9602793-ce26-41c2-9978-790afece3257": {"doc_hash": "d20660f09c65b231b75be7ebccb3a5f9c9403f7fe5d11c9b0291869315be59e6", "ref_doc_id": "d9628045-5fb8-40a0-a904-42e2fe288878"}, "54b2787f-8545-4792-bd23-8831ddfcaeca": {"doc_hash": "1259b796b8d86b34f0db0aace6ec223aa6e9b695ff41ff18361bb28937a81a01", "ref_doc_id": "37b7d35d-8df8-4477-9014-465c38028df0"}, "9a0f8746-e1e4-4e5c-8a54-c426181080fb": {"doc_hash": "2344cc4127fb806523fc601ed79c5abdbf9333d11b783d1564568f0017663547", "ref_doc_id": "19fa1e25-d0a5-4cdd-99a1-3aeed43d68f4"}, "7a3fbe37-ba3d-4e63-b9a8-8447b729885e": {"doc_hash": "5b39b1c63a84da990eeaef8a7b5f8b2256365819c83f809be3bc26602bcc4cff", "ref_doc_id": "5c7690a7-7247-4464-af17-c56d9aba6027"}, "da76fc9b-47bd-4287-aaa9-42701e9dcb94": {"doc_hash": "e2a8f855122b193bd0ca050b44c93a59e98ffde14c9b80cd79a7bc9893a132a7", "ref_doc_id": "b35f85d4-5f4a-4ce3-b3ea-fe53aee9f0b8"}, "c5532d70-5b97-450d-88ca-0f215e59efe4": {"doc_hash": "d9e0ab5176443b4b2dff565fe905188d48cafe477c82b83fe5641fc09f0d2291", "ref_doc_id": "2445ddcb-2574-48e4-8f83-493eed3883f8"}, "25b00ce5-9df0-4a12-a55c-2da1339c28cf": {"doc_hash": "b0591002dbc8d4a5eb814ad038adc10856ad72173cd853f9d63ce4b0c49f40c8", "ref_doc_id": "2572a78b-eecd-410b-8d60-4f746834ddea"}, "4689b3b8-8b39-4bb6-841d-c0bdfad057da": {"doc_hash": "3658c85b68fe1a523688beacec3edb478810eddace733fb51983e217af6076bb", "ref_doc_id": "af0e608b-03c6-45e0-991f-daeda7ce47e3"}, "c4296247-008f-49ca-8d0a-6c550bee8c2b": {"doc_hash": "41a9a01bb183bfbabd86046ad1994bf8da70c439ab499922c520b011dca07b79", "ref_doc_id": "aa0c01ea-6053-437e-b7fe-ae62d61ff1aa"}, "205a6b82-638f-4b46-b0aa-aad9c269141f": {"doc_hash": "35838c925c0a15302e473be77d0f785d787f1b27060e6302c6b78d53d36d3681", "ref_doc_id": "1d1dc523-1cc6-4d7c-9a4e-eb58c7d06c37"}, "10f50603-106c-4b40-875f-82f455775e1a": {"doc_hash": "52337b3dc9e465c7bc20ac7dd602f94812605722a254083ae94539364fc879f7", "ref_doc_id": "905c67b8-394a-49ee-b8ae-b9d008eab775"}, "9c95a502-d337-44c2-906d-165966ca84a0": {"doc_hash": "2240bbbc6ef52c80642131dd930a97e70dcb8d909e98a3c3c2dc3f6ee3cce932", "ref_doc_id": "64370351-d2a1-4fc4-913e-6e0693213290"}, "461ac678-d3ac-454f-a627-af07dc6e0184": {"doc_hash": "15d705a8e97ab25084edcd740089c457ccb586a1003efadb9607155c17498773", "ref_doc_id": "2e8f639c-33e9-4893-8a2d-51be97be0321"}, "b1f9b243-b7f8-4869-82cb-ea7c510d0496": {"doc_hash": "39e1ad0bd78a2e55991b1fc698df43987e849ebb0c10043c549647c4f25ecc7a", "ref_doc_id": "83d6dab2-a3fc-4002-b8bc-e1cb58132a58"}, "6553587c-43ac-4e8e-a574-78cdf89064bf": {"doc_hash": "bc4be83b970217cdd708f4f714ce0b7af7608477cc88fe29c964719c25cc42d5", "ref_doc_id": "f7efaa37-121c-460c-8ed9-231e9cd52872"}, "c3b3b908-4889-42c7-b85c-57f65805be45": {"doc_hash": "9078e9c87055c5732a378419e0dcc6979f493e6993895c2951534c28010f0ae3", "ref_doc_id": "d578e233-64b0-49a1-a6ff-85c569042d81"}, "cd77ed0c-64db-4bd5-b818-55c95f22cb18": {"doc_hash": "d47c430b9128ce9a80c7f21ce36a27139dd243e84b70856b745b34f8bd6cdd5d", "ref_doc_id": "8542d4c3-087f-4cff-a8ef-97bb36b6a73f"}, "59f67653-3696-418c-8df3-96cc09768e04": {"doc_hash": "401f1f583693959cfedee614e3ab735840b2b9b1dfe2707815703ed0ba4d025e", "ref_doc_id": "6adf53a3-8ea5-4aee-bec9-5dc812a3e1d9"}, "26f896ef-a475-4ca2-90a8-67a71bafbb07": {"doc_hash": "9e9753e5e0e02f07c2498b089b493fd474c3860f7aaa3672bda1d46a905ac972", "ref_doc_id": "3e8dc8ea-8e0e-47ad-bf00-1219ed8325e9"}, "a55c601d-3a48-41d1-9c91-f7bbfd993978": {"doc_hash": "804b51d3409d6283ebfc19ccc404417fbf626f5cdb646d014a267ad8f14f9b83", "ref_doc_id": "6142f352-8384-40a6-8386-7bee74c0bf79"}, "000bed21-98b0-4e2d-bcaf-a4d4374b04db": {"doc_hash": "3c69fa6bd23c60130087c662a7a61a63c092c66ec743052f67d02f924b5e4225", "ref_doc_id": "903743f0-e677-4472-b121-6ddc922aa647"}, "8900f060-4536-4ea1-ac07-b12731a511e8": {"doc_hash": "f746169ba1fbc6c5c888e1c43050917e329a901ef9a988c735a67a5e7cc74862", "ref_doc_id": "4bf4bcc8-97b0-41a0-9476-75a1007205a0"}, "61b8dac7-361a-414a-9977-cee0fc2c2ca0": {"doc_hash": "b892b290ddd24b2f032824ef97cdee94e4b08a11b468e71b942a478cc8ddf014", "ref_doc_id": "404c9be4-2f96-49a2-9f1e-3c4034b0b7af"}, "c0dc19d8-e01d-419f-9385-6ccd67f4a6f2": {"doc_hash": "2b5aa4fc23fa9c6fe3454636421a2052ecf2b7310908b35829ada8e0a76f5b13", "ref_doc_id": "f9a49bcd-ff93-491a-9e31-fc4af4104fce"}, "82309be0-89fd-4e8f-a122-64dd28979a8f": {"doc_hash": "845362974a612f272f73aad99936bc5cd9e0fbdc477fe455e0a4c8769516c024", "ref_doc_id": "483ba301-d409-4560-b523-23ba88bcce6a"}, "4cdc3908-31f4-4e6f-8430-685c456d5f0a": {"doc_hash": "508feb07f098054c37ac6b6598b60671228f01718e163aea72e60603629712e8", "ref_doc_id": "e0523389-20f5-445a-8be4-ffdf20b243dc"}, "7d1fbb41-44b5-45c8-995d-22823d60c0a3": {"doc_hash": "38cd97d240426fe8d8b946729444f21586226625fe589698d3ee9cd84c8763fe", "ref_doc_id": "a689957f-2b45-4270-9315-d44f7e747693"}, "be309a96-cc75-4df3-9b17-371b12fc8611": {"doc_hash": "55fd85d29ad372522abca4b7b8bb287386f5e2f7db926107322820bf721ef947", "ref_doc_id": "76ca92c4-8a2c-4b8d-a63f-7a473f488343"}, "6224c3ad-9729-4adf-b36d-c1b79a68e546": {"doc_hash": "6fdfca135882844b7697556136afa3e9f4cff8c1a9f5aafe1c9a7c2bde6c2cc1", "ref_doc_id": "33f11817-0fc2-498f-8923-d3e8643bd5b7"}, "9c00d221-6b11-41f3-9d47-d6bc387e60a3": {"doc_hash": "31fc68d23a1fd21b21eb7aceaa44d2a71cb2911113f6fb6dd58b82001abfb9df", "ref_doc_id": "9ac99685-1149-4915-8188-e4d4183145b9"}, "1bd24ee1-603c-4d7e-87f3-f252ee0a3c50": {"doc_hash": "439b8c653d3a03a5c44f8fc1290eb439d1c01f6d51acac3c3c438c1fe9719c35", "ref_doc_id": "f7fb1e14-07a9-480f-ad34-f574849ab35c"}, "eb733c47-1299-4745-8c1b-71b0593783c4": {"doc_hash": "a0e4dc42d4a5be72b167a73ddbc06ccd706ec5efc4ea0fe34e5e0a753016a047", "ref_doc_id": "3416f0e1-58f0-4c4f-85fc-01b8981715ff"}, "e3526de2-761f-48e5-96db-865f61dc341c": {"doc_hash": "38b897445b125ec3e7c1f1019e3566d57a786826757baef795d1bb73b67eb734", "ref_doc_id": "072ed527-4901-4eb0-91df-eb8615d08a1b"}, "b83594f2-d064-4676-9c71-3288df8f1caa": {"doc_hash": "dca09dcee7e0cfeb32c78559eef4801b040619e648de0e0e68697bd7337a2ba3", "ref_doc_id": "07b4fb86-a5bf-4fc5-b626-9bbc5d3cf6e8"}, "db527b50-093d-4be0-b02d-117ada4109fb": {"doc_hash": "ba22462399ab1ca87925da25216452a329d99b3b20a0772703de7578da2c9040", "ref_doc_id": "b96a1d9f-778e-4e73-b939-a58cfd5799fe"}, "8e204855-41eb-486d-961b-7e2f0c095d67": {"doc_hash": "d7a647260e3e408b189b60672a5a9c3736cada6d66356bc9a02aec0854c5ac52", "ref_doc_id": "23a0842e-dfec-4fc6-9db3-74c20e0ccc23"}, "70f988c3-fc79-4486-a022-6ca37b29c91a": {"doc_hash": "707a8a830dac74e0ebe3309e4621cc8ddbc4ef4f4522a1bbaea4e3794c133ea2", "ref_doc_id": "d5928ffe-1e5a-4227-ace5-4b9c91754116"}, "2edfdfea-2983-434c-81a0-3d63a865ca17": {"doc_hash": "394de114004497da45edd400847d2eb995951879cbfaf6aba47975d577bb5aed", "ref_doc_id": "1e0494aa-374d-4f0b-8128-021eb99160fb"}, "e17eddfb-7f3e-4b1f-af1a-fa1021db04d3": {"doc_hash": "bcd018c4df84f4288e301cee347deac23a7876d627c4f277bfecdb3db233afe4", "ref_doc_id": "f817a39e-d2a8-48a5-99fa-a76404a4bede"}, "497cf475-5ee8-4436-b041-d60ef7d8ae52": {"doc_hash": "4abb5774fe79fa7351b02c87fdf4dc6a646ecae125360a97c89204773b9a5018", "ref_doc_id": "7175f4ab-5bd2-49bd-b78c-02a906a4b31b"}, "e208619d-5b31-4c9f-91d5-a8b3a50a7ca1": {"doc_hash": "fd8c5a94b9a0319e9ee52ebfa22206b5736cf96701375aa8f715ef82b60bdd54", "ref_doc_id": "df695d3f-0a1b-4551-9acd-bb5da02f8070"}, "ea4b4808-9b42-4d1f-8253-fc8f030d5340": {"doc_hash": "0a158b5bc73c4800be1235fca800c13ef9953783295a542ddd8cc390ab9495b1", "ref_doc_id": "12d1fd01-3f56-4cc5-aac9-f541f7d48507"}, "bbc38b25-288f-42a9-8dfd-38fda9831886": {"doc_hash": "4ae4f2afd25bb5880ae349953a229e5770937dd8411a0e6631fc637f3db8bb06", "ref_doc_id": "2977b52a-948e-4577-95fe-d99dbf606a1c"}, "7e2ed22d-bda8-4c59-b34a-4fbbe412074b": {"doc_hash": "2fb5e311b220c1cef7e8ec29deef92a1111cdde1d0f6d7be5516e820e3de900d", "ref_doc_id": "be07c1ee-233a-437d-b3cf-2ca52c5fd3ee"}, "bdd237b0-622d-46b9-97ef-5367b1cf8ce0": {"doc_hash": "a8556ecac94d005f6c643076c3e6787c515bb7c2e0444f42699353635c9f0ad3", "ref_doc_id": "17ed5e70-8da2-4b37-b9ff-b39c9bfa42a7"}, "e57bdfa1-c06b-451d-b83f-434bcd4b8daa": {"doc_hash": "096e0ddf68828316372fb64b99cfa66b0cc4bf704b15edd3d913fda633369c69", "ref_doc_id": "903a00ea-2cc4-4917-aa2d-7937291b0a2d"}, "4e6d4621-ff3a-4ddf-91cd-59c7c5855e83": {"doc_hash": "842eef5d8ac6c3d121384fb84e2cc4ea1fe5cf407dd71a3beab9700e45a970b1", "ref_doc_id": "f09bf8da-568b-4206-8d49-65332490f743"}, "7eec4a61-4ee1-4b0d-bae5-d2bb99cc3139": {"doc_hash": "e9216a540423bcba8daaa581f334f1012739bcf0949c4d554598db3f831fd713", "ref_doc_id": "c4593348-961f-4dff-8d9b-9d95a54ad6b0"}, "3061e559-92c9-46c8-9918-4cedbfe9119c": {"doc_hash": "abe0cd12b0ee280370f69833522fc2bcb970e7bb7dce0f6353a01c499d577349", "ref_doc_id": "2ad86828-6c41-49f3-aeaf-8aaa580586f4"}, "593581d7-b533-4d53-9967-875e03be80ec": {"doc_hash": "3b262761cb908b6a9b30fc2d1c09e1bebf2bc0fde258724ebf9573ae400943c6", "ref_doc_id": "568093a7-43f9-4f82-8944-e9ae6bfc452b"}, "11901222-84be-4237-907d-3abbef4b3c5b": {"doc_hash": "393d417cf03b94f9e2872cc919cd9cd7f57737c27d2497a279541b5c3d2ca19d", "ref_doc_id": "093809fc-7073-4ee6-b44e-4466c071226a"}, "f4bc69be-f26b-4b83-867d-3cfc7d763ca9": {"doc_hash": "28822f4d45f90436048d14549a69b7c6e191fed113c8ea711c464d1fbf9e6b42", "ref_doc_id": "a5af767e-50de-4153-9a95-652dd66f50f2"}, "0e96a1d6-584a-410a-8e72-fbee41f0fbd1": {"doc_hash": "985f6fd049e134e367ae4c5516a14f5f7e2b84f869688e6c864202a29edff531", "ref_doc_id": "06221063-2142-4fcb-96f0-6f94280aed9b"}, "8ed04b11-73e5-44c4-9414-5527e6cd7ce4": {"doc_hash": "de357765ab19a124d52e67d79d4c990167fddebfb430a7aa5df19e61125d60a0", "ref_doc_id": "027ccd47-f71e-4f57-82f5-e500ee8cd3dc"}, "c560f025-4430-4766-bdc4-7c08c79005e8": {"doc_hash": "cfdf249337210849358354bb0f4bdd9f8628c0c08f0c99ca4b4fc29643847425", "ref_doc_id": "8679f7a8-af2a-4b9a-ad64-ed3678d32690"}, "18ab5689-ae90-46f3-b1dd-6e9b55fc337c": {"doc_hash": "093bbc7fc8fad817c94882b744576965de3b2275f7ea9d9a4d573029340db273", "ref_doc_id": "1990a80b-e97b-438f-ad6f-9557b6237141"}, "49104698-bbf4-4762-94b6-66ca212a65f8": {"doc_hash": "6633ade19db2a924076baf8b150d9339b627ece224dcb29dcc516a01834e2534", "ref_doc_id": "0a2b331d-ec43-4bb9-85b2-d376d5fdecb1"}, "104aece4-db9b-440b-965e-667c195897f7": {"doc_hash": "c86f98d8add67a33ae959fc15b372bbab1b7b9be39c1c38a7d81c66c37e0096b", "ref_doc_id": "7e8c925a-5e1b-4d26-8350-a7c7559a1c1b"}, "997f1f77-584a-48b6-a6be-7ee85998afcf": {"doc_hash": "f9ba30939e8a52acd4ce213ca2861515cdc8720484b382511176c61be0e20c50", "ref_doc_id": "26ceacec-9391-47e1-8904-f2dd00fdf32f"}, "d3c23718-49dd-4b4a-bf8f-9a3d31c2d4cb": {"doc_hash": "de30c6d6f01c152775ccfe344b6eac96382f22e6fa68c08e785ed81b804103d6", "ref_doc_id": "12f88c88-9e93-4014-b2da-ce809b9f9171"}, "c57add6f-7995-41ab-9388-12d8924e0eab": {"doc_hash": "ca265a365043692f90577384982f567ae33d3cdbd1d2953802ccfcbae438035c", "ref_doc_id": "bc682d98-57b8-412d-96e3-be2f54e7c538"}, "0111afdb-673d-4d93-8a93-818fd0694fc7": {"doc_hash": "e9a3b5043b1a53f1cc2ee2b25179d79419b0bfbb21263150dfc9bfc89b404747", "ref_doc_id": "855d1dc4-4bdf-45b9-a634-7240674a8dd2"}, "3747f70b-f026-4062-bf50-d6ff9340220f": {"doc_hash": "27772845447074e2be6c9ec5a1d5d52258b946ed2cbb9de38bd11ed2ffb88e29", "ref_doc_id": "da8104d6-c5af-451c-9acb-89af70ca5ac9"}, "97ea8c46-5282-4bdd-abfb-9dcb3351e26b": {"doc_hash": "b60f36f29fdc9ec9e46f9364f931045acfd465a343e3a92ab0acf341f7ee0800", "ref_doc_id": "96eea20e-b904-4079-8891-fd96bd94475f"}, "2cf1ee9b-da65-4205-851b-9b9202172736": {"doc_hash": "325d766419e02a0faae56ecef53d9753c2f23e8f52f9c73a9c60823fd35bd238", "ref_doc_id": "7317eecb-1c81-471a-b6ec-e7cfb82d70e3"}, "116674c0-ba90-4b8e-b47b-df6e9a6871a1": {"doc_hash": "42a130702ac8f6eefb241468b9f8f4a970d295884163db18beb3798f9d80ce70", "ref_doc_id": "d17338d4-da21-470c-a412-383d469e67ba"}, "6e5468b5-39da-47d2-a3bf-d5aa4bd88ad3": {"doc_hash": "dfad08f606bf171d30eedcab4325dec75a56144129650f60725bd4fb2bc68a10", "ref_doc_id": "d7cb9cbd-3d93-41ea-999a-a4e72fa940e6"}, "99e62204-0718-4abb-bd0d-91dfd19b5d16": {"doc_hash": "31a156fd1d74b6fdc860bfc3d30f0ef40355d678f5cb1ee6855b744c5b60ea9c", "ref_doc_id": "2870e0c2-9b42-459e-b7ba-d82fb2a56d68"}}, "docstore/ref_doc_info": {"5e49f9c0-95ac-4d76-b819-6736f27a9536": {"node_ids": ["fa6e7e0b-b354-4700-a36a-12e82722c889"], "metadata": {"page_label": "1", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "5a838943-8428-41d7-8835-a3bd62e15936": {"node_ids": ["959d2849-7d04-44cc-95a1-6b0edc646919"], "metadata": {"page_label": "2", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "74d7863d-235f-450c-ad38-7d890a775ff6": {"node_ids": ["a013823f-f1e8-4cdb-b50f-2677363344ae"], "metadata": {"page_label": "3", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "0790773d-bd6f-464c-9cd6-2aab40add7f1": {"node_ids": ["2140d8fb-3d04-4914-a911-38553d7ebdf5"], "metadata": {"page_label": "4", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "63fa64a4-bf03-4844-afe7-002aeae3a6ce": {"node_ids": ["22701fa7-850d-4700-b84e-6ddd82dd71b2"], "metadata": {"page_label": "5", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "3e55281c-63ea-41f7-a3f5-7f7233b9b988": {"node_ids": ["e92555e8-9b3d-4de1-8d38-6d2fb9b76e94"], "metadata": {"page_label": "6", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "9502e622-ee02-4141-87b4-965247a57c4f": {"node_ids": ["0e1612c8-a85b-4f77-9d6a-24328aa3e33a"], "metadata": {"page_label": "7", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "bb9aff04-304f-4140-8f46-6e9b29d2bfc0": {"node_ids": ["3ea597ed-341a-4884-9966-5929bff91893"], "metadata": {"page_label": "8", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "217c53d7-bca6-4d79-a419-2f9300a85d81": {"node_ids": ["812a6846-8147-4c8d-84c8-c77f51709f66"], "metadata": {"page_label": "9", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "cd0918a7-7631-46d5-baeb-1f7a2ebd1f4d": {"node_ids": ["33cb6383-1700-421c-800e-deb5b81826b6"], "metadata": {"page_label": "10", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "69cb6558-16d1-4967-8dbb-bdc60e880d62": {"node_ids": ["146afe32-5e85-4889-9088-176ea751dfc9"], "metadata": {"page_label": "11", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "4c68b96f-baa9-41e5-9dd7-63cb3914dee6": {"node_ids": ["1ea35cdb-1ece-4888-bf1e-0832330df35d"], "metadata": {"page_label": "12", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "ca512a55-78b1-4f5b-b5c6-223f1e4439bd": {"node_ids": ["9f77b719-d0d8-436d-90f0-82abda3c8e94"], "metadata": {"page_label": "13", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "6044bff5-fd78-43fa-b43f-05d4f2d9879c": {"node_ids": ["0505a8af-12b0-41b9-9ed4-f95810aaa515"], "metadata": {"page_label": "14", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "294a4ab4-8490-461f-b50a-1827b71edb3c": {"node_ids": ["c05b5880-2fb0-4c4a-9262-0da730f6ff69"], "metadata": {"page_label": "15", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "472250ef-e4a4-4861-bfac-e0764853233b": {"node_ids": ["08a13c0f-e6f9-48c5-97f0-cf5bb95d52ba"], "metadata": {"page_label": "16", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "16cd8a57-24fc-4b83-80f7-1d7b3fe193a2": {"node_ids": ["be58fe51-4dde-45d9-a3ee-bdd3a2858b2d"], "metadata": {"page_label": "17", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "ee890a12-195b-4e37-a0ac-904d69ce305a": {"node_ids": ["da81a418-c0c0-47c5-997a-fac5505ac35e"], "metadata": {"page_label": "18", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "75d0e8ab-d0c4-4dfa-a84a-49fd63600f51": {"node_ids": ["1943d3d5-d9c2-45f2-8aaf-af8c74b7f76f"], "metadata": {"page_label": "19", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "1cc38aa7-4da3-4b3c-a408-45a84d3d2687": {"node_ids": ["513e7c52-dc36-4b8d-9a03-d32e742ea2d6"], "metadata": {"page_label": "20", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d1b6969f-284b-46f7-a911-ecbd1c7137ba": {"node_ids": ["4d29a749-b4cb-47a8-86bf-ca849b512905"], "metadata": {"page_label": "21", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "29303b87-5b17-4981-bf4b-1df150265b8d": {"node_ids": ["6db0769a-b663-4f70-8724-e1c6dac9e473"], "metadata": {"page_label": "22", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d9f95273-bbd7-4a36-b7a8-07ea36b4cbda": {"node_ids": ["535e9624-ebf4-431a-a747-e1f3dcd0dab1"], "metadata": {"page_label": "23", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "27347f3c-d786-44a0-ae08-7598a6389c83": {"node_ids": ["e2ab20c1-4764-4e66-8e57-e0a7c21dd8e6"], "metadata": {"page_label": "24", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2af2219f-927f-45eb-8b7f-2873d09995bc": {"node_ids": ["51ffbd6e-dcd3-4a60-95db-d84bfd0d015e"], "metadata": {"page_label": "25", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d9628045-5fb8-40a0-a904-42e2fe288878": {"node_ids": ["d9602793-ce26-41c2-9978-790afece3257"], "metadata": {"page_label": "26", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "37b7d35d-8df8-4477-9014-465c38028df0": {"node_ids": ["54b2787f-8545-4792-bd23-8831ddfcaeca"], "metadata": {"page_label": "27", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "19fa1e25-d0a5-4cdd-99a1-3aeed43d68f4": {"node_ids": ["9a0f8746-e1e4-4e5c-8a54-c426181080fb"], "metadata": {"page_label": "28", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "5c7690a7-7247-4464-af17-c56d9aba6027": {"node_ids": ["7a3fbe37-ba3d-4e63-b9a8-8447b729885e"], "metadata": {"page_label": "29", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "b35f85d4-5f4a-4ce3-b3ea-fe53aee9f0b8": {"node_ids": ["da76fc9b-47bd-4287-aaa9-42701e9dcb94"], "metadata": {"page_label": "30", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2445ddcb-2574-48e4-8f83-493eed3883f8": {"node_ids": ["c5532d70-5b97-450d-88ca-0f215e59efe4"], "metadata": {"page_label": "31", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2572a78b-eecd-410b-8d60-4f746834ddea": {"node_ids": ["25b00ce5-9df0-4a12-a55c-2da1339c28cf"], "metadata": {"page_label": "32", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "af0e608b-03c6-45e0-991f-daeda7ce47e3": {"node_ids": ["4689b3b8-8b39-4bb6-841d-c0bdfad057da"], "metadata": {"page_label": "33", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "aa0c01ea-6053-437e-b7fe-ae62d61ff1aa": {"node_ids": ["c4296247-008f-49ca-8d0a-6c550bee8c2b"], "metadata": {"page_label": "34", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "1d1dc523-1cc6-4d7c-9a4e-eb58c7d06c37": {"node_ids": ["205a6b82-638f-4b46-b0aa-aad9c269141f"], "metadata": {"page_label": "35", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "905c67b8-394a-49ee-b8ae-b9d008eab775": {"node_ids": ["10f50603-106c-4b40-875f-82f455775e1a"], "metadata": {"page_label": "36", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "64370351-d2a1-4fc4-913e-6e0693213290": {"node_ids": ["9c95a502-d337-44c2-906d-165966ca84a0"], "metadata": {"page_label": "37", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2e8f639c-33e9-4893-8a2d-51be97be0321": {"node_ids": ["461ac678-d3ac-454f-a627-af07dc6e0184"], "metadata": {"page_label": "38", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "83d6dab2-a3fc-4002-b8bc-e1cb58132a58": {"node_ids": ["b1f9b243-b7f8-4869-82cb-ea7c510d0496"], "metadata": {"page_label": "39", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "f7efaa37-121c-460c-8ed9-231e9cd52872": {"node_ids": ["6553587c-43ac-4e8e-a574-78cdf89064bf"], "metadata": {"page_label": "40", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d578e233-64b0-49a1-a6ff-85c569042d81": {"node_ids": ["c3b3b908-4889-42c7-b85c-57f65805be45"], "metadata": {"page_label": "41", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "8542d4c3-087f-4cff-a8ef-97bb36b6a73f": {"node_ids": ["cd77ed0c-64db-4bd5-b818-55c95f22cb18"], "metadata": {"page_label": "42", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "6adf53a3-8ea5-4aee-bec9-5dc812a3e1d9": {"node_ids": ["59f67653-3696-418c-8df3-96cc09768e04"], "metadata": {"page_label": "43", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "3e8dc8ea-8e0e-47ad-bf00-1219ed8325e9": {"node_ids": ["26f896ef-a475-4ca2-90a8-67a71bafbb07"], "metadata": {"page_label": "44", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "6142f352-8384-40a6-8386-7bee74c0bf79": {"node_ids": ["a55c601d-3a48-41d1-9c91-f7bbfd993978"], "metadata": {"page_label": "45", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "903743f0-e677-4472-b121-6ddc922aa647": {"node_ids": ["000bed21-98b0-4e2d-bcaf-a4d4374b04db"], "metadata": {"page_label": "46", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "4bf4bcc8-97b0-41a0-9476-75a1007205a0": {"node_ids": ["8900f060-4536-4ea1-ac07-b12731a511e8"], "metadata": {"page_label": "47", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "404c9be4-2f96-49a2-9f1e-3c4034b0b7af": {"node_ids": ["61b8dac7-361a-414a-9977-cee0fc2c2ca0"], "metadata": {"page_label": "48", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "f9a49bcd-ff93-491a-9e31-fc4af4104fce": {"node_ids": ["c0dc19d8-e01d-419f-9385-6ccd67f4a6f2"], "metadata": {"page_label": "49", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "483ba301-d409-4560-b523-23ba88bcce6a": {"node_ids": ["82309be0-89fd-4e8f-a122-64dd28979a8f"], "metadata": {"page_label": "50", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "e0523389-20f5-445a-8be4-ffdf20b243dc": {"node_ids": ["4cdc3908-31f4-4e6f-8430-685c456d5f0a"], "metadata": {"page_label": "51", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "a689957f-2b45-4270-9315-d44f7e747693": {"node_ids": ["7d1fbb41-44b5-45c8-995d-22823d60c0a3"], "metadata": {"page_label": "52", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "76ca92c4-8a2c-4b8d-a63f-7a473f488343": {"node_ids": ["be309a96-cc75-4df3-9b17-371b12fc8611"], "metadata": {"page_label": "53", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "33f11817-0fc2-498f-8923-d3e8643bd5b7": {"node_ids": ["6224c3ad-9729-4adf-b36d-c1b79a68e546"], "metadata": {"page_label": "54", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "9ac99685-1149-4915-8188-e4d4183145b9": {"node_ids": ["9c00d221-6b11-41f3-9d47-d6bc387e60a3"], "metadata": {"page_label": "55", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "f7fb1e14-07a9-480f-ad34-f574849ab35c": {"node_ids": ["1bd24ee1-603c-4d7e-87f3-f252ee0a3c50"], "metadata": {"page_label": "56", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "3416f0e1-58f0-4c4f-85fc-01b8981715ff": {"node_ids": ["eb733c47-1299-4745-8c1b-71b0593783c4"], "metadata": {"page_label": "57", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "072ed527-4901-4eb0-91df-eb8615d08a1b": {"node_ids": ["e3526de2-761f-48e5-96db-865f61dc341c"], "metadata": {"page_label": "58", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "07b4fb86-a5bf-4fc5-b626-9bbc5d3cf6e8": {"node_ids": ["b83594f2-d064-4676-9c71-3288df8f1caa"], "metadata": {"page_label": "59", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "b96a1d9f-778e-4e73-b939-a58cfd5799fe": {"node_ids": ["db527b50-093d-4be0-b02d-117ada4109fb"], "metadata": {"page_label": "60", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "23a0842e-dfec-4fc6-9db3-74c20e0ccc23": {"node_ids": ["8e204855-41eb-486d-961b-7e2f0c095d67"], "metadata": {"page_label": "61", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d5928ffe-1e5a-4227-ace5-4b9c91754116": {"node_ids": ["70f988c3-fc79-4486-a022-6ca37b29c91a"], "metadata": {"page_label": "62", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "1e0494aa-374d-4f0b-8128-021eb99160fb": {"node_ids": ["2edfdfea-2983-434c-81a0-3d63a865ca17"], "metadata": {"page_label": "63", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "f817a39e-d2a8-48a5-99fa-a76404a4bede": {"node_ids": ["e17eddfb-7f3e-4b1f-af1a-fa1021db04d3"], "metadata": {"page_label": "64", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "7175f4ab-5bd2-49bd-b78c-02a906a4b31b": {"node_ids": ["497cf475-5ee8-4436-b041-d60ef7d8ae52"], "metadata": {"page_label": "65", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "df695d3f-0a1b-4551-9acd-bb5da02f8070": {"node_ids": ["e208619d-5b31-4c9f-91d5-a8b3a50a7ca1"], "metadata": {"page_label": "66", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "12d1fd01-3f56-4cc5-aac9-f541f7d48507": {"node_ids": ["ea4b4808-9b42-4d1f-8253-fc8f030d5340"], "metadata": {"page_label": "67", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2977b52a-948e-4577-95fe-d99dbf606a1c": {"node_ids": ["bbc38b25-288f-42a9-8dfd-38fda9831886"], "metadata": {"page_label": "68", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "be07c1ee-233a-437d-b3cf-2ca52c5fd3ee": {"node_ids": ["7e2ed22d-bda8-4c59-b34a-4fbbe412074b"], "metadata": {"page_label": "69", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "17ed5e70-8da2-4b37-b9ff-b39c9bfa42a7": {"node_ids": ["bdd237b0-622d-46b9-97ef-5367b1cf8ce0"], "metadata": {"page_label": "70", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "903a00ea-2cc4-4917-aa2d-7937291b0a2d": {"node_ids": ["e57bdfa1-c06b-451d-b83f-434bcd4b8daa"], "metadata": {"page_label": "71", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "f09bf8da-568b-4206-8d49-65332490f743": {"node_ids": ["4e6d4621-ff3a-4ddf-91cd-59c7c5855e83"], "metadata": {"page_label": "72", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "c4593348-961f-4dff-8d9b-9d95a54ad6b0": {"node_ids": ["7eec4a61-4ee1-4b0d-bae5-d2bb99cc3139"], "metadata": {"page_label": "73", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2ad86828-6c41-49f3-aeaf-8aaa580586f4": {"node_ids": ["3061e559-92c9-46c8-9918-4cedbfe9119c"], "metadata": {"page_label": "74", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "568093a7-43f9-4f82-8944-e9ae6bfc452b": {"node_ids": ["593581d7-b533-4d53-9967-875e03be80ec"], "metadata": {"page_label": "75", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "093809fc-7073-4ee6-b44e-4466c071226a": {"node_ids": ["11901222-84be-4237-907d-3abbef4b3c5b"], "metadata": {"page_label": "76", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "a5af767e-50de-4153-9a95-652dd66f50f2": {"node_ids": ["f4bc69be-f26b-4b83-867d-3cfc7d763ca9"], "metadata": {"page_label": "77", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "06221063-2142-4fcb-96f0-6f94280aed9b": {"node_ids": ["0e96a1d6-584a-410a-8e72-fbee41f0fbd1"], "metadata": {"page_label": "78", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "027ccd47-f71e-4f57-82f5-e500ee8cd3dc": {"node_ids": ["8ed04b11-73e5-44c4-9414-5527e6cd7ce4"], "metadata": {"page_label": "79", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "8679f7a8-af2a-4b9a-ad64-ed3678d32690": {"node_ids": ["c560f025-4430-4766-bdc4-7c08c79005e8"], "metadata": {"page_label": "80", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "1990a80b-e97b-438f-ad6f-9557b6237141": {"node_ids": ["18ab5689-ae90-46f3-b1dd-6e9b55fc337c"], "metadata": {"page_label": "81", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "0a2b331d-ec43-4bb9-85b2-d376d5fdecb1": {"node_ids": ["49104698-bbf4-4762-94b6-66ca212a65f8"], "metadata": {"page_label": "82", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "7e8c925a-5e1b-4d26-8350-a7c7559a1c1b": {"node_ids": ["104aece4-db9b-440b-965e-667c195897f7"], "metadata": {"page_label": "83", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "26ceacec-9391-47e1-8904-f2dd00fdf32f": {"node_ids": ["997f1f77-584a-48b6-a6be-7ee85998afcf"], "metadata": {"page_label": "84", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "12f88c88-9e93-4014-b2da-ce809b9f9171": {"node_ids": ["d3c23718-49dd-4b4a-bf8f-9a3d31c2d4cb"], "metadata": {"page_label": "85", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "bc682d98-57b8-412d-96e3-be2f54e7c538": {"node_ids": ["c57add6f-7995-41ab-9388-12d8924e0eab"], "metadata": {"page_label": "86", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "855d1dc4-4bdf-45b9-a634-7240674a8dd2": {"node_ids": ["0111afdb-673d-4d93-8a93-818fd0694fc7"], "metadata": {"page_label": "87", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "da8104d6-c5af-451c-9acb-89af70ca5ac9": {"node_ids": ["3747f70b-f026-4062-bf50-d6ff9340220f"], "metadata": {"page_label": "88", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "96eea20e-b904-4079-8891-fd96bd94475f": {"node_ids": ["97ea8c46-5282-4bdd-abfb-9dcb3351e26b"], "metadata": {"page_label": "89", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "7317eecb-1c81-471a-b6ec-e7cfb82d70e3": {"node_ids": ["2cf1ee9b-da65-4205-851b-9b9202172736"], "metadata": {"page_label": "90", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d17338d4-da21-470c-a412-383d469e67ba": {"node_ids": ["116674c0-ba90-4b8e-b47b-df6e9a6871a1"], "metadata": {"page_label": "91", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "d7cb9cbd-3d93-41ea-999a-a4e72fa940e6": {"node_ids": ["6e5468b5-39da-47d2-a3bf-d5aa4bd88ad3"], "metadata": {"page_label": "92", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}, "2870e0c2-9b42-459e-b7ba-d82fb2a56d68": {"node_ids": ["99e62204-0718-4abb-bd0d-91dfd19b5d16"], "metadata": {"page_label": "93", "file_name": "CS8601 Notes Mobile Computing.pdf", "file_path": "books\\CS8601 Notes Mobile Computing.pdf", "file_type": "application/pdf", "file_size": 3799886, "creation_date": "2024-02-11", "last_modified_date": "2023-12-28", "last_accessed_date": "2024-03-10"}}}}